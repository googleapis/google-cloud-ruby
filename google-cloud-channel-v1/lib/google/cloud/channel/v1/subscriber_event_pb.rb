# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/channel/v1/subscriber_event.proto

require 'google/protobuf'

require 'google/api/resource_pb'


descriptor_data = "\n.google/cloud/channel/v1/subscriber_event.proto\x12\x17google.cloud.channel.v1\x1a\x19google/api/resource.proto\"\xe4\x01\n\rCustomerEvent\x12;\n\x08\x63ustomer\x18\x01 \x01(\tB)\xfa\x41&\n$cloudchannel.googleapis.com/Customer\x12?\n\nevent_type\x18\x02 \x01(\x0e\x32+.google.cloud.channel.v1.CustomerEvent.Type\"U\n\x04Type\x12\x14\n\x10TYPE_UNSPECIFIED\x10\x00\x12\x1a\n\x16PRIMARY_DOMAIN_CHANGED\x10\x01\x12\x1b\n\x17PRIMARY_DOMAIN_VERIFIED\x10\x02\"\xb1\x03\n\x10\x45ntitlementEvent\x12\x41\n\x0b\x65ntitlement\x18\x01 \x01(\tB,\xfa\x41)\n\'cloudchannel.googleapis.com/Entitlement\x12\x42\n\nevent_type\x18\x02 \x01(\x0e\x32..google.cloud.channel.v1.EntitlementEvent.Type\"\x95\x02\n\x04Type\x12\x14\n\x10TYPE_UNSPECIFIED\x10\x00\x12\x0b\n\x07\x43REATED\x10\x01\x12\x17\n\x13PRICE_PLAN_SWITCHED\x10\x03\x12\x16\n\x12\x43OMMITMENT_CHANGED\x10\x04\x12\x0b\n\x07RENEWED\x10\x05\x12\r\n\tSUSPENDED\x10\x06\x12\r\n\tACTIVATED\x10\x07\x12\r\n\tCANCELLED\x10\x08\x12\x0f\n\x0bSKU_CHANGED\x10\t\x12\x1b\n\x17RENEWAL_SETTING_CHANGED\x10\n\x12\x18\n\x14PAID_SERVICE_STARTED\x10\x0b\x12\x1e\n\x1aLICENSE_ASSIGNMENT_CHANGED\x10\x0c\x12\x17\n\x13LICENSE_CAP_CHANGED\x10\r\"\xa4\x01\n\x0fSubscriberEvent\x12@\n\x0e\x63ustomer_event\x18\x01 \x01(\x0b\x32&.google.cloud.channel.v1.CustomerEventH\x00\x12\x46\n\x11\x65ntitlement_event\x18\x02 \x01(\x0b\x32).google.cloud.channel.v1.EntitlementEventH\x00\x42\x07\n\x05\x65ventBl\n\x1b\x63om.google.cloud.channel.v1B\x14SubscriberEventProtoP\x01Z5cloud.google.com/go/channel/apiv1/channelpb;channelpbb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module Channel
      module V1
        CustomerEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.channel.v1.CustomerEvent").msgclass
        CustomerEvent::Type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.channel.v1.CustomerEvent.Type").enummodule
        EntitlementEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.channel.v1.EntitlementEvent").msgclass
        EntitlementEvent::Type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.channel.v1.EntitlementEvent.Type").enummodule
        SubscriberEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.channel.v1.SubscriberEvent").msgclass
      end
    end
  end
end
