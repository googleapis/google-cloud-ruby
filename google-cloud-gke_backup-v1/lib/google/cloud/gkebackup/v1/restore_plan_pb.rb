# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/gkebackup/v1/restore_plan.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'
require 'google/cloud/gkebackup/v1/restore_pb'
require 'google/protobuf/timestamp_pb'


descriptor_data = "\n,google/cloud/gkebackup/v1/restore_plan.proto\x12\x19google.cloud.gkebackup.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\'google/cloud/gkebackup/v1/restore.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb4\x06\n\x0bRestorePlan\x12\x11\n\x04name\x18\x01 \x01(\tB\x03\xe0\x41\x03\x12\x10\n\x03uid\x18\x02 \x01(\tB\x03\xe0\x41\x03\x12\x34\n\x0b\x63reate_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x34\n\x0bupdate_time\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x18\n\x0b\x64\x65scription\x18\x05 \x01(\tB\x03\xe0\x41\x01\x12\x43\n\x0b\x62\x61\x63kup_plan\x18\x06 \x01(\tB.\xe0\x41\x05\xe0\x41\x02\xfa\x41%\n#gkebackup.googleapis.com/BackupPlan\x12<\n\x07\x63luster\x18\x07 \x01(\tB+\xe0\x41\x05\xe0\x41\x02\xfa\x41\"\n container.googleapis.com/Cluster\x12\x45\n\x0erestore_config\x18\x08 \x01(\x0b\x32(.google.cloud.gkebackup.v1.RestoreConfigB\x03\xe0\x41\x02\x12G\n\x06labels\x18\t \x03(\x0b\x32\x32.google.cloud.gkebackup.v1.RestorePlan.LabelsEntryB\x03\xe0\x41\x01\x12\x11\n\x04\x65tag\x18\n \x01(\tB\x03\xe0\x41\x03\x12@\n\x05state\x18\x0b \x01(\x0e\x32,.google.cloud.gkebackup.v1.RestorePlan.StateB\x03\xe0\x41\x03\x12\x19\n\x0cstate_reason\x18\x0c \x01(\tB\x03\xe0\x41\x03\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"X\n\x05State\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\x13\n\x0f\x43LUSTER_PENDING\x10\x01\x12\t\n\x05READY\x10\x02\x12\n\n\x06\x46\x41ILED\x10\x03\x12\x0c\n\x08\x44\x45LETING\x10\x04:n\xea\x41k\n$gkebackup.googleapis.com/RestorePlan\x12\x43projects/{project}/locations/{location}/restorePlans/{restore_plan}B\xc7\x01\n\x1d\x63om.google.cloud.gkebackup.v1B\x10RestorePlanProtoP\x01Z;cloud.google.com/go/gkebackup/apiv1/gkebackuppb;gkebackuppb\xaa\x02\x19Google.Cloud.GkeBackup.V1\xca\x02\x19Google\\Cloud\\GkeBackup\\V1\xea\x02\x1cGoogle::Cloud::GkeBackup::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.protobuf.Timestamp", "google/protobuf/timestamp.proto"],
    ["google.cloud.gkebackup.v1.RestoreConfig", "google/cloud/gkebackup/v1/restore.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module GkeBackup
      module V1
        RestorePlan = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.gkebackup.v1.RestorePlan").msgclass
        RestorePlan::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.gkebackup.v1.RestorePlan.State").enummodule
      end
    end
  end
end
