# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/notebooks/v2/diagnostic_config.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'


descriptor_data = "\n1google/cloud/notebooks/v2/diagnostic_config.proto\x12\x19google.cloud.notebooks.v2\x1a\x1fgoogle/api/field_behavior.proto\"\xbb\x01\n\x10\x44iagnosticConfig\x12\x17\n\ngcs_bucket\x18\x01 \x01(\tB\x03\xe0\x41\x02\x12\x1a\n\rrelative_path\x18\x02 \x01(\tB\x03\xe0\x41\x01\x12\x1f\n\x12\x65nable_repair_flag\x18\x03 \x01(\x08\x42\x03\xe0\x41\x01\x12\'\n\x1a\x65nable_packet_capture_flag\x18\x04 \x01(\x08\x42\x03\xe0\x41\x01\x12(\n\x1b\x65nable_copy_home_files_flag\x18\x05 \x01(\x08\x42\x03\xe0\x41\x01\x42\xcc\x01\n\x1d\x63om.google.cloud.notebooks.v2B\x15\x44iagnosticConfigProtoP\x01Z;cloud.google.com/go/notebooks/apiv2/notebookspb;notebookspb\xaa\x02\x19Google.Cloud.Notebooks.V2\xca\x02\x19Google\\Cloud\\Notebooks\\V2\xea\x02\x1cGoogle::Cloud::Notebooks::V2b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module Notebooks
      module V2
        DiagnosticConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.notebooks.v2.DiagnosticConfig").msgclass
      end
    end
  end
end
