# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# AUTO GENERATED BY GAPIC

require "simplecov"
require "minitest/autorun"
require "minitest/spec"

require "google/cloud/speech"

class SpeechSmokeTest < Minitest::Test
  def test_recognize
    speech_client = Google::Cloud::Speech.speech
    config = {
      language_code: "en-US",
      sample_rate_hertz: 44100,
      encoding: :FLAC
    }
    audio = {
      uri: "gs://cloud-samples-data/speech/brooklyn_bridge.flac"
    }
    response = speech_client.recognize config: config, audio: audio
    refute_equal 0, response.results.size
  end

  def test_long_running_recognize
    speech_client = Google::Cloud::Speech.speech
    config = {
      language_code: "en-US",
      sample_rate_hertz: 44100,
      encoding: :FLAC
    }
    audio = {
      uri: "gs://cloud-samples-data/speech/brooklyn_bridge.flac"
    }
    op = speech_client.long_running_recognize config: config, audio: audio
    # use the operations_client
    ops = speech_client.operations_client.list_operations(::Google::Longrunning::ListOperationsRequest.new)
    assert ops.count > 0
    op = speech_client.operations_client.get_operation name: op.name
    retry_config = ::Gapic::Operation::RetryPolicy.new initial_delay: 1, multiplier: 2, max_delay: 2, timeout: 10
    op.wait_until_done! retry_policy: retry_config
    assert op.response?
    refute_equal 0, op.response.results.size
  end
end
