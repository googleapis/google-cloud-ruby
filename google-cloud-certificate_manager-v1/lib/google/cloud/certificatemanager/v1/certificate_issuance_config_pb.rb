# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/certificatemanager/v1/certificate_issuance_config.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'
require 'google/protobuf/duration_pb'
require 'google/protobuf/timestamp_pb'


descriptor_data = "\nDgoogle/cloud/certificatemanager/v1/certificate_issuance_config.proto\x12\"google.cloud.certificatemanager.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xab\x01\n%ListCertificateIssuanceConfigsRequest\x12\x39\n\x06parent\x18\x01 \x01(\tB)\xe0\x41\x02\xfa\x41#\n!locations.googleapis.com/Location\x12\x11\n\tpage_size\x18\x02 \x01(\x05\x12\x12\n\npage_token\x18\x03 \x01(\t\x12\x0e\n\x06\x66ilter\x18\x04 \x01(\t\x12\x10\n\x08order_by\x18\x05 \x01(\t\"\xbb\x01\n&ListCertificateIssuanceConfigsResponse\x12\x63\n\x1c\x63\x65rtificate_issuance_configs\x18\x01 \x03(\x0b\x32=.google.cloud.certificatemanager.v1.CertificateIssuanceConfig\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\x12\x13\n\x0bunreachable\x18\x03 \x03(\t\"x\n#GetCertificateIssuanceConfigRequest\x12Q\n\x04name\x18\x01 \x01(\tBC\xe0\x41\x02\xfa\x41=\n;certificatemanager.googleapis.com/CertificateIssuanceConfig\"\xf9\x01\n&CreateCertificateIssuanceConfigRequest\x12\x39\n\x06parent\x18\x01 \x01(\tB)\xe0\x41\x02\xfa\x41#\n!locations.googleapis.com/Location\x12+\n\x1e\x63\x65rtificate_issuance_config_id\x18\x02 \x01(\tB\x03\xe0\x41\x02\x12g\n\x1b\x63\x65rtificate_issuance_config\x18\x03 \x01(\x0b\x32=.google.cloud.certificatemanager.v1.CertificateIssuanceConfigB\x03\xe0\x41\x02\"{\n&DeleteCertificateIssuanceConfigRequest\x12Q\n\x04name\x18\x01 \x01(\tBC\xe0\x41\x02\xfa\x41=\n;certificatemanager.googleapis.com/CertificateIssuanceConfig\"\xa3\t\n\x19\x43\x65rtificateIssuanceConfig\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x34\n\x0b\x63reate_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x34\n\x0bupdate_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12Y\n\x06labels\x18\x04 \x03(\x0b\x32I.google.cloud.certificatemanager.v1.CertificateIssuanceConfig.LabelsEntry\x12\x13\n\x0b\x64\x65scription\x18\x05 \x01(\t\x12\x83\x01\n\x1c\x63\x65rtificate_authority_config\x18\x06 \x01(\x0b\x32X.google.cloud.certificatemanager.v1.CertificateIssuanceConfig.CertificateAuthorityConfigB\x03\xe0\x41\x02\x12\x30\n\x08lifetime\x18\x07 \x01(\x0b\x32\x19.google.protobuf.DurationB\x03\xe0\x41\x02\x12\'\n\x1arotation_window_percentage\x18\x08 \x01(\x05\x42\x03\xe0\x41\x02\x12\x66\n\rkey_algorithm\x18\t \x01(\x0e\x32J.google.cloud.certificatemanager.v1.CertificateIssuanceConfig.KeyAlgorithmB\x03\xe0\x41\x02\x1a\xb0\x02\n\x1a\x43\x65rtificateAuthorityConfig\x12\xaa\x01\n$certificate_authority_service_config\x18\x01 \x01(\x0b\x32z.google.cloud.certificatemanager.v1.CertificateIssuanceConfig.CertificateAuthorityConfig.CertificateAuthorityServiceConfigH\x00\x1a]\n!CertificateAuthorityServiceConfig\x12\x38\n\x07\x63\x61_pool\x18\x01 \x01(\tB\'\xe0\x41\x02\xfa\x41!\n\x1fprivateca.googleapis.com/CaPoolB\x06\n\x04kind\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"K\n\x0cKeyAlgorithm\x12\x1d\n\x19KEY_ALGORITHM_UNSPECIFIED\x10\x00\x12\x0c\n\x08RSA_2048\x10\x01\x12\x0e\n\nECDSA_P256\x10\x04:\xa3\x01\xea\x41\x9f\x01\n;certificatemanager.googleapis.com/CertificateIssuanceConfig\x12`projects/{project}/locations/{location}/certificateIssuanceConfigs/{certificate_issuance_config}B\xf3\x02\n&com.google.cloud.certificatemanager.v1B\x1e\x43\x65rtificateIssuanceConfigProtoP\x01ZVcloud.google.com/go/certificatemanager/apiv1/certificatemanagerpb;certificatemanagerpb\xaa\x02\"Google.Cloud.CertificateManager.V1\xca\x02\"Google\\Cloud\\CertificateManager\\V1\xea\x02%Google::Cloud::CertificateManager::V1\xea\x41\\\n\x1fprivateca.googleapis.com/CaPool\x12\x39projects/{project}/locations/{location}/caPools/{ca_pool}b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.protobuf.Timestamp", "google/protobuf/timestamp.proto"],
    ["google.protobuf.Duration", "google/protobuf/duration.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module CertificateManager
      module V1
        ListCertificateIssuanceConfigsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.certificatemanager.v1.ListCertificateIssuanceConfigsRequest").msgclass
        ListCertificateIssuanceConfigsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.certificatemanager.v1.ListCertificateIssuanceConfigsResponse").msgclass
        GetCertificateIssuanceConfigRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.certificatemanager.v1.GetCertificateIssuanceConfigRequest").msgclass
        CreateCertificateIssuanceConfigRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.certificatemanager.v1.CreateCertificateIssuanceConfigRequest").msgclass
        DeleteCertificateIssuanceConfigRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.certificatemanager.v1.DeleteCertificateIssuanceConfigRequest").msgclass
        CertificateIssuanceConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.certificatemanager.v1.CertificateIssuanceConfig").msgclass
        CertificateIssuanceConfig::CertificateAuthorityConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.certificatemanager.v1.CertificateIssuanceConfig.CertificateAuthorityConfig").msgclass
        CertificateIssuanceConfig::CertificateAuthorityConfig::CertificateAuthorityServiceConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.certificatemanager.v1.CertificateIssuanceConfig.CertificateAuthorityConfig.CertificateAuthorityServiceConfig").msgclass
        CertificateIssuanceConfig::KeyAlgorithm = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.certificatemanager.v1.CertificateIssuanceConfig.KeyAlgorithm").enummodule
      end
    end
  end
end
