# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/monitoring/v3/service_service.proto for package 'Google.Cloud.Monitoring.V3'
# Original file comments:
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'google/monitoring/v3/service_service_pb'

module Google
  module Cloud
    module Monitoring
      module V3
        module ServiceMonitoringService
          # The Cloud Monitoring Service-Oriented Monitoring API has endpoints for
          # managing and querying aspects of a workspace's services. These include the
          # `Service`'s monitored resources, its Service-Level Objectives, and a taxonomy
          # of categorized Health Metrics.
          class Service

            include GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'google.monitoring.v3.ServiceMonitoringService'

            # Create a `Service`.
            rpc :CreateService, ::Google::Cloud::Monitoring::V3::CreateServiceRequest, ::Google::Cloud::Monitoring::V3::Service
            # Get the named `Service`.
            rpc :GetService, ::Google::Cloud::Monitoring::V3::GetServiceRequest, ::Google::Cloud::Monitoring::V3::Service
            # List `Service`s for this workspace.
            rpc :ListServices, ::Google::Cloud::Monitoring::V3::ListServicesRequest, ::Google::Cloud::Monitoring::V3::ListServicesResponse
            # Update this `Service`.
            rpc :UpdateService, ::Google::Cloud::Monitoring::V3::UpdateServiceRequest, ::Google::Cloud::Monitoring::V3::Service
            # Soft delete this `Service`.
            rpc :DeleteService, ::Google::Cloud::Monitoring::V3::DeleteServiceRequest, ::Google::Protobuf::Empty
            # Create a `ServiceLevelObjective` for the given `Service`.
            rpc :CreateServiceLevelObjective, ::Google::Cloud::Monitoring::V3::CreateServiceLevelObjectiveRequest, ::Google::Cloud::Monitoring::V3::ServiceLevelObjective
            # Get a `ServiceLevelObjective` by name.
            rpc :GetServiceLevelObjective, ::Google::Cloud::Monitoring::V3::GetServiceLevelObjectiveRequest, ::Google::Cloud::Monitoring::V3::ServiceLevelObjective
            # List the `ServiceLevelObjective`s for the given `Service`.
            rpc :ListServiceLevelObjectives, ::Google::Cloud::Monitoring::V3::ListServiceLevelObjectivesRequest, ::Google::Cloud::Monitoring::V3::ListServiceLevelObjectivesResponse
            # Update the given `ServiceLevelObjective`.
            rpc :UpdateServiceLevelObjective, ::Google::Cloud::Monitoring::V3::UpdateServiceLevelObjectiveRequest, ::Google::Cloud::Monitoring::V3::ServiceLevelObjective
            # Delete the given `ServiceLevelObjective`.
            rpc :DeleteServiceLevelObjective, ::Google::Cloud::Monitoring::V3::DeleteServiceLevelObjectiveRequest, ::Google::Protobuf::Empty
          end

          Stub = Service.rpc_stub_class
        end
      end
    end
  end
end
