{
  "generated": [
    ".gitignore",
    ".repo-metadata.json",
    ".rubocop.yml",
    ".toys.rb",
    ".yardopts",
    "AUTHENTICATION.md",
    "CHANGELOG.md",
    "Gemfile",
    "LICENSE.md",
    "README.md",
    "Rakefile",
    "gapic_metadata.json",
    "google-cloud-managed_kafka-schema_registry-v1.gemspec",
    "lib/google-cloud-managed_kafka-schema_registry-v1.rb",
    "lib/google/cloud/managed_kafka/schema_registry/v1.rb",
    "lib/google/cloud/managed_kafka/schema_registry/v1/bindings_override.rb",
    "lib/google/cloud/managed_kafka/schema_registry/v1/managed_schema_registry.rb",
    "lib/google/cloud/managed_kafka/schema_registry/v1/managed_schema_registry/client.rb",
    "lib/google/cloud/managed_kafka/schema_registry/v1/managed_schema_registry/credentials.rb",
    "lib/google/cloud/managed_kafka/schema_registry/v1/managed_schema_registry/paths.rb",
    "lib/google/cloud/managed_kafka/schema_registry/v1/managed_schema_registry/rest.rb",
    "lib/google/cloud/managed_kafka/schema_registry/v1/managed_schema_registry/rest/client.rb",
    "lib/google/cloud/managed_kafka/schema_registry/v1/managed_schema_registry/rest/service_stub.rb",
    "lib/google/cloud/managed_kafka/schema_registry/v1/rest.rb",
    "lib/google/cloud/managed_kafka/schema_registry/v1/version.rb",
    "lib/google/cloud/managedkafka/schemaregistry/v1/schema_registry_pb.rb",
    "lib/google/cloud/managedkafka/schemaregistry/v1/schema_registry_resources_pb.rb",
    "lib/google/cloud/managedkafka/schemaregistry/v1/schema_registry_services_pb.rb",
    "proto_docs/README.md",
    "proto_docs/google/api/client.rb",
    "proto_docs/google/api/field_behavior.rb",
    "proto_docs/google/api/httpbody.rb",
    "proto_docs/google/api/launch_stage.rb",
    "proto_docs/google/api/resource.rb",
    "proto_docs/google/cloud/managedkafka/schemaregistry/v1/schema_registry.rb",
    "proto_docs/google/cloud/managedkafka/schemaregistry/v1/schema_registry_resources.rb",
    "proto_docs/google/protobuf/any.rb",
    "proto_docs/google/protobuf/duration.rb",
    "proto_docs/google/protobuf/empty.rb",
    "snippets/Gemfile",
    "snippets/managed_schema_registry/check_compatibility.rb",
    "snippets/managed_schema_registry/create_schema_registry.rb",
    "snippets/managed_schema_registry/create_version.rb",
    "snippets/managed_schema_registry/delete_schema_config.rb",
    "snippets/managed_schema_registry/delete_schema_mode.rb",
    "snippets/managed_schema_registry/delete_schema_registry.rb",
    "snippets/managed_schema_registry/delete_subject.rb",
    "snippets/managed_schema_registry/delete_version.rb",
    "snippets/managed_schema_registry/get_context.rb",
    "snippets/managed_schema_registry/get_raw_schema.rb",
    "snippets/managed_schema_registry/get_raw_schema_version.rb",
    "snippets/managed_schema_registry/get_schema.rb",
    "snippets/managed_schema_registry/get_schema_config.rb",
    "snippets/managed_schema_registry/get_schema_mode.rb",
    "snippets/managed_schema_registry/get_schema_registry.rb",
    "snippets/managed_schema_registry/get_version.rb",
    "snippets/managed_schema_registry/list_contexts.rb",
    "snippets/managed_schema_registry/list_referenced_schemas.rb",
    "snippets/managed_schema_registry/list_schema_registries.rb",
    "snippets/managed_schema_registry/list_schema_types.rb",
    "snippets/managed_schema_registry/list_schema_versions.rb",
    "snippets/managed_schema_registry/list_subjects.rb",
    "snippets/managed_schema_registry/list_subjects_by_schema_id.rb",
    "snippets/managed_schema_registry/list_versions.rb",
    "snippets/managed_schema_registry/lookup_version.rb",
    "snippets/managed_schema_registry/update_schema_config.rb",
    "snippets/managed_schema_registry/update_schema_mode.rb",
    "snippets/snippet_metadata_google.cloud.managedkafka.schemaregistry.v1.json",
    "test/google/cloud/managed_kafka/schema_registry/v1/managed_schema_registry_paths_test.rb",
    "test/google/cloud/managed_kafka/schema_registry/v1/managed_schema_registry_rest_test.rb",
    "test/google/cloud/managed_kafka/schema_registry/v1/managed_schema_registry_test.rb",
    "test/helper.rb"
  ],
  "static": [
    ".OwlBot.yaml"
  ]
}
