# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/managedkafka/schemaregistry/v1/schema_registry.proto

require 'google/protobuf'

require 'google/api/annotations_pb'
require 'google/api/client_pb'
require 'google/api/field_behavior_pb'
require 'google/api/httpbody_pb'
require 'google/api/resource_pb'
require 'google/cloud/managedkafka/schemaregistry/v1/schema_registry_resources_pb'
require 'google/protobuf/empty_pb'


descriptor_data = "\nAgoogle/cloud/managedkafka/schemaregistry/v1/schema_registry.proto\x12+google.cloud.managedkafka.schemaregistry.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/httpbody.proto\x1a\x19google/api/resource.proto\x1aKgoogle/cloud/managedkafka/schemaregistry/v1/schema_registry_resources.proto\x1a\x1bgoogle/protobuf/empty.proto\"\\\n\x18GetSchemaRegistryRequest\x12@\n\x04name\x18\x01 \x01(\tB2\xe0\x41\x02\xfa\x41,\n*managedkafka.googleapis.com/SchemaRegistry\"8\n\x1bListSchemaRegistriesRequest\x12\x19\n\x06parent\x18\x01 \x01(\tB\t\xe0\x41\x02\xfa\x41\x03\n\x01*\"v\n\x1cListSchemaRegistriesResponse\x12V\n\x11schema_registries\x18\x01 \x03(\x0b\x32;.google.cloud.managedkafka.schemaregistry.v1.SchemaRegistry\"\xb4\x01\n\x1b\x43reateSchemaRegistryRequest\x12\x19\n\x06parent\x18\x01 \x01(\tB\t\xe0\x41\x02\xfa\x41\x03\n\x01*\x12\x1f\n\x12schema_registry_id\x18\x02 \x01(\tB\x03\xe0\x41\x02\x12Y\n\x0fschema_registry\x18\x03 \x01(\x0b\x32;.google.cloud.managedkafka.schemaregistry.v1.SchemaRegistryB\x03\xe0\x41\x02\"_\n\x1b\x44\x65leteSchemaRegistryRequest\x12@\n\x04name\x18\x01 \x01(\tB2\xe0\x41\x02\xfa\x41,\n*managedkafka.googleapis.com/SchemaRegistry\"T\n\x11GetContextRequest\x12?\n\x04name\x18\x01 \x01(\tB1\xe0\x41\x02\xfa\x41+\n)managedkafka.googleapis.com/SchemaContext\"Y\n\x13ListContextsRequest\x12\x42\n\x06parent\x18\x01 \x01(\tB2\xe0\x41\x02\xfa\x41,\n*managedkafka.googleapis.com/SchemaRegistry\"s\n\x10GetSchemaRequest\x12\x38\n\x04name\x18\x01 \x01(\tB*\xe0\x41\x02\xfa\x41$\n\"managedkafka.googleapis.com/Schema\x12\x19\n\x07subject\x18\x02 \x01(\tB\x03\xe0\x41\x01H\x00\x88\x01\x01\x42\n\n\x08_subject\"3\n\x16ListSchemaTypesRequest\x12\x19\n\x06parent\x18\x01 \x01(\tB\t\xe0\x41\x02\xfa\x41\x03\n\x01*\"\xa5\x01\n\x19ListSchemaVersionsRequest\x12:\n\x06parent\x18\x01 \x01(\tB*\xe0\x41\x02\xfa\x41$\n\"managedkafka.googleapis.com/Schema\x12\x19\n\x07subject\x18\x02 \x01(\tB\x03\xe0\x41\x01H\x00\x88\x01\x01\x12\x19\n\x07\x64\x65leted\x18\x03 \x01(\x08\x42\x03\xe0\x41\x01H\x01\x88\x01\x01\x42\n\n\x08_subjectB\n\n\x08_deleted\"\x8c\x01\n\x13ListSubjectsRequest\x12\x19\n\x06parent\x18\x01 \x01(\tB\t\xe0\x41\x02\xfa\x41\x03\n\x01*\x12 \n\x0esubject_prefix\x18\x02 \x01(\tB\x03\xe0\x41\x01H\x00\x88\x01\x01\x12\x19\n\x07\x64\x65leted\x18\x03 \x01(\x08\x42\x03\xe0\x41\x01H\x01\x88\x01\x01\x42\x11\n\x0f_subject_prefixB\n\n\x08_deleted\"\x88\x01\n\x1dListSubjectsBySchemaIdRequest\x12\x19\n\x06parent\x18\x01 \x01(\tB\t\xe0\x41\x02\xfa\x41\x03\n\x01*\x12\x19\n\x07subject\x18\x02 \x01(\tB\x03\xe0\x41\x01H\x00\x88\x01\x01\x12\x19\n\x07\x64\x65leted\x18\x03 \x01(\x08\x42\x03\xe0\x41\x01H\x01\x88\x01\x01\x42\n\n\x08_subjectB\n\n\x08_deleted\"\x7f\n\x13ListVersionsRequest\x12\x41\n\x06parent\x18\x01 \x01(\tB1\xe0\x41\x02\xfa\x41+\n)managedkafka.googleapis.com/SchemaSubject\x12\x19\n\x07\x64\x65leted\x18\x02 \x01(\x08\x42\x03\xe0\x41\x01H\x00\x88\x01\x01\x42\n\n\x08_deleted\"\x82\x01\n\x14\x44\x65leteSubjectRequest\x12?\n\x04name\x18\x01 \x01(\tB1\xe0\x41\x02\xfa\x41+\n)managedkafka.googleapis.com/SchemaSubject\x12\x1b\n\tpermanent\x18\x02 \x01(\x08\x42\x03\xe0\x41\x01H\x00\x88\x01\x01\x42\x0c\n\n_permanent\"{\n\x11GetVersionRequest\x12?\n\x04name\x18\x01 \x01(\tB1\xe0\x41\x02\xfa\x41+\n)managedkafka.googleapis.com/SchemaVersion\x12\x19\n\x07\x64\x65leted\x18\x02 \x01(\x08\x42\x03\xe0\x41\x01H\x00\x88\x01\x01\x42\n\n\x08_deleted\"\xaa\x03\n\x14\x43reateVersionRequest\x12\x41\n\x06parent\x18\x01 \x01(\tB1\xe0\x41\x02\xfa\x41+\n)managedkafka.googleapis.com/SchemaSubject\x12\x19\n\x07version\x18\x02 \x01(\x05\x42\x03\xe0\x41\x01H\x00\x88\x01\x01\x12\x14\n\x02id\x18\x03 \x01(\x05\x42\x03\xe0\x41\x01H\x01\x88\x01\x01\x12]\n\x0bschema_type\x18\x04 \x01(\x0e\x32>.google.cloud.managedkafka.schemaregistry.v1.Schema.SchemaTypeB\x03\xe0\x41\x01H\x02\x88\x01\x01\x12\x13\n\x06schema\x18\x05 \x01(\tB\x03\xe0\x41\x02\x12\\\n\nreferences\x18\x06 \x03(\x0b\x32\x43.google.cloud.managedkafka.schemaregistry.v1.Schema.SchemaReferenceB\x03\xe0\x41\x01\x12\x1b\n\tnormalize\x18\x07 \x01(\x08\x42\x03\xe0\x41\x01H\x03\x88\x01\x01\x42\n\n\x08_versionB\x05\n\x03_idB\x0e\n\x0c_schema_typeB\x0c\n\n_normalize\"#\n\x15\x43reateVersionResponse\x12\n\n\x02id\x18\x01 \x01(\x05\"\x8d\x03\n\x14LookupVersionRequest\x12\x41\n\x06parent\x18\x01 \x01(\tB1\xe0\x41\x02\xfa\x41+\n)managedkafka.googleapis.com/SchemaSubject\x12]\n\x0bschema_type\x18\x02 \x01(\x0e\x32>.google.cloud.managedkafka.schemaregistry.v1.Schema.SchemaTypeB\x03\xe0\x41\x01H\x00\x88\x01\x01\x12\x13\n\x06schema\x18\x03 \x01(\tB\x03\xe0\x41\x02\x12\\\n\nreferences\x18\x04 \x03(\x0b\x32\x43.google.cloud.managedkafka.schemaregistry.v1.Schema.SchemaReferenceB\x03\xe0\x41\x01\x12\x1b\n\tnormalize\x18\x05 \x01(\x08\x42\x03\xe0\x41\x01H\x01\x88\x01\x01\x12\x19\n\x07\x64\x65leted\x18\x06 \x01(\x08\x42\x03\xe0\x41\x01H\x02\x88\x01\x01\x42\x0e\n\x0c_schema_typeB\x0c\n\n_normalizeB\n\n\x08_deleted\"\x82\x01\n\x14\x44\x65leteVersionRequest\x12?\n\x04name\x18\x01 \x01(\tB1\xe0\x41\x02\xfa\x41+\n)managedkafka.googleapis.com/SchemaVersion\x12\x1b\n\tpermanent\x18\x02 \x01(\x08\x42\x03\xe0\x41\x01H\x00\x88\x01\x01\x42\x0c\n\n_permanent\"a\n\x1cListReferencedSchemasRequest\x12\x41\n\x06parent\x18\x01 \x01(\tB1\xe0\x41\x02\xfa\x41+\n)managedkafka.googleapis.com/SchemaVersion\"\xbd\x02\n\x19\x43heckCompatibilityRequest\x12\x17\n\x04name\x18\x01 \x01(\tB\t\xe0\x41\x02\xfa\x41\x03\n\x01*\x12]\n\x0bschema_type\x18\x02 \x01(\x0e\x32>.google.cloud.managedkafka.schemaregistry.v1.Schema.SchemaTypeB\x03\xe0\x41\x01H\x00\x88\x01\x01\x12\x13\n\x06schema\x18\x03 \x01(\tB\x03\xe0\x41\x02\x12\\\n\nreferences\x18\x04 \x03(\x0b\x32\x43.google.cloud.managedkafka.schemaregistry.v1.Schema.SchemaReferenceB\x03\xe0\x41\x01\x12\x19\n\x07verbose\x18\x05 \x01(\x08\x42\x03\xe0\x41\x01H\x01\x88\x01\x01\x42\x0e\n\x0c_schema_typeB\n\n\x08_verbose\"T\n\x1a\x43heckCompatibilityResponse\x12$\n\ris_compatible\x18\x01 \x01(\x08R\ris_compatible\x12\x10\n\x08messages\x18\x02 \x03(\t\"\x93\x01\n\x16GetSchemaConfigRequest\x12>\n\x04name\x18\x01 \x01(\tB0\xe0\x41\x02\xfa\x41*\n(managedkafka.googleapis.com/SchemaConfig\x12#\n\x11\x64\x65\x66\x61ult_to_global\x18\x02 \x01(\x08\x42\x03\xe0\x41\x01H\x00\x88\x01\x01\x42\x14\n\x12_default_to_global\"\x86\x02\n\x19UpdateSchemaConfigRequest\x12>\n\x04name\x18\x01 \x01(\tB0\xe0\x41\x02\xfa\x41*\n(managedkafka.googleapis.com/SchemaConfig\x12l\n\rcompatibility\x18\x02 \x01(\x0e\x32K.google.cloud.managedkafka.schemaregistry.v1.SchemaConfig.CompatibilityTypeB\x03\xe0\x41\x02H\x00\x88\x01\x01\x12\x1b\n\tnormalize\x18\x03 \x01(\x08\x42\x03\xe0\x41\x01H\x01\x88\x01\x01\x42\x10\n\x0e_compatibilityB\x0c\n\n_normalize\"[\n\x19\x44\x65leteSchemaConfigRequest\x12>\n\x04name\x18\x01 \x01(\tB0\xe0\x41\x02\xfa\x41*\n(managedkafka.googleapis.com/SchemaConfig\"T\n\x14GetSchemaModeRequest\x12<\n\x04name\x18\x01 \x01(\tB.\xe0\x41\x02\xfa\x41(\n&managedkafka.googleapis.com/SchemaMode\"\xac\x01\n\x17UpdateSchemaModeRequest\x12<\n\x04name\x18\x01 \x01(\tB.\xe0\x41\x02\xfa\x41(\n&managedkafka.googleapis.com/SchemaMode\x12S\n\x04mode\x18\x02 \x01(\x0e\x32@.google.cloud.managedkafka.schemaregistry.v1.SchemaMode.ModeTypeB\x03\xe0\x41\x02\"W\n\x17\x44\x65leteSchemaModeRequest\x12<\n\x04name\x18\x01 \x01(\tB.\xe0\x41\x02\xfa\x41(\n&managedkafka.googleapis.com/SchemaMode2\xf0=\n\x15ManagedSchemaRegistry\x12\xdc\x01\n\x11GetSchemaRegistry\x12\x45.google.cloud.managedkafka.schemaregistry.v1.GetSchemaRegistryRequest\x1a;.google.cloud.managedkafka.schemaregistry.v1.SchemaRegistry\"C\xda\x41\x04name\x82\xd3\xe4\x93\x02\x36\x12\x34/v1/{name=projects/*/locations/*/schemaRegistries/*}\x12\xf2\x01\n\x14ListSchemaRegistries\x12H.google.cloud.managedkafka.schemaregistry.v1.ListSchemaRegistriesRequest\x1aI.google.cloud.managedkafka.schemaregistry.v1.ListSchemaRegistriesResponse\"E\xda\x41\x06parent\x82\xd3\xe4\x93\x02\x36\x12\x34/v1/{parent=projects/*/locations/*}/schemaRegistries\x12\xf7\x01\n\x14\x43reateSchemaRegistry\x12H.google.cloud.managedkafka.schemaregistry.v1.CreateSchemaRegistryRequest\x1a;.google.cloud.managedkafka.schemaregistry.v1.SchemaRegistry\"X\xda\x41\x16parent,schema_registry\x82\xd3\xe4\x93\x02\x39\"4/v1/{parent=projects/*/locations/*}/schemaRegistries:\x01*\x12\xbd\x01\n\x14\x44\x65leteSchemaRegistry\x12H.google.cloud.managedkafka.schemaregistry.v1.DeleteSchemaRegistryRequest\x1a\x16.google.protobuf.Empty\"C\xda\x41\x04name\x82\xd3\xe4\x93\x02\x36*4/v1/{name=projects/*/locations/*/schemaRegistries/*}\x12\xd2\x01\n\nGetContext\x12>.google.cloud.managedkafka.schemaregistry.v1.GetContextRequest\x1a\x34.google.cloud.managedkafka.schemaregistry.v1.Context\"N\xda\x41\x04name\x82\xd3\xe4\x93\x02\x41\x12?/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*}\x12\xb8\x01\n\x0cListContexts\x12@.google.cloud.managedkafka.schemaregistry.v1.ListContextsRequest\x1a\x14.google.api.HttpBody\"P\xda\x41\x06parent\x82\xd3\xe4\x93\x02\x41\x12?/v1/{parent=projects/*/locations/*/schemaRegistries/*}/contexts\x12\x9f\x02\n\tGetSchema\x12=.google.cloud.managedkafka.schemaregistry.v1.GetSchemaRequest\x1a\x33.google.cloud.managedkafka.schemaregistry.v1.Schema\"\x9d\x01\xda\x41\x04name\x82\xd3\xe4\x93\x02\x8f\x01\x12?/v1/{name=projects/*/locations/*/schemaRegistries/*/schemas/**}ZL\x12J/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/schemas/**}\x12\x91\x02\n\x0cGetRawSchema\x12=.google.cloud.managedkafka.schemaregistry.v1.GetSchemaRequest\x1a\x14.google.api.HttpBody\"\xab\x01\xda\x41\x04name\x82\xd3\xe4\x93\x02\x9d\x01\x12\x46/v1/{name=projects/*/locations/*/schemaRegistries/*/schemas/**}/schemaZS\x12Q/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/schemas/**}/schema\x12\xaa\x02\n\x12ListSchemaVersions\x12\x46.google.cloud.managedkafka.schemaregistry.v1.ListSchemaVersionsRequest\x1a\x14.google.api.HttpBody\"\xb5\x01\xda\x41\x06parent\x82\xd3\xe4\x93\x02\xa5\x01\x12J/v1/{parent=projects/*/locations/*/schemaRegistries/*/schemas/**}/versionsZW\x12U/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/schemas/**}/versions\x12\x98\x02\n\x0fListSchemaTypes\x12\x43.google.cloud.managedkafka.schemaregistry.v1.ListSchemaTypesRequest\x1a\x14.google.api.HttpBody\"\xa9\x01\xda\x41\x06parent\x82\xd3\xe4\x93\x02\x99\x01\x12\x44/v1/{parent=projects/*/locations/*/schemaRegistries/*}/schemas/typesZQ\x12O/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*}/schemas/types\x12\x9f\x02\n\x0cListSubjects\x12@.google.cloud.managedkafka.schemaregistry.v1.ListSubjectsRequest\x1a\x14.google.api.HttpBody\"\xb6\x01\xda\x41\x1dparent,subject_prefix,deleted\x82\xd3\xe4\x93\x02\x8f\x01\x12?/v1/{parent=projects/*/locations/*/schemaRegistries/*}/subjectsZL\x12J/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*}/subjects\x12\xc2\x02\n\x16ListSubjectsBySchemaId\x12J.google.cloud.managedkafka.schemaregistry.v1.ListSubjectsBySchemaIdRequest\x1a\x14.google.api.HttpBody\"\xc5\x01\xda\x41\x16parent,subject,deleted\x82\xd3\xe4\x93\x02\xa5\x01\x12J/v1/{parent=projects/*/locations/*/schemaRegistries/*/schemas/**}/subjectsZW\x12U/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/schemas/**}/subjects\x12\x88\x02\n\rDeleteSubject\x12\x41.google.cloud.managedkafka.schemaregistry.v1.DeleteSubjectRequest\x1a\x14.google.api.HttpBody\"\x9d\x01\xda\x41\x04name\x82\xd3\xe4\x93\x02\x8f\x01*?/v1/{name=projects/*/locations/*/schemaRegistries/*/subjects/*}ZL*J/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*}\x12\xc1\x02\n\rLookupVersion\x12\x41.google.cloud.managedkafka.schemaregistry.v1.LookupVersionRequest\x1a:.google.cloud.managedkafka.schemaregistry.v1.SchemaVersion\"\xb0\x01\xda\x41\rparent,schema\x82\xd3\xe4\x93\x02\x99\x01\"A/v1/{parent=projects/*/locations/*/schemaRegistries/*/subjects/*}:\x01*ZQ\"L/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*}:\x01*\x12\xbe\x02\n\nGetVersion\x12>.google.cloud.managedkafka.schemaregistry.v1.GetVersionRequest\x1a:.google.cloud.managedkafka.schemaregistry.v1.SchemaVersion\"\xb3\x01\xda\x41\x04name\x82\xd3\xe4\x93\x02\xa5\x01\x12J/v1/{name=projects/*/locations/*/schemaRegistries/*/subjects/*/versions/*}ZW\x12U/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*/versions/*}\x12\xaf\x02\n\x13GetRawSchemaVersion\x12>.google.cloud.managedkafka.schemaregistry.v1.GetVersionRequest\x1a\x14.google.api.HttpBody\"\xc1\x01\xda\x41\x04name\x82\xd3\xe4\x93\x02\xb3\x01\x12Q/v1/{name=projects/*/locations/*/schemaRegistries/*/subjects/*/versions/*}/schemaZ^\x12\\/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*/versions/*}/schema\x12\x9e\x02\n\x0cListVersions\x12@.google.cloud.managedkafka.schemaregistry.v1.ListVersionsRequest\x1a\x14.google.api.HttpBody\"\xb5\x01\xda\x41\x06parent\x82\xd3\xe4\x93\x02\xa5\x01\x12J/v1/{parent=projects/*/locations/*/schemaRegistries/*/subjects/*}/versionsZW\x12U/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*}/versions\x12\x87\x03\n\rCreateVersion\x12\x41.google.cloud.managedkafka.schemaregistry.v1.CreateVersionRequest\x1a\x42.google.cloud.managedkafka.schemaregistry.v1.CreateVersionResponse\"\xee\x01\xda\x41\x39parent,version,id,schema_type,schema,references,normalize\x82\xd3\xe4\x93\x02\xab\x01\"J/v1/{parent=projects/*/locations/*/schemaRegistries/*/subjects/*}/versions:\x01*ZZ\"U/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*}/versions:\x01*\x12\x9e\x02\n\rDeleteVersion\x12\x41.google.cloud.managedkafka.schemaregistry.v1.DeleteVersionRequest\x1a\x14.google.api.HttpBody\"\xb3\x01\xda\x41\x04name\x82\xd3\xe4\x93\x02\xa5\x01*J/v1/{name=projects/*/locations/*/schemaRegistries/*/subjects/*/versions/*}ZW*U/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*/versions/*}\x12\xce\x02\n\x15ListReferencedSchemas\x12I.google.cloud.managedkafka.schemaregistry.v1.ListReferencedSchemasRequest\x1a\x14.google.api.HttpBody\"\xd3\x01\xda\x41\x06parent\x82\xd3\xe4\x93\x02\xc3\x01\x12Y/v1/{parent=projects/*/locations/*/schemaRegistries/*/subjects/*/versions/*}/referencedbyZf\x12\x64/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*/versions/*}/referencedby\x12\xde\x02\n\x12\x43heckCompatibility\x12\x46.google.cloud.managedkafka.schemaregistry.v1.CheckCompatibilityRequest\x1aG.google.cloud.managedkafka.schemaregistry.v1.CheckCompatibilityResponse\"\xb6\x01\xda\x41\x0bname,schema\x82\xd3\xe4\x93\x02\xa1\x01\"E/v1/{name=projects/*/locations/*/schemaRegistries/*/compatibility/**}:\x01*ZU\"P/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/compatibility/**}:\x01*\x12\xaf\x02\n\x0fGetSchemaConfig\x12\x43.google.cloud.managedkafka.schemaregistry.v1.GetSchemaConfigRequest\x1a\x39.google.cloud.managedkafka.schemaregistry.v1.SchemaConfig\"\x9b\x01\xda\x41\x04name\x82\xd3\xe4\x93\x02\x8d\x01\x12>/v1/{name=projects/*/locations/*/schemaRegistries/*/config/**}ZK\x12I/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/config/**}\x12\xc9\x02\n\x12UpdateSchemaConfig\x12\x46.google.cloud.managedkafka.schemaregistry.v1.UpdateSchemaConfigRequest\x1a\x39.google.cloud.managedkafka.schemaregistry.v1.SchemaConfig\"\xaf\x01\xda\x41\x12name,compatibility\x82\xd3\xe4\x93\x02\x93\x01\x1a>/v1/{name=projects/*/locations/*/schemaRegistries/*/config/**}:\x01*ZN\x1aI/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/config/**}:\x01*\x12\xb5\x02\n\x12\x44\x65leteSchemaConfig\x12\x46.google.cloud.managedkafka.schemaregistry.v1.DeleteSchemaConfigRequest\x1a\x39.google.cloud.managedkafka.schemaregistry.v1.SchemaConfig\"\x9b\x01\xda\x41\x04name\x82\xd3\xe4\x93\x02\x8d\x01*>/v1/{name=projects/*/locations/*/schemaRegistries/*/config/**}ZK*I/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/config/**}\x12\xa5\x02\n\rGetSchemaMode\x12\x41.google.cloud.managedkafka.schemaregistry.v1.GetSchemaModeRequest\x1a\x37.google.cloud.managedkafka.schemaregistry.v1.SchemaMode\"\x97\x01\xda\x41\x04name\x82\xd3\xe4\x93\x02\x89\x01\x12</v1/{name=projects/*/locations/*/schemaRegistries/*/mode/**}ZI\x12G/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/mode/**}\x12\xb6\x02\n\x10UpdateSchemaMode\x12\x44.google.cloud.managedkafka.schemaregistry.v1.UpdateSchemaModeRequest\x1a\x37.google.cloud.managedkafka.schemaregistry.v1.SchemaMode\"\xa2\x01\xda\x41\tname,mode\x82\xd3\xe4\x93\x02\x8f\x01\x1a</v1/{name=projects/*/locations/*/schemaRegistries/*/mode/**}:\x01*ZL\x1aG/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/mode/**}:\x01*\x12\xab\x02\n\x10\x44\x65leteSchemaMode\x12\x44.google.cloud.managedkafka.schemaregistry.v1.DeleteSchemaModeRequest\x1a\x37.google.cloud.managedkafka.schemaregistry.v1.SchemaMode\"\x97\x01\xda\x41\x04name\x82\xd3\xe4\x93\x02\x89\x01*</v1/{name=projects/*/locations/*/schemaRegistries/*/mode/**}ZI*G/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/mode/**}\x1aO\xca\x41\x1bmanagedkafka.googleapis.com\xd2\x41.https://www.googleapis.com/auth/cloud-platformB\xaf\x02\n/com.google.cloud.managedkafka.schemaregistry.v1B\x13SchemaRegistryProtoP\x01ZWcloud.google.com/go/managedkafka/schemaregistry/apiv1/schemaregistrypb;schemaregistrypb\xaa\x02+Google.Cloud.ManagedKafka.SchemaRegistry.V1\xca\x02+Google\\Cloud\\ManagedKafka\\SchemaRegistry\\V1\xea\x02/Google::Cloud::ManagedKafka::SchemaRegistry::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.cloud.managedkafka.schemaregistry.v1.SchemaRegistry", "google/cloud/managedkafka/schemaregistry/v1/schema_registry_resources.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module ManagedKafka
      module SchemaRegistry
        module V1
          GetSchemaRegistryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.GetSchemaRegistryRequest").msgclass
          ListSchemaRegistriesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.ListSchemaRegistriesRequest").msgclass
          ListSchemaRegistriesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.ListSchemaRegistriesResponse").msgclass
          CreateSchemaRegistryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.CreateSchemaRegistryRequest").msgclass
          DeleteSchemaRegistryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.DeleteSchemaRegistryRequest").msgclass
          GetContextRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.GetContextRequest").msgclass
          ListContextsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.ListContextsRequest").msgclass
          GetSchemaRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.GetSchemaRequest").msgclass
          ListSchemaTypesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.ListSchemaTypesRequest").msgclass
          ListSchemaVersionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.ListSchemaVersionsRequest").msgclass
          ListSubjectsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.ListSubjectsRequest").msgclass
          ListSubjectsBySchemaIdRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.ListSubjectsBySchemaIdRequest").msgclass
          ListVersionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.ListVersionsRequest").msgclass
          DeleteSubjectRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.DeleteSubjectRequest").msgclass
          GetVersionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.GetVersionRequest").msgclass
          CreateVersionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.CreateVersionRequest").msgclass
          CreateVersionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.CreateVersionResponse").msgclass
          LookupVersionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.LookupVersionRequest").msgclass
          DeleteVersionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.DeleteVersionRequest").msgclass
          ListReferencedSchemasRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.ListReferencedSchemasRequest").msgclass
          CheckCompatibilityRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.CheckCompatibilityRequest").msgclass
          CheckCompatibilityResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.CheckCompatibilityResponse").msgclass
          GetSchemaConfigRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.GetSchemaConfigRequest").msgclass
          UpdateSchemaConfigRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.UpdateSchemaConfigRequest").msgclass
          DeleteSchemaConfigRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.DeleteSchemaConfigRequest").msgclass
          GetSchemaModeRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.GetSchemaModeRequest").msgclass
          UpdateSchemaModeRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.UpdateSchemaModeRequest").msgclass
          DeleteSchemaModeRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.managedkafka.schemaregistry.v1.DeleteSchemaModeRequest").msgclass
        end
      end
    end
  end
end
