# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/gkeconnect/gateway/v1beta1/gateway.proto

require 'google/protobuf'

require 'google/api/annotations_pb'
require 'google/api/client_pb'
require 'google/api/httpbody_pb'


descriptor_data = "\n5google/cloud/gkeconnect/gateway/v1beta1/gateway.proto\x12\'google.cloud.gkeconnect.gateway.v1beta1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x19google/api/httpbody.proto2\xf9\x03\n\x0eGatewayService\x12N\n\x0bGetResource\x12\x14.google.api.HttpBody\x1a\x14.google.api.HttpBody\"\x13\x82\xd3\xe4\x93\x02\r\x12\x0b/v1beta1/**\x12O\n\x0cPostResource\x12\x14.google.api.HttpBody\x1a\x14.google.api.HttpBody\"\x13\x82\xd3\xe4\x93\x02\r\"\x0b/v1beta1/**\x12Q\n\x0e\x44\x65leteResource\x12\x14.google.api.HttpBody\x1a\x14.google.api.HttpBody\"\x13\x82\xd3\xe4\x93\x02\r*\x0b/v1beta1/**\x12N\n\x0bPutResource\x12\x14.google.api.HttpBody\x1a\x14.google.api.HttpBody\"\x13\x82\xd3\xe4\x93\x02\r\x1a\x0b/v1beta1/**\x12P\n\rPatchResource\x12\x14.google.api.HttpBody\x1a\x14.google.api.HttpBody\"\x13\x82\xd3\xe4\x93\x02\r2\x0b/v1beta1/**\x1aQ\xca\x41\x1d\x63onnectgateway.googleapis.com\xd2\x41.https://www.googleapis.com/auth/cloud-platformB\x86\x02\n+com.google.cloud.gkeconnect.gateway.v1beta1B\x0cGatewayProtoP\x01ZEcloud.google.com/go/gkeconnect/gateway/apiv1beta1/gatewaypb;gatewaypb\xaa\x02\'Google.Cloud.GkeConnect.Gateway.V1Beta1\xca\x02\'Google\\Cloud\\GkeConnect\\Gateway\\V1beta1\xea\x02+Google::Cloud::GkeConnect::Gateway::V1beta1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module GkeConnect
      module Gateway
        module V1beta1
        end
      end
    end
  end
end
