# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/assuredworkloads/v1beta1/assuredworkloads_service.proto

require 'google/protobuf'

require 'google/api/annotations_pb'
require 'google/api/client_pb'
require 'google/cloud/assuredworkloads/v1beta1/assuredworkloads_pb'
require 'google/longrunning/operations_pb'
require 'google/protobuf/empty_pb'


descriptor_data = "\nDgoogle/cloud/assuredworkloads/v1beta1/assuredworkloads_service.proto\x12%google.cloud.assuredworkloads.v1beta1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a<google/cloud/assuredworkloads/v1beta1/assuredworkloads.proto\x1a#google/longrunning/operations.proto\x1a\x1bgoogle/protobuf/empty.proto2\x90\x0b\n\x17\x41ssuredWorkloadsService\x12\xf9\x01\n\x0e\x43reateWorkload\x12<.google.cloud.assuredworkloads.v1beta1.CreateWorkloadRequest\x1a\x1d.google.longrunning.Operation\"\x89\x01\x82\xd3\xe4\x93\x02\x43\"7/v1beta1/{parent=organizations/*/locations/*}/workloads:\x08workload\xda\x41\x0fparent,workload\xca\x41+\n\x08Workload\x12\x1f\x43reateWorkloadOperationMetadata\x12\x98\x01\n\x0eUpdateWorkload\x12<.google.cloud.assuredworkloads.v1beta1.UpdateWorkloadRequest\x1a/.google.cloud.assuredworkloads.v1beta1.Workload\"\x17\xda\x41\x14workload,update_mask\x12\x88\x02\n\x18RestrictAllowedResources\x12\x46.google.cloud.assuredworkloads.v1beta1.RestrictAllowedResourcesRequest\x1aG.google.cloud.assuredworkloads.v1beta1.RestrictAllowedResourcesResponse\"[\x82\xd3\xe4\x93\x02U\"P/v1beta1/{name=organizations/*/locations/*/workloads/*}:restrictAllowedResources:\x01*\x12\xae\x01\n\x0e\x44\x65leteWorkload\x12<.google.cloud.assuredworkloads.v1beta1.DeleteWorkloadRequest\x1a\x16.google.protobuf.Empty\"F\x82\xd3\xe4\x93\x02\x39*7/v1beta1/{name=organizations/*/locations/*/workloads/*}\xda\x41\x04name\x12\x82\x01\n\x0bGetWorkload\x12\x39.google.cloud.assuredworkloads.v1beta1.GetWorkloadRequest\x1a/.google.cloud.assuredworkloads.v1beta1.Workload\"\x07\xda\x41\x04name\x12\xaf\x01\n\x13\x41nalyzeWorkloadMove\x12\x41.google.cloud.assuredworkloads.v1beta1.AnalyzeWorkloadMoveRequest\x1a\x42.google.cloud.assuredworkloads.v1beta1.AnalyzeWorkloadMoveResponse\"\x11\xda\x41\x0eproject,target\x12\x95\x01\n\rListWorkloads\x12;.google.cloud.assuredworkloads.v1beta1.ListWorkloadsRequest\x1a<.google.cloud.assuredworkloads.v1beta1.ListWorkloadsResponse\"\t\xda\x41\x06parent\x1aS\xca\x41\x1f\x61ssuredworkloads.googleapis.com\xd2\x41.https://www.googleapis.com/auth/cloud-platformB\x9d\x02\n)com.google.cloud.assuredworkloads.v1beta1B\x1c\x41ssuredworkloadsServiceProtoP\x01ZUcloud.google.com/go/assuredworkloads/apiv1beta1/assuredworkloadspb;assuredworkloadspb\xaa\x02%Google.Cloud.AssuredWorkloads.V1Beta1\xca\x02%Google\\Cloud\\AssuredWorkloads\\V1beta1\xea\x02(Google::Cloud::AssuredWorkloads::V1beta1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module AssuredWorkloads
      module V1beta1
      end
    end
  end
end
