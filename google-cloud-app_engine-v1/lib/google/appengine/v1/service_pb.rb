# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/appengine/v1/service.proto

require 'google/protobuf'

require 'google/appengine/v1/network_settings_pb'


descriptor_data = "\n!google/appengine/v1/service.proto\x12\x13google.appengine.v1\x1a*google/appengine/v1/network_settings.proto\"\xfe\x01\n\x07Service\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\t\x12\x30\n\x05split\x18\x03 \x01(\x0b\x32!.google.appengine.v1.TrafficSplit\x12\x38\n\x06labels\x18\x04 \x03(\x0b\x32(.google.appengine.v1.Service.LabelsEntry\x12>\n\x10network_settings\x18\x06 \x01(\x0b\x32$.google.appengine.v1.NetworkSettings\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x84\x02\n\x0cTrafficSplit\x12;\n\x08shard_by\x18\x01 \x01(\x0e\x32).google.appengine.v1.TrafficSplit.ShardBy\x12G\n\x0b\x61llocations\x18\x02 \x03(\x0b\x32\x32.google.appengine.v1.TrafficSplit.AllocationsEntry\x1a\x32\n\x10\x41llocationsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\":\n\x07ShardBy\x12\x0f\n\x0bUNSPECIFIED\x10\x00\x12\n\n\x06\x43OOKIE\x10\x01\x12\x06\n\x02IP\x10\x02\x12\n\n\x06RANDOM\x10\x03\x42\xbd\x01\n\x17\x63om.google.appengine.v1B\x0cServiceProtoP\x01Z;cloud.google.com/go/appengine/apiv1/appenginepb;appenginepb\xaa\x02\x19Google.Cloud.AppEngine.V1\xca\x02\x19Google\\Cloud\\AppEngine\\V1\xea\x02\x1cGoogle::Cloud::AppEngine::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.appengine.v1.NetworkSettings", "google/appengine/v1/network_settings.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module AppEngine
      module V1
        Service = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.appengine.v1.Service").msgclass
        TrafficSplit = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.appengine.v1.TrafficSplit").msgclass
        TrafficSplit::ShardBy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.appengine.v1.TrafficSplit.ShardBy").enummodule
      end
    end
  end
end
