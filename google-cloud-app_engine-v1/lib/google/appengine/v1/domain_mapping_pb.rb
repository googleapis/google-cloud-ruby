# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/appengine/v1/domain_mapping.proto

require 'google/protobuf'


descriptor_data = "\n(google/appengine/v1/domain_mapping.proto\x12\x13google.appengine.v1\"\xa0\x01\n\rDomainMapping\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\t\x12\x36\n\x0cssl_settings\x18\x03 \x01(\x0b\x32 .google.appengine.v1.SslSettings\x12=\n\x10resource_records\x18\x04 \x03(\x0b\x32#.google.appengine.v1.ResourceRecord\"\xf3\x01\n\x0bSslSettings\x12\x16\n\x0e\x63\x65rtificate_id\x18\x01 \x01(\t\x12O\n\x13ssl_management_type\x18\x03 \x01(\x0e\x32\x32.google.appengine.v1.SslSettings.SslManagementType\x12&\n\x1epending_managed_certificate_id\x18\x04 \x01(\t\"S\n\x11SslManagementType\x12#\n\x1fSSL_MANAGEMENT_TYPE_UNSPECIFIED\x10\x00\x12\r\n\tAUTOMATIC\x10\x01\x12\n\n\x06MANUAL\x10\x02\"\xb3\x01\n\x0eResourceRecord\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06rrdata\x18\x02 \x01(\t\x12<\n\x04type\x18\x03 \x01(\x0e\x32..google.appengine.v1.ResourceRecord.RecordType\"E\n\nRecordType\x12\x1b\n\x17RECORD_TYPE_UNSPECIFIED\x10\x00\x12\x05\n\x01\x41\x10\x01\x12\x08\n\x04\x41\x41\x41\x41\x10\x02\x12\t\n\x05\x43NAME\x10\x03\x42\xc3\x01\n\x17\x63om.google.appengine.v1B\x12\x44omainMappingProtoP\x01Z;cloud.google.com/go/appengine/apiv1/appenginepb;appenginepb\xaa\x02\x19Google.Cloud.AppEngine.V1\xca\x02\x19Google\\Cloud\\AppEngine\\V1\xea\x02\x1cGoogle::Cloud::AppEngine::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module AppEngine
      module V1
        DomainMapping = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.appengine.v1.DomainMapping").msgclass
        SslSettings = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.appengine.v1.SslSettings").msgclass
        SslSettings::SslManagementType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.appengine.v1.SslSettings.SslManagementType").enummodule
        ResourceRecord = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.appengine.v1.ResourceRecord").msgclass
        ResourceRecord::RecordType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.appengine.v1.ResourceRecord.RecordType").enummodule
      end
    end
  end
end
