# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/cloud/gaming/v1/game_server_deployments_service.proto for package 'google.cloud.gaming.v1'
# Original file comments:
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'google/cloud/gaming/v1/game_server_deployments_service_pb'

module Google
  module Cloud
    module Gaming
      module V1
        module GameServerDeploymentsService
          # The game server deployment is used to control the deployment of Agones
          # fleets.
          class Service

            include GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'google.cloud.gaming.v1.GameServerDeploymentsService'

            # Lists game server deployments in a given project and location.
            rpc :ListGameServerDeployments, ::Google::Cloud::Gaming::V1::ListGameServerDeploymentsRequest, ::Google::Cloud::Gaming::V1::ListGameServerDeploymentsResponse
            # Gets details of a single game server deployment.
            rpc :GetGameServerDeployment, ::Google::Cloud::Gaming::V1::GetGameServerDeploymentRequest, ::Google::Cloud::Gaming::V1::GameServerDeployment
            # Creates a new game server deployment in a given project and location.
            rpc :CreateGameServerDeployment, ::Google::Cloud::Gaming::V1::CreateGameServerDeploymentRequest, ::Google::Longrunning::Operation
            # Deletes a single game server deployment.
            rpc :DeleteGameServerDeployment, ::Google::Cloud::Gaming::V1::DeleteGameServerDeploymentRequest, ::Google::Longrunning::Operation
            # Patches a game server deployment.
            rpc :UpdateGameServerDeployment, ::Google::Cloud::Gaming::V1::UpdateGameServerDeploymentRequest, ::Google::Longrunning::Operation
            # Gets details a single game server deployment rollout.
            rpc :GetGameServerDeploymentRollout, ::Google::Cloud::Gaming::V1::GetGameServerDeploymentRolloutRequest, ::Google::Cloud::Gaming::V1::GameServerDeploymentRollout
            # Patches a single game server deployment rollout.
            # The method will not return an error if the update does not affect any
            # existing realms. For example - if the default_game_server_config is changed
            # but all existing realms use the override, that is valid. Similarly, if a
            # non existing realm is explicitly called out in game_server_config_overrides
            # field, that will also not result in an error.
            rpc :UpdateGameServerDeploymentRollout, ::Google::Cloud::Gaming::V1::UpdateGameServerDeploymentRolloutRequest, ::Google::Longrunning::Operation
            # Previews the game server deployment rollout. This API does not mutate the
            # rollout resource.
            rpc :PreviewGameServerDeploymentRollout, ::Google::Cloud::Gaming::V1::PreviewGameServerDeploymentRolloutRequest, ::Google::Cloud::Gaming::V1::PreviewGameServerDeploymentRolloutResponse
            # Retrieves information about the current state of the game server
            # deployment. Gathers all the Agones fleets and Agones autoscalers,
            # including fleets running an older version of the game server deployment.
            rpc :FetchDeploymentState, ::Google::Cloud::Gaming::V1::FetchDeploymentStateRequest, ::Google::Cloud::Gaming::V1::FetchDeploymentStateResponse
          end

          Stub = Service.rpc_stub_class
        end
      end
    end
  end
end
