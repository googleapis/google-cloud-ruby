# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/locationfinder/v1/service.proto

require 'google/protobuf'

require 'google/api/annotations_pb'
require 'google/api/client_pb'
require 'google/cloud/locationfinder/v1/cloud_location_pb'


descriptor_data = "\n,google/cloud/locationfinder/v1/service.proto\x12\x1egoogle.cloud.locationfinder.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x33google/cloud/locationfinder/v1/cloud_location.proto2\xfc\x05\n\x13\x43loudLocationFinder\x12\xd0\x01\n\x12ListCloudLocations\x12\x39.google.cloud.locationfinder.v1.ListCloudLocationsRequest\x1a:.google.cloud.locationfinder.v1.ListCloudLocationsResponse\"C\xda\x41\x06parent\x82\xd3\xe4\x93\x02\x34\x12\x32/v1/{parent=projects/*/locations/*}/cloudLocations\x12\xbd\x01\n\x10GetCloudLocation\x12\x37.google.cloud.locationfinder.v1.GetCloudLocationRequest\x1a-.google.cloud.locationfinder.v1.CloudLocation\"A\xda\x41\x04name\x82\xd3\xe4\x93\x02\x34\x12\x32/v1/{name=projects/*/locations/*/cloudLocations/*}\x12\xf9\x01\n\x14SearchCloudLocations\x12;.google.cloud.locationfinder.v1.SearchCloudLocationsRequest\x1a<.google.cloud.locationfinder.v1.SearchCloudLocationsResponse\"f\xda\x41\"parent,source_cloud_location,query\x82\xd3\xe4\x93\x02;\x12\x39/v1/{parent=projects/*/locations/*}/cloudLocations:search\x1aV\xca\x41\"cloudlocationfinder.googleapis.com\xd2\x41.https://www.googleapis.com/auth/cloud-platformB\xe6\x01\n\"com.google.cloud.locationfinder.v1B\x0cServiceProtoP\x01ZJcloud.google.com/go/locationfinder/apiv1/locationfinderpb;locationfinderpb\xaa\x02\x1eGoogle.Cloud.LocationFinder.V1\xca\x02\x1eGoogle\\Cloud\\LocationFinder\\V1\xea\x02!Google::Cloud::LocationFinder::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module LocationFinder
      module V1
      end
    end
  end
end
