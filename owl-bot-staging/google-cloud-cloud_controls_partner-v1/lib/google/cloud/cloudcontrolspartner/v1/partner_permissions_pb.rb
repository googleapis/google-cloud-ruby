# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/cloudcontrolspartner/v1/partner_permissions.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'


descriptor_data = "\n>google/cloud/cloudcontrolspartner/v1/partner_permissions.proto\x12$google.cloud.cloudcontrolspartner.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\"\x83\x04\n\x12PartnerPermissions\x12\x11\n\x04name\x18\x01 \x01(\tB\x03\xe0\x41\x08\x12`\n\x13partner_permissions\x18\x02 \x03(\x0e\x32\x43.google.cloud.cloudcontrolspartner.v1.PartnerPermissions.Permission\"\xc8\x01\n\nPermission\x12\x1a\n\x16PERMISSION_UNSPECIFIED\x10\x00\x12\x31\n-ACCESS_TRANSPARENCY_AND_EMERGENCY_ACCESS_LOGS\x10\x01\x12 \n\x1c\x41SSURED_WORKLOADS_MONITORING\x10\x02\x12\x1c\n\x18\x41\x43\x43\x45SS_APPROVAL_REQUESTS\x10\x03\x12+\n\'ASSURED_WORKLOADS_EKM_CONNECTION_STATUS\x10\x04:\xac\x01\xea\x41\xa8\x01\n6cloudcontrolspartner.googleapis.com/PartnerPermissions\x12norganizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}/partnerPermissions\"l\n\x1cGetPartnerPermissionsRequest\x12L\n\x04name\x18\x01 \x01(\tB>\xe0\x41\x02\xfa\x41\x38\n6cloudcontrolspartner.googleapis.com/PartnerPermissionsB\x9b\x02\n(com.google.cloud.cloudcontrolspartner.v1B\x17PartnerPermissionsProtoP\x01Z\\cloud.google.com/go/cloudcontrolspartner/apiv1/cloudcontrolspartnerpb;cloudcontrolspartnerpb\xaa\x02$Google.Cloud.CloudControlsPartner.V1\xca\x02$Google\\Cloud\\CloudControlsPartner\\V1\xea\x02\'Google::Cloud::CloudControlsPartner::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module CloudControlsPartner
      module V1
        PartnerPermissions = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.cloudcontrolspartner.v1.PartnerPermissions").msgclass
        PartnerPermissions::Permission = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.cloudcontrolspartner.v1.PartnerPermissions.Permission").enummodule
        GetPartnerPermissionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.cloudcontrolspartner.v1.GetPartnerPermissionsRequest").msgclass
      end
    end
  end
end
