# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/channel/v1/products.proto

require 'google/protobuf'

require 'google/api/resource_pb'


descriptor_data = "\n&google/cloud/channel/v1/products.proto\x12\x17google.cloud.channel.v1\x1a\x19google/api/resource.proto\"\x95\x01\n\x07Product\x12\x0c\n\x04name\x18\x01 \x01(\t\x12>\n\x0emarketing_info\x18\x02 \x01(\x0b\x32&.google.cloud.channel.v1.MarketingInfo:<\xea\x41\x39\n#cloudchannel.googleapis.com/Product\x12\x12products/{product}\"\xcb\x01\n\x03Sku\x12\x0c\n\x04name\x18\x01 \x01(\t\x12>\n\x0emarketing_info\x18\x02 \x01(\x0b\x32&.google.cloud.channel.v1.MarketingInfo\x12\x31\n\x07product\x18\x03 \x01(\x0b\x32 .google.cloud.channel.v1.Product:C\xea\x41@\n\x1f\x63loudchannel.googleapis.com/Sku\x12\x1dproducts/{product}/skus/{sku}\"p\n\rMarketingInfo\x12\x14\n\x0c\x64isplay_name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x34\n\x0c\x64\x65\x66\x61ult_logo\x18\x03 \x01(\x0b\x32\x1e.google.cloud.channel.v1.Media\"Y\n\x05Media\x12\r\n\x05title\x18\x01 \x01(\t\x12\x0f\n\x07\x63ontent\x18\x02 \x01(\t\x12\x30\n\x04type\x18\x03 \x01(\x0e\x32\".google.cloud.channel.v1.MediaType*=\n\tMediaType\x12\x1a\n\x16MEDIA_TYPE_UNSPECIFIED\x10\x00\x12\x14\n\x10MEDIA_TYPE_IMAGE\x10\x01\x42\x65\n\x1b\x63om.google.cloud.channel.v1B\rProductsProtoP\x01Z5cloud.google.com/go/channel/apiv1/channelpb;channelpbb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module Channel
      module V1
        Product = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.channel.v1.Product").msgclass
        Sku = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.channel.v1.Sku").msgclass
        MarketingInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.channel.v1.MarketingInfo").msgclass
        Media = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.channel.v1.Media").msgclass
        MediaType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.channel.v1.MediaType").enummodule
      end
    end
  end
end
