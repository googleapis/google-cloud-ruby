# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/cloud/chronicle/v1/rule.proto for package 'Google.Cloud.Chronicle.V1'
# Original file comments:
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'google/cloud/chronicle/v1/rule_pb'

module Google
  module Cloud
    module Chronicle
      module V1
        module RuleService
          # RuleService provides interface for user-created rules.
          class Service

            include ::GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'google.cloud.chronicle.v1.RuleService'

            # Creates a new Rule.
            rpc :CreateRule, ::Google::Cloud::Chronicle::V1::CreateRuleRequest, ::Google::Cloud::Chronicle::V1::Rule
            # Gets a Rule.
            rpc :GetRule, ::Google::Cloud::Chronicle::V1::GetRuleRequest, ::Google::Cloud::Chronicle::V1::Rule
            # Lists Rules.
            rpc :ListRules, ::Google::Cloud::Chronicle::V1::ListRulesRequest, ::Google::Cloud::Chronicle::V1::ListRulesResponse
            # Updates a Rule.
            rpc :UpdateRule, ::Google::Cloud::Chronicle::V1::UpdateRuleRequest, ::Google::Cloud::Chronicle::V1::Rule
            # Deletes a Rule.
            rpc :DeleteRule, ::Google::Cloud::Chronicle::V1::DeleteRuleRequest, ::Google::Protobuf::Empty
            # Lists all revisions of the rule.
            rpc :ListRuleRevisions, ::Google::Cloud::Chronicle::V1::ListRuleRevisionsRequest, ::Google::Cloud::Chronicle::V1::ListRuleRevisionsResponse
            # Create a Retrohunt.
            rpc :CreateRetrohunt, ::Google::Cloud::Chronicle::V1::CreateRetrohuntRequest, ::Google::Longrunning::Operation
            # Get a Retrohunt.
            rpc :GetRetrohunt, ::Google::Cloud::Chronicle::V1::GetRetrohuntRequest, ::Google::Cloud::Chronicle::V1::Retrohunt
            # List Retrohunts.
            rpc :ListRetrohunts, ::Google::Cloud::Chronicle::V1::ListRetrohuntsRequest, ::Google::Cloud::Chronicle::V1::ListRetrohuntsResponse
            # Gets a RuleDeployment.
            rpc :GetRuleDeployment, ::Google::Cloud::Chronicle::V1::GetRuleDeploymentRequest, ::Google::Cloud::Chronicle::V1::RuleDeployment
            # Lists RuleDeployments across all Rules.
            rpc :ListRuleDeployments, ::Google::Cloud::Chronicle::V1::ListRuleDeploymentsRequest, ::Google::Cloud::Chronicle::V1::ListRuleDeploymentsResponse
            # Updates a RuleDeployment.
            # Failures are not necessarily atomic. If there is a request to update
            # multiple fields, and any update to a single field fails, an error will be
            # returned, but other fields may remain successfully updated.
            rpc :UpdateRuleDeployment, ::Google::Cloud::Chronicle::V1::UpdateRuleDeploymentRequest, ::Google::Cloud::Chronicle::V1::RuleDeployment
          end

          Stub = Service.rpc_stub_class
        end
      end
    end
  end
end
