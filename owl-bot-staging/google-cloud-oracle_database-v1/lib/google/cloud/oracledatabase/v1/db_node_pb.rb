# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/oracledatabase/v1/db_node.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'


descriptor_data = "\n,google/cloud/oracledatabase/v1/db_node.proto\x12\x1egoogle.cloud.oracledatabase.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\"\x82\x02\n\x06\x44\x62Node\x12\x11\n\x04name\x18\x01 \x01(\tB\x03\xe0\x41\x08\x12I\n\nproperties\x18\x03 \x01(\x0b\x32\x30.google.cloud.oracledatabase.v1.DbNodePropertiesB\x03\xe0\x41\x01:\x99\x01\xea\x41\x95\x01\n$oracledatabase.googleapis.com/DbNode\x12\\projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}/dbNodes/{db_node}*\x07\x64\x62Nodes2\x06\x64\x62Node\"\xc0\x03\n\x10\x44\x62NodeProperties\x12\x11\n\x04ocid\x18\x01 \x01(\tB\x03\xe0\x41\x03\x12\x17\n\nocpu_count\x18\x02 \x01(\x05\x42\x03\xe0\x41\x01\x12\x16\n\x0ememory_size_gb\x18\x03 \x01(\x05\x12$\n\x17\x64\x62_node_storage_size_gb\x18\x04 \x01(\x05\x42\x03\xe0\x41\x01\x12\x1b\n\x0e\x64\x62_server_ocid\x18\x05 \x01(\tB\x03\xe0\x41\x01\x12\x15\n\x08hostname\x18\x08 \x01(\tB\x03\xe0\x41\x01\x12J\n\x05state\x18\t \x01(\x0e\x32\x36.google.cloud.oracledatabase.v1.DbNodeProperties.StateB\x03\xe0\x41\x03\x12\x1c\n\x14total_cpu_core_count\x18\n \x01(\x05\"\xa3\x01\n\x05State\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\x10\n\x0cPROVISIONING\x10\x01\x12\r\n\tAVAILABLE\x10\x02\x12\x0c\n\x08UPDATING\x10\x03\x12\x0c\n\x08STOPPING\x10\x04\x12\x0b\n\x07STOPPED\x10\x05\x12\x0c\n\x08STARTING\x10\x06\x12\x0f\n\x0bTERMINATING\x10\x07\x12\x0e\n\nTERMINATED\x10\x08\x12\n\n\x06\x46\x41ILED\x10\tB\xe5\x01\n\"com.google.cloud.oracledatabase.v1B\x0b\x44\x62NodeProtoP\x01ZJcloud.google.com/go/oracledatabase/apiv1/oracledatabasepb;oracledatabasepb\xaa\x02\x1eGoogle.Cloud.OracleDatabase.V1\xca\x02\x1eGoogle\\Cloud\\OracleDatabase\\V1\xea\x02!Google::Cloud::OracleDatabase::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module OracleDatabase
      module V1
        DbNode = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.oracledatabase.v1.DbNode").msgclass
        DbNodeProperties = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.oracledatabase.v1.DbNodeProperties").msgclass
        DbNodeProperties::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.oracledatabase.v1.DbNodeProperties.State").enummodule
      end
    end
  end
end
