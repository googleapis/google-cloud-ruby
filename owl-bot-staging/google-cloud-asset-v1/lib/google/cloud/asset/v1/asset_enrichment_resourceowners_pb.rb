# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/asset/v1/asset_enrichment_resourceowners.proto

require 'google/protobuf'


descriptor_data = "\n;google/cloud/asset/v1/asset_enrichment_resourceowners.proto\x12\x15google.cloud.asset.v1\")\n\x0eResourceOwners\x12\x17\n\x0fresource_owners\x18\x01 \x03(\tB\xa2\x01\n\x19\x63om.google.cloud.asset.v1B\"AssetEnrichmentResourceownersProtoP\x01Z/cloud.google.com/go/asset/apiv1/assetpb;assetpb\xaa\x02\x15Google.Cloud.Asset.V1\xca\x02\x15Google\\Cloud\\Asset\\V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module Asset
      module V1
        ResourceOwners = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.asset.v1.ResourceOwners").msgclass
      end
    end
  end
end
