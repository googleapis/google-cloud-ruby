# frozen_string_literal: true

# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!


module Google
  module Cloud
    module Dataplex
      module V1
        # DataProfileScan related setting.
        class DataProfileSpec
          include ::Google::Protobuf::MessageExts
          extend ::Google::Protobuf::MessageExts::ClassMethods
        end

        # DataProfileResult defines the output of DataProfileScan.
        # Each field of the table will have field type specific profile result.
        # @!attribute [rw] row_count
        #   @return [::Integer]
        #     The count of all rows in the sampled data.
        #     Return 0, if zero rows.
        # @!attribute [rw] profile
        #   @return [::Google::Cloud::Dataplex::V1::DataProfileResult::Profile]
        #     This represents the profile information per field.
        # @!attribute [rw] scanned_data
        #   @return [::Google::Cloud::Dataplex::V1::ScannedData]
        #     The data scanned for this profile.
        class DataProfileResult
          include ::Google::Protobuf::MessageExts
          extend ::Google::Protobuf::MessageExts::ClassMethods

          # Profile information describing the structure and layout of the data
          # and contains the profile info.
          # @!attribute [rw] fields
          #   @return [::Array<::Google::Cloud::Dataplex::V1::DataProfileResult::Profile::Field>]
          #     The sequence of fields describing data in table entities.
          class Profile
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods

            # Represents a column field within a table schema.
            # @!attribute [rw] name
            #   @return [::String]
            #     The name of the field.
            # @!attribute [rw] type
            #   @return [::String]
            #     The field data type. Possible values include:
            #
            #     * STRING
            #     * BYTE
            #     * INT64
            #     * INT32
            #     * INT16
            #     * DOUBLE
            #     * FLOAT
            #     * DECIMAL
            #     * BOOLEAN
            #     * BINARY
            #     * TIMESTAMP
            #     * DATE
            #     * TIME
            #     * NULL
            #     * RECORD
            # @!attribute [rw] mode
            #   @return [::String]
            #     The mode of the field. Its value will be:
            #     REQUIRED, if it is a required field.
            #     NULLABLE, if it is an optional field.
            #     REPEATED, if it is a repeated field.
            # @!attribute [rw] profile
            #   @return [::Google::Cloud::Dataplex::V1::DataProfileResult::Profile::Field::ProfileInfo]
            #     The profile information for the corresponding field.
            class Field
              include ::Google::Protobuf::MessageExts
              extend ::Google::Protobuf::MessageExts::ClassMethods

              # ProfileInfo defines the profile information for each schema field type.
              # @!attribute [rw] null_ratio
              #   @return [::Float]
              #     The ratio of null rows against the rows in the sampled data.
              # @!attribute [rw] distinct_ratio
              #   @return [::Float]
              #     The ratio of rows that are distinct against the rows in the sampled
              #     data.
              # @!attribute [rw] top_n_values
              #   @return [::Array<::Google::Cloud::Dataplex::V1::DataProfileResult::Profile::Field::ProfileInfo::TopNValue>]
              #     The array of top N values of the field in the sampled data.
              #     Currently N is set as 10 or equal to distinct values in the field,
              #     whichever is smaller. This will be optional for complex non-groupable
              #     data-types such as JSON, ARRAY, JSON, STRUCT.
              # @!attribute [rw] string_profile
              #   @return [::Google::Cloud::Dataplex::V1::DataProfileResult::Profile::Field::ProfileInfo::StringFieldInfo]
              #     The corresponding string field profile.
              # @!attribute [rw] integer_profile
              #   @return [::Google::Cloud::Dataplex::V1::DataProfileResult::Profile::Field::ProfileInfo::IntegerFieldInfo]
              #     The corresponding integer field profile.
              # @!attribute [rw] double_profile
              #   @return [::Google::Cloud::Dataplex::V1::DataProfileResult::Profile::Field::ProfileInfo::DoubleFieldInfo]
              #     The corresponding double field profile.
              class ProfileInfo
                include ::Google::Protobuf::MessageExts
                extend ::Google::Protobuf::MessageExts::ClassMethods

                # StringFieldInfo defines output info for any string type field.
                # @!attribute [rw] min_length
                #   @return [::Integer]
                #     The minimum length of the string field in the sampled data.
                #     Optional if zero non-null rows.
                # @!attribute [rw] max_length
                #   @return [::Integer]
                #     The maximum length of a string field in the sampled data.
                #     Optional if zero non-null rows.
                # @!attribute [rw] average_length
                #   @return [::Float]
                #     The average length of a string field in the sampled data.
                #     Optional if zero non-null rows.
                class StringFieldInfo
                  include ::Google::Protobuf::MessageExts
                  extend ::Google::Protobuf::MessageExts::ClassMethods
                end

                # IntegerFieldInfo defines output for any integer type field.
                # @!attribute [rw] average
                #   @return [::Float]
                #     The average of non-null values of integer field in the sampled
                #     data. Return NaN, if the field has a NaN. Optional if zero non-null
                #     rows.
                # @!attribute [rw] standard_deviation
                #   @return [::Float]
                #     The standard deviation of non-null of integer field in the sampled
                #     data. Return NaN, if the field has a NaN. Optional if zero non-null
                #     rows.
                # @!attribute [rw] min
                #   @return [::Integer]
                #     The minimum value of an integer field in the sampled data.
                #     Return NaN, if the field has a NaN. Optional if zero non-null
                #     rows.
                # @!attribute [rw] quartiles
                #   @return [::Array<::Integer>]
                #     A quartile divide the number of data points into four parts, or
                #     quarters, of more-or-less equal size. Three main quartiles used
                #     are: The first quartile (Q1) splits off the lowest 25% of data from
                #     the highest 75%. It is also known as the lower or 25th empirical
                #     quartile, as 25% of the data is below this point. The second
                #     quartile (Q2) is the median of a data set. So, 50% of the data lies
                #     below this point. The third quartile (Q3) splits off the highest
                #     25% of data from the lowest 75%. It is known as the upper or 75th
                #     empirical quartile, as 75% of the data lies below this point. So,
                #     here the quartiles is provided as an ordered list of quartile
                #     values, occurring in order Q1, median, Q3.
                # @!attribute [rw] max
                #   @return [::Integer]
                #     The maximum value of an integer field in the sampled data.
                #     Return NaN, if the field has a NaN. Optional if zero non-null
                #     rows.
                class IntegerFieldInfo
                  include ::Google::Protobuf::MessageExts
                  extend ::Google::Protobuf::MessageExts::ClassMethods
                end

                # DoubleFieldInfo defines output for any double type field.
                # @!attribute [rw] average
                #   @return [::Float]
                #     The average of non-null values of double field in the sampled data.
                #     Return NaN, if the field has a NaN. Optional if zero non-null rows.
                # @!attribute [rw] standard_deviation
                #   @return [::Float]
                #     The standard deviation of non-null of double field in the sampled
                #     data. Return NaN, if the field has a NaN. Optional if zero non-null
                #     rows.
                # @!attribute [rw] min
                #   @return [::Float]
                #     The minimum value of a double field in the sampled data.
                #     Return NaN, if the field has a NaN. Optional if zero non-null
                #     rows.
                # @!attribute [rw] quartiles
                #   @return [::Array<::Float>]
                #     A quartile divide the numebr of data points into four parts, or
                #     quarters, of more-or-less equal size. Three main quartiles used
                #     are: The first quartile (Q1) splits off the lowest 25% of data from
                #     the highest 75%. It is also known as the lower or 25th empirical
                #     quartile, as 25% of the data is below this point. The second
                #     quartile (Q2) is the median of a data set. So, 50% of the data lies
                #     below this point. The third quartile (Q3) splits off the highest
                #     25% of data from the lowest 75%. It is known as the upper or 75th
                #     empirical quartile, as 75% of the data lies below this point. So,
                #     here the quartiles is provided as an ordered list of quartile
                #     values, occurring in order Q1, median, Q3.
                # @!attribute [rw] max
                #   @return [::Float]
                #     The maximum value of a double field in the sampled data.
                #     Return NaN, if the field has a NaN. Optional if zero non-null
                #     rows.
                class DoubleFieldInfo
                  include ::Google::Protobuf::MessageExts
                  extend ::Google::Protobuf::MessageExts::ClassMethods
                end

                # The TopNValue defines the structure of output of top N values of a
                # field.
                # @!attribute [rw] value
                #   @return [::String]
                #     The value is the string value of the actual value from the field.
                # @!attribute [rw] count
                #   @return [::Integer]
                #     The frequency count of the corresponding value in the field.
                class TopNValue
                  include ::Google::Protobuf::MessageExts
                  extend ::Google::Protobuf::MessageExts::ClassMethods
                end
              end
            end
          end
        end
      end
    end
  end
end
