# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/analytics/admin/v1alpha/channel_group.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("google/analytics/admin/v1alpha/channel_group.proto", :syntax => :proto3) do
    add_message "google.analytics.admin.v1alpha.ChannelGroupFilter" do
      optional :field_name, :string, 1
      oneof :value_filter do
        optional :string_filter, :message, 2, "google.analytics.admin.v1alpha.ChannelGroupFilter.StringFilter"
        optional :in_list_filter, :message, 3, "google.analytics.admin.v1alpha.ChannelGroupFilter.InListFilter"
      end
    end
    add_message "google.analytics.admin.v1alpha.ChannelGroupFilter.StringFilter" do
      optional :match_type, :enum, 1, "google.analytics.admin.v1alpha.ChannelGroupFilter.StringFilter.MatchType"
      optional :value, :string, 2
    end
    add_enum "google.analytics.admin.v1alpha.ChannelGroupFilter.StringFilter.MatchType" do
      value :MATCH_TYPE_UNSPECIFIED, 0
      value :EXACT, 1
      value :BEGINS_WITH, 2
      value :ENDS_WITH, 3
      value :CONTAINS, 4
      value :FULL_REGEXP, 5
      value :PARTIAL_REGEXP, 6
    end
    add_message "google.analytics.admin.v1alpha.ChannelGroupFilter.InListFilter" do
      repeated :values, :string, 1
    end
    add_message "google.analytics.admin.v1alpha.ChannelGroupFilterExpression" do
      oneof :expr do
        optional :and_group, :message, 1, "google.analytics.admin.v1alpha.ChannelGroupFilterExpressionList"
        optional :or_group, :message, 2, "google.analytics.admin.v1alpha.ChannelGroupFilterExpressionList"
        optional :not_expression, :message, 3, "google.analytics.admin.v1alpha.ChannelGroupFilterExpression"
        optional :filter, :message, 4, "google.analytics.admin.v1alpha.ChannelGroupFilter"
      end
    end
    add_message "google.analytics.admin.v1alpha.ChannelGroupFilterExpressionList" do
      repeated :filter_expressions, :message, 1, "google.analytics.admin.v1alpha.ChannelGroupFilterExpression"
    end
    add_message "google.analytics.admin.v1alpha.GroupingRule" do
      optional :display_name, :string, 1
      optional :expression, :message, 2, "google.analytics.admin.v1alpha.ChannelGroupFilterExpression"
    end
    add_message "google.analytics.admin.v1alpha.ChannelGroup" do
      optional :name, :string, 1
      optional :display_name, :string, 2
      optional :description, :string, 3
      repeated :grouping_rule, :message, 4, "google.analytics.admin.v1alpha.GroupingRule"
      optional :system_defined, :bool, 5
    end
  end
end

module Google
  module Analytics
    module Admin
      module V1alpha
        ChannelGroupFilter = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.analytics.admin.v1alpha.ChannelGroupFilter").msgclass
        ChannelGroupFilter::StringFilter = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.analytics.admin.v1alpha.ChannelGroupFilter.StringFilter").msgclass
        ChannelGroupFilter::StringFilter::MatchType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.analytics.admin.v1alpha.ChannelGroupFilter.StringFilter.MatchType").enummodule
        ChannelGroupFilter::InListFilter = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.analytics.admin.v1alpha.ChannelGroupFilter.InListFilter").msgclass
        ChannelGroupFilterExpression = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.analytics.admin.v1alpha.ChannelGroupFilterExpression").msgclass
        ChannelGroupFilterExpressionList = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.analytics.admin.v1alpha.ChannelGroupFilterExpressionList").msgclass
        GroupingRule = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.analytics.admin.v1alpha.GroupingRule").msgclass
        ChannelGroup = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.analytics.admin.v1alpha.ChannelGroup").msgclass
      end
    end
  end
end
