# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/visionai/v1/health_service.proto

require 'google/protobuf'

require 'google/api/annotations_pb'
require 'google/api/client_pb'
require 'google/api/resource_pb'


descriptor_data = "\n-google/cloud/visionai/v1/health_service.proto\x12\x18google.cloud.visionai.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x19google/api/resource.proto\"K\n\x12HealthCheckRequest\x12\x35\n\x07\x63luster\x18\x01 \x01(\tB$\xfa\x41!\n\x1fvisionai.googleapis.com/Cluster\"s\n\x13HealthCheckResponse\x12\x0f\n\x07healthy\x18\x01 \x01(\x08\x12\x0e\n\x06reason\x18\x02 \x01(\t\x12;\n\x0c\x63luster_info\x18\x03 \x01(\x0b\x32%.google.cloud.visionai.v1.ClusterInfo\"=\n\x0b\x43lusterInfo\x12\x15\n\rstreams_count\x18\x01 \x01(\x05\x12\x17\n\x0fprocesses_count\x18\x02 \x01(\x05\x32\x93\x02\n\x12HealthCheckService\x12\xaf\x01\n\x0bHealthCheck\x12,.google.cloud.visionai.v1.HealthCheckRequest\x1a-.google.cloud.visionai.v1.HealthCheckResponse\"C\x82\xd3\xe4\x93\x02=\x12;/v1/{cluster=projects/*/locations/*/clusters/*}:healthCheck\x1aK\xca\x41\x17visionai.googleapis.com\xd2\x41.https://www.googleapis.com/auth/cloud-platformB\xc7\x01\n\x1c\x63om.google.cloud.visionai.v1B\x17HealthCheckServiceProtoP\x01Z8cloud.google.com/go/visionai/apiv1/visionaipb;visionaipb\xaa\x02\x18Google.Cloud.VisionAI.V1\xca\x02\x18Google\\Cloud\\VisionAI\\V1\xea\x02\x1bGoogle::Cloud::VisionAI::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module VisionAI
      module V1
        HealthCheckRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.visionai.v1.HealthCheckRequest").msgclass
        HealthCheckResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.visionai.v1.HealthCheckResponse").msgclass
        ClusterInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.visionai.v1.ClusterInfo").msgclass
      end
    end
  end
end
