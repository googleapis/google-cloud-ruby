# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/visionai/v1/lva_resources.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'
require 'google/cloud/visionai/v1/lva_pb'
require 'google/protobuf/timestamp_pb'


descriptor_data = "\n,google/cloud/visionai/v1/lva_resources.proto\x12\x18google.cloud.visionai.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\"google/cloud/visionai/v1/lva.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb9\x03\n\x08Operator\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x34\n\x0b\x63reate_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x34\n\x0bupdate_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12>\n\x06labels\x18\x04 \x03(\x0b\x32..google.cloud.visionai.v1.Operator.LabelsEntry\x12I\n\x13operator_definition\x18\x05 \x01(\x0b\x32,.google.cloud.visionai.v1.OperatorDefinition\x12\x14\n\x0c\x64ocker_image\x18\x06 \x01(\t\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01:c\xea\x41`\n visionai.googleapis.com/Operator\x12<projects/{project}/locations/{location}/operators/{operator}\"\x85\x06\n\x08\x41nalysis\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x34\n\x0b\x63reate_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x34\n\x0bupdate_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12>\n\x06labels\x18\x04 \x03(\x0b\x32..google.cloud.visionai.v1.Analysis.LabelsEntry\x12I\n\x13\x61nalysis_definition\x18\x05 \x01(\x0b\x32,.google.cloud.visionai.v1.AnalysisDefinition\x12Z\n\x15input_streams_mapping\x18\x06 \x03(\x0b\x32;.google.cloud.visionai.v1.Analysis.InputStreamsMappingEntry\x12\\\n\x16output_streams_mapping\x18\x07 \x03(\x0b\x32<.google.cloud.visionai.v1.Analysis.OutputStreamsMappingEntry\x12\x1b\n\x13\x64isable_event_watch\x18\x08 \x01(\x08\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a:\n\x18InputStreamsMappingEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a;\n\x19OutputStreamsMappingEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01:u\xea\x41r\n visionai.googleapis.com/Analysis\x12Nprojects/{project}/locations/{location}/clusters/{cluster}/analyses/{analysis}\"\x97\x04\n\x07Process\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x34\n\x0b\x63reate_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x34\n\x0bupdate_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12:\n\x08\x61nalysis\x18\x04 \x01(\tB(\xe0\x41\x02\xfa\x41\"\n visionai.googleapis.com/Analysis\x12 \n\x13\x61ttribute_overrides\x18\x05 \x03(\tB\x03\xe0\x41\x01\x12<\n\nrun_status\x18\x06 \x01(\x0b\x32#.google.cloud.visionai.v1.RunStatusB\x03\xe0\x41\x01\x12\x38\n\x08run_mode\x18\x07 \x01(\x0e\x32!.google.cloud.visionai.v1.RunModeB\x03\xe0\x41\x01\x12\x15\n\x08\x65vent_id\x18\x08 \x01(\tB\x03\xe0\x41\x01\x12\x15\n\x08\x62\x61tch_id\x18\t \x01(\tB\x03\xe0\x41\x01\x12\x18\n\x0bretry_count\x18\n \x01(\x05\x42\x03\xe0\x41\x01:t\xea\x41q\n\x1fvisionai.googleapis.com/Process\x12Nprojects/{project}/locations/{location}/clusters/{cluster}/processes/{process}B\xc1\x01\n\x1c\x63om.google.cloud.visionai.v1B\x11LvaResourcesProtoP\x01Z8cloud.google.com/go/visionai/apiv1/visionaipb;visionaipb\xaa\x02\x18Google.Cloud.VisionAI.V1\xca\x02\x18Google\\Cloud\\VisionAI\\V1\xea\x02\x1bGoogle::Cloud::VisionAI::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.protobuf.Timestamp", "google/protobuf/timestamp.proto"],
    ["google.cloud.visionai.v1.OperatorDefinition", "google/cloud/visionai/v1/lva.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module VisionAI
      module V1
        Operator = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.visionai.v1.Operator").msgclass
        Analysis = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.visionai.v1.Analysis").msgclass
        Process = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.visionai.v1.Process").msgclass
      end
    end
  end
end
