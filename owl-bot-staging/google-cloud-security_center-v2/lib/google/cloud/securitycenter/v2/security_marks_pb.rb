# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/securitycenter/v2/security_marks.proto

require 'google/protobuf'

require 'google/api/resource_pb'


descriptor_data = "\n3google/cloud/securitycenter/v2/security_marks.proto\x12\x1egoogle.cloud.securitycenter.v2\x1a\x19google/api/resource.proto\"\xee\x06\n\rSecurityMarks\x12\x0c\n\x04name\x18\x01 \x01(\t\x12G\n\x05marks\x18\x02 \x03(\x0b\x32\x38.google.cloud.securitycenter.v2.SecurityMarks.MarksEntry\x12\x16\n\x0e\x63\x61nonical_name\x18\x03 \x01(\t\x1a,\n\nMarksEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01:\xbf\x05\xea\x41\xbb\x05\n+securitycenter.googleapis.com/SecurityMarks\x12\x39organizations/{organization}/assets/{asset}/securityMarks\x12Norganizations/{organization}/sources/{source}/findings/{finding}/securityMarks\x12\x63organizations/{organization}/sources/{source}/locations/{location}/findings/{finding}/securityMarks\x12-folders/{folder}/assets/{asset}/securityMarks\x12\x42\x66olders/{folder}/sources/{source}/findings/{finding}/securityMarks\x12Wfolders/{folder}/sources/{source}/locations/{location}/findings/{finding}/securityMarks\x12/projects/{project}/assets/{asset}/securityMarks\x12\x44projects/{project}/sources/{source}/findings/{finding}/securityMarks\x12Yprojects/{project}/sources/{source}/locations/{location}/findings/{finding}/securityMarksB\xec\x01\n\"com.google.cloud.securitycenter.v2B\x12SecurityMarksProtoP\x01ZJcloud.google.com/go/securitycenter/apiv2/securitycenterpb;securitycenterpb\xaa\x02\x1eGoogle.Cloud.SecurityCenter.V2\xca\x02\x1eGoogle\\Cloud\\SecurityCenter\\V2\xea\x02!Google::Cloud::SecurityCenter::V2b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module SecurityCenter
      module V2
        SecurityMarks = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.securitycenter.v2.SecurityMarks").msgclass
      end
    end
  end
end
