# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/capacityplanner/v1beta/location.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'


descriptor_data = "\n2google/cloud/capacityplanner/v1beta/location.proto\x12#google.cloud.capacityplanner.v1beta\x1a\x1fgoogle/api/field_behavior.proto\"\xe1\x02\n\x12LocationIdentifier\x12J\n\x0elocation_level\x18\x01 \x01(\x0e\x32\x32.google.cloud.capacityplanner.v1beta.LocationLevel\x12\x13\n\x06source\x18\x02 \x01(\tB\x03\xe0\x41\x02\x12\x65\n\x10linked_locations\x18\x03 \x03(\x0b\x32\x46.google.cloud.capacityplanner.v1beta.LocationIdentifier.LinkedLocationB\x03\xe0\x41\x01\x1a\x82\x01\n\x0eLinkedLocation\x12J\n\x0elocation_level\x18\x01 \x01(\x0e\x32\x32.google.cloud.capacityplanner.v1beta.LocationLevel\x12\x15\n\x08location\x18\x02 \x01(\tB\x03\xe0\x41\x02\x12\r\n\x05label\x18\x03 \x01(\t*\x7f\n\rLocationLevel\x12\x1e\n\x1aLOCATION_LEVEL_UNSPECIFIED\x10\x00\x12\n\n\x06REGION\x10\x01\x12\x08\n\x04ZONE\x10\x02\x12\n\n\x06GLOBAL\x10\x03\x12\t\n\x05METRO\x10\x04\x12\x0f\n\x0b\x44UAL_REGION\x10\x05\x12\x10\n\x0cMULTI_REGION\x10\x06\x42\x82\x02\n\'com.google.cloud.capacityplanner.v1betaB\rLocationProtoP\x01ZQcloud.google.com/go/capacityplanner/apiv1beta/capacityplannerpb;capacityplannerpb\xaa\x02#Google.Cloud.CapacityPlanner.V1Beta\xca\x02#Google\\Cloud\\CapacityPlanner\\V1beta\xea\x02&Google::Cloud::CapacityPlanner::V1betab\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module CapacityPlanner
      module V1beta
        LocationIdentifier = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.capacityplanner.v1beta.LocationIdentifier").msgclass
        LocationIdentifier::LinkedLocation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.capacityplanner.v1beta.LocationIdentifier.LinkedLocation").msgclass
        LocationLevel = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.capacityplanner.v1beta.LocationLevel").enummodule
      end
    end
  end
end
