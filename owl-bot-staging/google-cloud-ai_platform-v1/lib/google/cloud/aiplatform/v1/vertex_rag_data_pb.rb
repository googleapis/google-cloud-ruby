# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/vertex_rag_data.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'
require 'google/cloud/aiplatform/v1/api_auth_pb'
require 'google/cloud/aiplatform/v1/io_pb'
require 'google/protobuf/timestamp_pb'


descriptor_data = "\n0google/cloud/aiplatform/v1/vertex_rag_data.proto\x12\x1agoogle.cloud.aiplatform.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a)google/cloud/aiplatform/v1/api_auth.proto\x1a#google/cloud/aiplatform/v1/io.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xcf\x02\n\x17RagEmbeddingModelConfig\x12r\n\x1avertex_prediction_endpoint\x18\x01 \x01(\x0b\x32L.google.cloud.aiplatform.v1.RagEmbeddingModelConfig.VertexPredictionEndpointH\x00\x1a\xaf\x01\n\x18VertexPredictionEndpoint\x12<\n\x08\x65ndpoint\x18\x01 \x01(\tB*\xe0\x41\x02\xfa\x41$\n\"aiplatform.googleapis.com/Endpoint\x12\x36\n\x05model\x18\x02 \x01(\tB\'\xe0\x41\x03\xfa\x41!\n\x1f\x61iplatform.googleapis.com/Model\x12\x1d\n\x10model_version_id\x18\x03 \x01(\tB\x03\xe0\x41\x03\x42\x0e\n\x0cmodel_config\"\xa9\x04\n\x11RagVectorDbConfig\x12T\n\x0erag_managed_db\x18\x01 \x01(\x0b\x32:.google.cloud.aiplatform.v1.RagVectorDbConfig.RagManagedDbH\x00\x12J\n\x08pinecone\x18\x03 \x01(\x0b\x32\x36.google.cloud.aiplatform.v1.RagVectorDbConfig.PineconeH\x00\x12`\n\x14vertex_vector_search\x18\x06 \x01(\x0b\x32@.google.cloud.aiplatform.v1.RagVectorDbConfig.VertexVectorSearchH\x00\x12\x35\n\x08\x61pi_auth\x18\x05 \x01(\x0b\x32#.google.cloud.aiplatform.v1.ApiAuth\x12_\n\x1arag_embedding_model_config\x18\x07 \x01(\x0b\x32\x33.google.cloud.aiplatform.v1.RagEmbeddingModelConfigB\x06\xe0\x41\x01\xe0\x41\x05\x1a\x0e\n\x0cRagManagedDb\x1a\x1e\n\x08Pinecone\x12\x12\n\nindex_name\x18\x01 \x01(\t\x1a;\n\x12VertexVectorSearch\x12\x16\n\x0eindex_endpoint\x18\x01 \x01(\t\x12\r\n\x05index\x18\x02 \x01(\tB\x0b\n\tvector_db\"\xa0\x01\n\nFileStatus\x12@\n\x05state\x18\x01 \x01(\x0e\x32,.google.cloud.aiplatform.v1.FileStatus.StateB\x03\xe0\x41\x03\x12\x19\n\x0c\x65rror_status\x18\x02 \x01(\tB\x03\xe0\x41\x03\"5\n\x05State\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\n\n\x06\x41\x43TIVE\x10\x01\x12\t\n\x05\x45RROR\x10\x02\"\xab\x01\n\x0c\x43orpusStatus\x12\x42\n\x05state\x18\x01 \x01(\x0e\x32..google.cloud.aiplatform.v1.CorpusStatus.StateB\x03\xe0\x41\x03\x12\x19\n\x0c\x65rror_status\x18\x02 \x01(\tB\x03\xe0\x41\x03\"<\n\x05State\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0f\n\x0bINITIALIZED\x10\x01\x12\n\n\x06\x41\x43TIVE\x10\x02\x12\t\n\x05\x45RROR\x10\x03\"\xed\x03\n\tRagCorpus\x12\x11\n\x04name\x18\x01 \x01(\tB\x03\xe0\x41\x03\x12\x19\n\x0c\x64isplay_name\x18\x02 \x01(\tB\x03\xe0\x41\x02\x12\x18\n\x0b\x64\x65scription\x18\x03 \x01(\tB\x03\xe0\x41\x01\x12\x34\n\x0b\x63reate_time\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x34\n\x0bupdate_time\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x44\n\rcorpus_status\x18\x08 \x01(\x0b\x32(.google.cloud.aiplatform.v1.CorpusStatusB\x03\xe0\x41\x03\x12Q\n\x10vector_db_config\x18\t \x01(\x0b\x32-.google.cloud.aiplatform.v1.RagVectorDbConfigB\x06\xe0\x41\x01\xe0\x41\x05H\x00:\x80\x01\xea\x41}\n#aiplatform.googleapis.com/RagCorpus\x12?projects/{project}/locations/{location}/ragCorpora/{rag_corpus}*\nragCorpora2\tragCorpusB\x10\n\x0e\x62\x61\x63kend_config\"\xdc\x06\n\x07RagFile\x12@\n\ngcs_source\x18\x08 \x01(\x0b\x32%.google.cloud.aiplatform.v1.GcsSourceB\x03\xe0\x41\x03H\x00\x12Q\n\x13google_drive_source\x18\t \x01(\x0b\x32-.google.cloud.aiplatform.v1.GoogleDriveSourceB\x03\xe0\x41\x03H\x00\x12S\n\x14\x64irect_upload_source\x18\n \x01(\x0b\x32..google.cloud.aiplatform.v1.DirectUploadSourceB\x03\xe0\x41\x03H\x00\x12?\n\x0cslack_source\x18\x0b \x01(\x0b\x32\'.google.cloud.aiplatform.v1.SlackSourceH\x00\x12=\n\x0bjira_source\x18\x0c \x01(\x0b\x32&.google.cloud.aiplatform.v1.JiraSourceH\x00\x12L\n\x13share_point_sources\x18\x0e \x01(\x0b\x32-.google.cloud.aiplatform.v1.SharePointSourcesH\x00\x12\x11\n\x04name\x18\x01 \x01(\tB\x03\xe0\x41\x03\x12\x19\n\x0c\x64isplay_name\x18\x02 \x01(\tB\x03\xe0\x41\x02\x12\x18\n\x0b\x64\x65scription\x18\x03 \x01(\tB\x03\xe0\x41\x01\x12\x34\n\x0b\x63reate_time\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x34\n\x0bupdate_time\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12@\n\x0b\x66ile_status\x18\r \x01(\x0b\x32&.google.cloud.aiplatform.v1.FileStatusB\x03\xe0\x41\x03:\x8f\x01\xea\x41\x8b\x01\n!aiplatform.googleapis.com/RagFile\x12Sprojects/{project}/locations/{location}/ragCorpora/{rag_corpus}/ragFiles/{rag_file}*\x08ragFiles2\x07ragFileB\x11\n\x0frag_file_source\"\xd4\x01\n\x15RagFileChunkingConfig\x12\x66\n\x15\x66ixed_length_chunking\x18\x03 \x01(\x0b\x32\x45.google.cloud.aiplatform.v1.RagFileChunkingConfig.FixedLengthChunkingH\x00\x1a@\n\x13\x46ixedLengthChunking\x12\x12\n\nchunk_size\x18\x01 \x01(\x05\x12\x15\n\rchunk_overlap\x18\x02 \x01(\x05\x42\x11\n\x0f\x63hunking_config\"r\n\x1bRagFileTransformationConfig\x12S\n\x18rag_file_chunking_config\x18\x01 \x01(\x0b\x32\x31.google.cloud.aiplatform.v1.RagFileChunkingConfig\"\xc6\x01\n\x14RagFileParsingConfig\x12V\n\rlayout_parser\x18\x04 \x01(\x0b\x32=.google.cloud.aiplatform.v1.RagFileParsingConfig.LayoutParserH\x00\x1aL\n\x0cLayoutParser\x12\x16\n\x0eprocessor_name\x18\x01 \x01(\t\x12$\n\x1cmax_parsing_requests_per_min\x18\x02 \x01(\x05\x42\x08\n\x06parser\"v\n\x13UploadRagFileConfig\x12_\n\x1erag_file_transformation_config\x18\x03 \x01(\x0b\x32\x37.google.cloud.aiplatform.v1.RagFileTransformationConfig\"\xec\x07\n\x14ImportRagFilesConfig\x12;\n\ngcs_source\x18\x02 \x01(\x0b\x32%.google.cloud.aiplatform.v1.GcsSourceH\x00\x12L\n\x13google_drive_source\x18\x03 \x01(\x0b\x32-.google.cloud.aiplatform.v1.GoogleDriveSourceH\x00\x12?\n\x0cslack_source\x18\x06 \x01(\x0b\x32\'.google.cloud.aiplatform.v1.SlackSourceH\x00\x12=\n\x0bjira_source\x18\x07 \x01(\x0b\x32&.google.cloud.aiplatform.v1.JiraSourceH\x00\x12L\n\x13share_point_sources\x18\r \x01(\x0b\x32-.google.cloud.aiplatform.v1.SharePointSourcesH\x00\x12R\n\x18partial_failure_gcs_sink\x18\x0b \x01(\x0b\x32*.google.cloud.aiplatform.v1.GcsDestinationB\x02\x18\x01H\x01\x12\\\n\x1dpartial_failure_bigquery_sink\x18\x0c \x01(\x0b\x32/.google.cloud.aiplatform.v1.BigQueryDestinationB\x02\x18\x01H\x01\x12L\n\x16import_result_gcs_sink\x18\x0e \x01(\x0b\x32*.google.cloud.aiplatform.v1.GcsDestinationH\x02\x12V\n\x1bimport_result_bigquery_sink\x18\x0f \x01(\x0b\x32/.google.cloud.aiplatform.v1.BigQueryDestinationH\x02\x12_\n\x1erag_file_transformation_config\x18\x10 \x01(\x0b\x32\x37.google.cloud.aiplatform.v1.RagFileTransformationConfig\x12V\n\x17rag_file_parsing_config\x18\x08 \x01(\x0b\x32\x30.google.cloud.aiplatform.v1.RagFileParsingConfigB\x03\xe0\x41\x01\x12+\n\x1emax_embedding_requests_per_min\x18\x05 \x01(\x05\x42\x03\xe0\x41\x01\x42\x0f\n\rimport_sourceB\x16\n\x14partial_failure_sinkB\x14\n\x12import_result_sinkB\xd0\x01\n\x1e\x63om.google.cloud.aiplatform.v1B\x12VertexRagDataProtoP\x01Z>cloud.google.com/go/aiplatform/apiv1/aiplatformpb;aiplatformpb\xaa\x02\x1aGoogle.Cloud.AIPlatform.V1\xca\x02\x1aGoogle\\Cloud\\AIPlatform\\V1\xea\x02\x1dGoogle::Cloud::AIPlatform::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.cloud.aiplatform.v1.ApiAuth", "google/cloud/aiplatform/v1/api_auth.proto"],
    ["google.protobuf.Timestamp", "google/protobuf/timestamp.proto"],
    ["google.cloud.aiplatform.v1.GcsSource", "google/cloud/aiplatform/v1/io.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module AIPlatform
      module V1
        RagEmbeddingModelConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.RagEmbeddingModelConfig").msgclass
        RagEmbeddingModelConfig::VertexPredictionEndpoint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.RagEmbeddingModelConfig.VertexPredictionEndpoint").msgclass
        RagVectorDbConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.RagVectorDbConfig").msgclass
        RagVectorDbConfig::RagManagedDb = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.RagVectorDbConfig.RagManagedDb").msgclass
        RagVectorDbConfig::Pinecone = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.RagVectorDbConfig.Pinecone").msgclass
        RagVectorDbConfig::VertexVectorSearch = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.RagVectorDbConfig.VertexVectorSearch").msgclass
        FileStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.FileStatus").msgclass
        FileStatus::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.FileStatus.State").enummodule
        CorpusStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.CorpusStatus").msgclass
        CorpusStatus::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.CorpusStatus.State").enummodule
        RagCorpus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.RagCorpus").msgclass
        RagFile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.RagFile").msgclass
        RagFileChunkingConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.RagFileChunkingConfig").msgclass
        RagFileChunkingConfig::FixedLengthChunking = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.RagFileChunkingConfig.FixedLengthChunking").msgclass
        RagFileTransformationConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.RagFileTransformationConfig").msgclass
        RagFileParsingConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.RagFileParsingConfig").msgclass
        RagFileParsingConfig::LayoutParser = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.RagFileParsingConfig.LayoutParser").msgclass
        UploadRagFileConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.UploadRagFileConfig").msgclass
        ImportRagFilesConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.ImportRagFilesConfig").msgclass
      end
    end
  end
end
