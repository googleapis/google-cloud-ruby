# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/dataset.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'
require 'google/cloud/aiplatform/v1/encryption_spec_pb'
require 'google/cloud/aiplatform/v1/io_pb'
require 'google/cloud/aiplatform/v1/saved_query_pb'
require 'google/protobuf/struct_pb'
require 'google/protobuf/timestamp_pb'


descriptor_data = "\n(google/cloud/aiplatform/v1/dataset.proto\x12\x1agoogle.cloud.aiplatform.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\x30google/cloud/aiplatform/v1/encryption_spec.proto\x1a#google/cloud/aiplatform/v1/io.proto\x1a,google/cloud/aiplatform/v1/saved_query.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8f\x05\n\x07\x44\x61taset\x12\x11\n\x04name\x18\x01 \x01(\tB\x03\xe0\x41\x03\x12\x19\n\x0c\x64isplay_name\x18\x02 \x01(\tB\x03\xe0\x41\x02\x12\x13\n\x0b\x64\x65scription\x18\x10 \x01(\t\x12 \n\x13metadata_schema_uri\x18\x03 \x01(\tB\x03\xe0\x41\x02\x12-\n\x08metadata\x18\x08 \x01(\x0b\x32\x16.google.protobuf.ValueB\x03\xe0\x41\x02\x12\x34\n\x0b\x63reate_time\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x34\n\x0bupdate_time\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x0c\n\x04\x65tag\x18\x06 \x01(\t\x12?\n\x06labels\x18\x07 \x03(\x0b\x32/.google.cloud.aiplatform.v1.Dataset.LabelsEntry\x12=\n\rsaved_queries\x18\t \x03(\x0b\x32&.google.cloud.aiplatform.v1.SavedQuery\x12\x43\n\x0f\x65ncryption_spec\x18\x0b \x01(\x0b\x32*.google.cloud.aiplatform.v1.EncryptionSpec\x12\x1e\n\x11metadata_artifact\x18\x11 \x01(\tB\x03\xe0\x41\x03\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01:b\xea\x41_\n!aiplatform.googleapis.com/Dataset\x12:projects/{project}/locations/{location}/datasets/{dataset}\"\xa4\x03\n\x10ImportDataConfig\x12;\n\ngcs_source\x18\x01 \x01(\x0b\x32%.google.cloud.aiplatform.v1.GcsSourceH\x00\x12Z\n\x10\x64\x61ta_item_labels\x18\x02 \x03(\x0b\x32@.google.cloud.aiplatform.v1.ImportDataConfig.DataItemLabelsEntry\x12]\n\x11\x61nnotation_labels\x18\x03 \x03(\x0b\x32\x42.google.cloud.aiplatform.v1.ImportDataConfig.AnnotationLabelsEntry\x12\x1e\n\x11import_schema_uri\x18\x04 \x01(\tB\x03\xe0\x41\x02\x1a\x35\n\x13\x44\x61taItemLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15\x41nnotationLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42\x08\n\x06source\"\xd8\x01\n\x10\x45xportDataConfig\x12\x45\n\x0fgcs_destination\x18\x01 \x01(\x0b\x32*.google.cloud.aiplatform.v1.GcsDestinationH\x00\x12I\n\x0e\x66raction_split\x18\x05 \x01(\x0b\x32/.google.cloud.aiplatform.v1.ExportFractionSplitH\x01\x12\x1a\n\x12\x61nnotations_filter\x18\x02 \x01(\tB\r\n\x0b\x64\x65stinationB\x07\n\x05split\"d\n\x13\x45xportFractionSplit\x12\x19\n\x11training_fraction\x18\x01 \x01(\x01\x12\x1b\n\x13validation_fraction\x18\x02 \x01(\x01\x12\x15\n\rtest_fraction\x18\x03 \x01(\x01\x42\xca\x01\n\x1e\x63om.google.cloud.aiplatform.v1B\x0c\x44\x61tasetProtoP\x01Z>cloud.google.com/go/aiplatform/apiv1/aiplatformpb;aiplatformpb\xaa\x02\x1aGoogle.Cloud.AIPlatform.V1\xca\x02\x1aGoogle\\Cloud\\AIPlatform\\V1\xea\x02\x1dGoogle::Cloud::AIPlatform::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.protobuf.Value", "google/protobuf/struct.proto"],
    ["google.protobuf.Timestamp", "google/protobuf/timestamp.proto"],
    ["google.cloud.aiplatform.v1.SavedQuery", "google/cloud/aiplatform/v1/saved_query.proto"],
    ["google.cloud.aiplatform.v1.EncryptionSpec", "google/cloud/aiplatform/v1/encryption_spec.proto"],
    ["google.cloud.aiplatform.v1.GcsSource", "google/cloud/aiplatform/v1/io.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module AIPlatform
      module V1
        Dataset = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.Dataset").msgclass
        ImportDataConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.ImportDataConfig").msgclass
        ExportDataConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.ExportDataConfig").msgclass
        ExportFractionSplit = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.ExportFractionSplit").msgclass
      end
    end
  end
end
