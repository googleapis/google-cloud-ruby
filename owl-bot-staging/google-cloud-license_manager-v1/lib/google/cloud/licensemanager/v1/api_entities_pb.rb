# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/licensemanager/v1/api_entities.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'
require 'google/protobuf/timestamp_pb'


descriptor_data = "\n1google/cloud/licensemanager/v1/api_entities.proto\x12\x1egoogle.cloud.licensemanager.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8b\x07\n\rConfiguration\x12\x11\n\x04name\x18\x01 \x01(\tB\x03\xe0\x41\x08\x12\x19\n\x0c\x64isplay_name\x18\x05 \x01(\tB\x03\xe0\x41\x02\x12>\n\x07product\x18\x06 \x01(\tB-\xe0\x41\x02\xfa\x41\'\n%licensemanager.googleapis.com/Product\x12\x46\n\x0clicense_type\x18\x07 \x01(\x0e\x32+.google.cloud.licensemanager.v1.LicenseTypeB\x03\xe0\x41\x02\x12N\n\x14\x63urrent_billing_info\x18\x08 \x01(\x0b\x32+.google.cloud.licensemanager.v1.BillingInfoB\x03\xe0\x41\x02\x12K\n\x11next_billing_info\x18\t \x01(\x0b\x32+.google.cloud.licensemanager.v1.BillingInfoB\x03\xe0\x41\x02\x12\x34\n\x0b\x63reate_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x34\n\x0bupdate_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12N\n\x06labels\x18\x04 \x03(\x0b\x32\x39.google.cloud.licensemanager.v1.Configuration.LabelsEntryB\x03\xe0\x41\x01\x12G\n\x05state\x18\n \x01(\x0e\x32\x33.google.cloud.licensemanager.v1.Configuration.StateB\x03\xe0\x41\x03\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"X\n\x05State\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\x10\n\x0cSTATE_ACTIVE\x10\x01\x12\x13\n\x0fSTATE_SUSPENDED\x10\x02\x12\x11\n\rSTATE_DELETED\x10\x03:\x98\x01\xea\x41\x94\x01\n+licensemanager.googleapis.com/Configuration\x12\x46projects/{project}/locations/{location}/configurations/{configuration}*\x0e\x63onfigurations2\rconfiguration\"\xe6\x01\n\x0b\x42illingInfo\x12W\n\x12user_count_billing\x18\x01 \x01(\x0b\x32\x34.google.cloud.licensemanager.v1.UserCountBillingInfoB\x03\xe0\x41\x02H\x00\x12\x33\n\nstart_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x31\n\x08\x65nd_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x42\x16\n\x14\x63urrent_billing_info\"/\n\x14UserCountBillingInfo\x12\x17\n\nuser_count\x18\x01 \x01(\x05\x42\x03\xe0\x41\x02\"0\n\x0eUserCountUsage\x12\x1e\n\x11unique_user_count\x18\x01 \x01(\x05\x42\x03\xe0\x41\x02\"\xcd\x03\n\x07Product\x12\x11\n\x04name\x18\x01 \x01(\tB\x03\xe0\x41\x08\x12\x14\n\x07version\x18\x02 \x01(\tB\x03\xe0\x41\x02\x12\x1c\n\x0fproduct_company\x18\x03 \x01(\tB\x03\xe0\x41\x02\x12\x41\n\x05state\x18\x04 \x01(\x0e\x32-.google.cloud.licensemanager.v1.Product.StateB\x03\xe0\x41\x03\x12\x10\n\x03sku\x18\x05 \x01(\tB\x03\xe0\x41\x02\x12\x18\n\x0b\x64\x65scription\x18\x06 \x01(\tB\x03\xe0\x41\x02\x12\x19\n\x0c\x64isplay_name\x18\x07 \x01(\tB\x03\xe0\x41\x02\"v\n\x05State\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\x16\n\x12STATE_PROVISIONING\x10\x01\x12\x11\n\rSTATE_RUNNING\x10\x02\x12\x15\n\x11STATE_TERMINATING\x10\x03\x12\x14\n\x10STATE_TERMINATED\x10\x04:y\xea\x41v\n%licensemanager.googleapis.com/Product\x12:projects/{project}/locations/{location}/products/{product}*\x08products2\x07product\"\x9b\x07\n\x08Instance\x12\x11\n\x04name\x18\x01 \x01(\tB\x03\xe0\x41\x08\x12\x34\n\x0b\x63reate_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x34\n\x0bupdate_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12I\n\x06labels\x18\x04 \x03(\x0b\x32\x34.google.cloud.licensemanager.v1.Instance.LabelsEntryB\x03\xe0\x41\x01\x12\x42\n\x05state\x18\x05 \x01(\x0e\x32..google.cloud.licensemanager.v1.Instance.StateB\x03\xe0\x41\x03\x12\x13\n\x06region\x18\x06 \x01(\tB\x03\xe0\x41\x03\x12`\n\x12product_activation\x18\x07 \x03(\x0b\x32?.google.cloud.licensemanager.v1.Instance.ProductActivationEntryB\x03\xe0\x41\x03\x12\x1f\n\x12license_version_id\x18\x08 \x01(\tB\x03\xe0\x41\x03\x12H\n\x10\x63ompute_instance\x18\t \x01(\tB.\xe0\x41\x02\xfa\x41(\n&compute.googleapis.com/ComputeInstance\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1ai\n\x16ProductActivationEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12>\n\x05value\x18\x02 \x01(\x0e\x32/.google.cloud.licensemanager.v1.ActivationState:\x02\x38\x01\"\x84\x01\n\x05State\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\x10\n\x0cPROVISIONING\x10\x01\x12\x0b\n\x07STAGING\x10\x02\x12\x0b\n\x07RUNNING\x10\x03\x12\x0c\n\x08STOPPING\x10\x04\x12\x0b\n\x07STOPPED\x10\x05\x12\x0e\n\nTERMINATED\x10\x06\x12\r\n\tREPAIRING\x10\x07:~\xea\x41{\n&licensemanager.googleapis.com/Instance\x12<projects/{project}/locations/{location}/instances/{instance}*\tinstances2\x08instance\"Z\n\x05Usage\x12\x42\n\rlima_instance\x18\x01 \x01(\tB+\xfa\x41(\n&licensemanager.googleapis.com/Instance\x12\r\n\x05users\x18\x02 \x01(\x05*y\n\x0bLicenseType\x12\x1c\n\x18LICENSE_TYPE_UNSPECIFIED\x10\x00\x12#\n\x1fLICENSE_TYPE_PER_MONTH_PER_USER\x10\x01\x12\'\n#LICENSE_TYPE_BRING_YOUR_OWN_LICENSE\x10\x02*\xfe\x01\n\x0f\x41\x63tivationState\x12 \n\x1c\x41\x43TIVATION_STATE_UNSPECIFIED\x10\x00\x12\"\n\x1e\x41\x43TIVATION_STATE_KEY_REQUESTED\x10\x01\x12\x1f\n\x1b\x41\x43TIVATION_STATE_ACTIVATING\x10\x02\x12\x1e\n\x1a\x41\x43TIVATION_STATE_ACTIVATED\x10\x03\x12!\n\x1d\x41\x43TIVATION_STATE_DEACTIVATING\x10\x04\x12 \n\x1c\x41\x43TIVATION_STATE_DEACTIVATED\x10\x05\x12\x1f\n\x1b\x41\x43TIVATION_STATE_TERMINATED\x10\x06\x42\xea\x01\n\"com.google.cloud.licensemanager.v1B\x10\x41piEntitiesProtoP\x01ZJcloud.google.com/go/licensemanager/apiv1/licensemanagerpb;licensemanagerpb\xaa\x02\x1eGoogle.Cloud.LicenseManager.V1\xca\x02\x1eGoogle\\Cloud\\LicenseManager\\V1\xea\x02!Google::Cloud::LicenseManager::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.protobuf.Timestamp", "google/protobuf/timestamp.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module LicenseManager
      module V1
        Configuration = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.licensemanager.v1.Configuration").msgclass
        Configuration::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.licensemanager.v1.Configuration.State").enummodule
        BillingInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.licensemanager.v1.BillingInfo").msgclass
        UserCountBillingInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.licensemanager.v1.UserCountBillingInfo").msgclass
        UserCountUsage = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.licensemanager.v1.UserCountUsage").msgclass
        Product = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.licensemanager.v1.Product").msgclass
        Product::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.licensemanager.v1.Product.State").enummodule
        Instance = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.licensemanager.v1.Instance").msgclass
        Instance::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.licensemanager.v1.Instance.State").enummodule
        Usage = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.licensemanager.v1.Usage").msgclass
        LicenseType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.licensemanager.v1.LicenseType").enummodule
        ActivationState = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.licensemanager.v1.ActivationState").enummodule
      end
    end
  end
end
