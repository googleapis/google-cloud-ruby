# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/connectors/v1/ssl_config.proto

require 'google/protobuf'

require 'google/cloud/connectors/v1/common_pb'


descriptor_data = "\n+google/cloud/connectors/v1/ssl_config.proto\x12\x1agoogle.cloud.connectors.v1\x1a\'google/cloud/connectors/v1/common.proto\"\xb6\x02\n\x11SslConfigTemplate\x12\x35\n\x08ssl_type\x18\x01 \x01(\x0e\x32#.google.cloud.connectors.v1.SslType\x12\x18\n\x10is_tls_mandatory\x18\x02 \x01(\x08\x12>\n\x10server_cert_type\x18\x03 \x03(\x0e\x32$.google.cloud.connectors.v1.CertType\x12>\n\x10\x63lient_cert_type\x18\x04 \x03(\x0e\x32$.google.cloud.connectors.v1.CertType\x12P\n\x14\x61\x64\x64itional_variables\x18\x05 \x03(\x0b\x32\x32.google.cloud.connectors.v1.ConfigVariableTemplate\"\xa2\x05\n\tSslConfig\x12\x31\n\x04type\x18\x01 \x01(\x0e\x32#.google.cloud.connectors.v1.SslType\x12\x45\n\x0btrust_model\x18\x02 \x01(\x0e\x32\x30.google.cloud.connectors.v1.SslConfig.TrustModel\x12\x46\n\x1aprivate_server_certificate\x18\x03 \x01(\x0b\x32\".google.cloud.connectors.v1.Secret\x12>\n\x12\x63lient_certificate\x18\x04 \x01(\x0b\x32\".google.cloud.connectors.v1.Secret\x12>\n\x12\x63lient_private_key\x18\x05 \x01(\x0b\x32\".google.cloud.connectors.v1.Secret\x12\x43\n\x17\x63lient_private_key_pass\x18\x06 \x01(\x0b\x32\".google.cloud.connectors.v1.Secret\x12>\n\x10server_cert_type\x18\x07 \x01(\x0e\x32$.google.cloud.connectors.v1.CertType\x12>\n\x10\x63lient_cert_type\x18\x08 \x01(\x0e\x32$.google.cloud.connectors.v1.CertType\x12\x0f\n\x07use_ssl\x18\t \x01(\x08\x12H\n\x14\x61\x64\x64itional_variables\x18\n \x03(\x0b\x32*.google.cloud.connectors.v1.ConfigVariable\"3\n\nTrustModel\x12\n\n\x06PUBLIC\x10\x00\x12\x0b\n\x07PRIVATE\x10\x01\x12\x0c\n\x08INSECURE\x10\x02*6\n\x07SslType\x12\x18\n\x14SSL_TYPE_UNSPECIFIED\x10\x00\x12\x07\n\x03TLS\x10\x01\x12\x08\n\x04MTLS\x10\x02*.\n\x08\x43\x65rtType\x12\x19\n\x15\x43\x45RT_TYPE_UNSPECIFIED\x10\x00\x12\x07\n\x03PEM\x10\x01\x42r\n\x1e\x63om.google.cloud.connectors.v1B\x0eSslConfigProtoP\x01Z>cloud.google.com/go/connectors/apiv1/connectorspb;connectorspbb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.cloud.connectors.v1.ConfigVariableTemplate", "google/cloud/connectors/v1/common.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module Connectors
      module V1
        SslConfigTemplate = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.connectors.v1.SslConfigTemplate").msgclass
        SslConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.connectors.v1.SslConfig").msgclass
        SslConfig::TrustModel = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.connectors.v1.SslConfig.TrustModel").enummodule
        SslType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.connectors.v1.SslType").enummodule
        CertType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.connectors.v1.CertType").enummodule
      end
    end
  end
end
