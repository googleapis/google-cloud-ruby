# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/identity/accesscontextmanager/v1/access_context_manager.proto for package 'Google.Identity.AccessContextManager.V1'
# Original file comments:
# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'google/identity/accesscontextmanager/v1/access_context_manager_pb'

module Google
  module Identity
    module AccessContextManager
      module V1
        module AccessContextManager
          # API for setting [Access Levels]
          # [google.identity.accesscontextmanager.v1.AccessLevel] and [Service
          # Perimeters] [google.identity.accesscontextmanager.v1.ServicePerimeter]
          # for Google Cloud Projects. Each organization has one [AccessPolicy]
          # [google.identity.accesscontextmanager.v1.AccessPolicy] containing the
          # [Access Levels] [google.identity.accesscontextmanager.v1.AccessLevel]
          # and [Service Perimeters]
          # [google.identity.accesscontextmanager.v1.ServicePerimeter]. This
          # [AccessPolicy] [google.identity.accesscontextmanager.v1.AccessPolicy] is
          # applicable to all resources in the organization.
          # AccessPolicies
          class Service

            include ::GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'google.identity.accesscontextmanager.v1.AccessContextManager'

            # List all [AccessPolicies]
            # [google.identity.accesscontextmanager.v1.AccessPolicy] under a
            # container.
            rpc :ListAccessPolicies, ::Google::Identity::AccessContextManager::V1::ListAccessPoliciesRequest, ::Google::Identity::AccessContextManager::V1::ListAccessPoliciesResponse
            # Get an [AccessPolicy]
            # [google.identity.accesscontextmanager.v1.AccessPolicy] by name.
            rpc :GetAccessPolicy, ::Google::Identity::AccessContextManager::V1::GetAccessPolicyRequest, ::Google::Identity::AccessContextManager::V1::AccessPolicy
            # Create an `AccessPolicy`. Fails if this organization already has a
            # `AccessPolicy`. The longrunning Operation will have a successful status
            # once the `AccessPolicy` has propagated to long-lasting storage.
            # Syntactic and basic semantic errors will be returned in `metadata` as a
            # BadRequest proto.
            rpc :CreateAccessPolicy, ::Google::Identity::AccessContextManager::V1::AccessPolicy, ::Google::Longrunning::Operation
            # Update an [AccessPolicy]
            # [google.identity.accesscontextmanager.v1.AccessPolicy]. The
            # longrunning Operation from this RPC will have a successful status once the
            # changes to the [AccessPolicy]
            # [google.identity.accesscontextmanager.v1.AccessPolicy] have propagated
            # to long-lasting storage. Syntactic and basic semantic errors will be
            # returned in `metadata` as a BadRequest proto.
            rpc :UpdateAccessPolicy, ::Google::Identity::AccessContextManager::V1::UpdateAccessPolicyRequest, ::Google::Longrunning::Operation
            # Delete an [AccessPolicy]
            # [google.identity.accesscontextmanager.v1.AccessPolicy] by resource
            # name. The longrunning Operation will have a successful status once the
            # [AccessPolicy] [google.identity.accesscontextmanager.v1.AccessPolicy]
            # has been removed from long-lasting storage.
            rpc :DeleteAccessPolicy, ::Google::Identity::AccessContextManager::V1::DeleteAccessPolicyRequest, ::Google::Longrunning::Operation
            # List all [Access Levels]
            # [google.identity.accesscontextmanager.v1.AccessLevel] for an access
            # policy.
            rpc :ListAccessLevels, ::Google::Identity::AccessContextManager::V1::ListAccessLevelsRequest, ::Google::Identity::AccessContextManager::V1::ListAccessLevelsResponse
            # Get an [Access Level]
            # [google.identity.accesscontextmanager.v1.AccessLevel] by resource
            # name.
            rpc :GetAccessLevel, ::Google::Identity::AccessContextManager::V1::GetAccessLevelRequest, ::Google::Identity::AccessContextManager::V1::AccessLevel
            # Create an [Access Level]
            # [google.identity.accesscontextmanager.v1.AccessLevel]. The longrunning
            # operation from this RPC will have a successful status once the [Access
            # Level] [google.identity.accesscontextmanager.v1.AccessLevel] has
            # propagated to long-lasting storage. [Access Levels]
            # [google.identity.accesscontextmanager.v1.AccessLevel] containing
            # errors will result in an error response for the first error encountered.
            rpc :CreateAccessLevel, ::Google::Identity::AccessContextManager::V1::CreateAccessLevelRequest, ::Google::Longrunning::Operation
            # Update an [Access Level]
            # [google.identity.accesscontextmanager.v1.AccessLevel]. The longrunning
            # operation from this RPC will have a successful status once the changes to
            # the [Access Level]
            # [google.identity.accesscontextmanager.v1.AccessLevel] have propagated
            # to long-lasting storage. [Access Levels]
            # [google.identity.accesscontextmanager.v1.AccessLevel] containing
            # errors will result in an error response for the first error encountered.
            rpc :UpdateAccessLevel, ::Google::Identity::AccessContextManager::V1::UpdateAccessLevelRequest, ::Google::Longrunning::Operation
            # Delete an [Access Level]
            # [google.identity.accesscontextmanager.v1.AccessLevel] by resource
            # name. The longrunning operation from this RPC will have a successful status
            # once the [Access Level]
            # [google.identity.accesscontextmanager.v1.AccessLevel] has been removed
            # from long-lasting storage.
            rpc :DeleteAccessLevel, ::Google::Identity::AccessContextManager::V1::DeleteAccessLevelRequest, ::Google::Longrunning::Operation
            # Replace all existing [Access Levels]
            # [google.identity.accesscontextmanager.v1.AccessLevel] in an [Access
            # Policy] [google.identity.accesscontextmanager.v1.AccessPolicy] with
            # the [Access Levels]
            # [google.identity.accesscontextmanager.v1.AccessLevel] provided. This
            # is done atomically. The longrunning operation from this RPC will have a
            # successful status once all replacements have propagated to long-lasting
            # storage. Replacements containing errors will result in an error response
            # for the first error encountered.  Replacement will be cancelled on error,
            # existing [Access Levels]
            # [google.identity.accesscontextmanager.v1.AccessLevel] will not be
            # affected. Operation.response field will contain
            # ReplaceAccessLevelsResponse. Removing [Access Levels]
            # [google.identity.accesscontextmanager.v1.AccessLevel] contained in existing
            # [Service Perimeters]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter] will result in
            # error.
            rpc :ReplaceAccessLevels, ::Google::Identity::AccessContextManager::V1::ReplaceAccessLevelsRequest, ::Google::Longrunning::Operation
            # List all [Service Perimeters]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter] for an
            # access policy.
            rpc :ListServicePerimeters, ::Google::Identity::AccessContextManager::V1::ListServicePerimetersRequest, ::Google::Identity::AccessContextManager::V1::ListServicePerimetersResponse
            # Get a [Service Perimeter]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter] by resource
            # name.
            rpc :GetServicePerimeter, ::Google::Identity::AccessContextManager::V1::GetServicePerimeterRequest, ::Google::Identity::AccessContextManager::V1::ServicePerimeter
            # Create a [Service Perimeter]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter]. The
            # longrunning operation from this RPC will have a successful status once the
            # [Service Perimeter]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter] has
            # propagated to long-lasting storage. [Service Perimeters]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter] containing
            # errors will result in an error response for the first error encountered.
            rpc :CreateServicePerimeter, ::Google::Identity::AccessContextManager::V1::CreateServicePerimeterRequest, ::Google::Longrunning::Operation
            # Update a [Service Perimeter]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter]. The
            # longrunning operation from this RPC will have a successful status once the
            # changes to the [Service Perimeter]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter] have
            # propagated to long-lasting storage. [Service Perimeter]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter] containing
            # errors will result in an error response for the first error encountered.
            rpc :UpdateServicePerimeter, ::Google::Identity::AccessContextManager::V1::UpdateServicePerimeterRequest, ::Google::Longrunning::Operation
            # Delete a [Service Perimeter]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter] by resource
            # name. The longrunning operation from this RPC will have a successful status
            # once the [Service Perimeter]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter] has been
            # removed from long-lasting storage.
            rpc :DeleteServicePerimeter, ::Google::Identity::AccessContextManager::V1::DeleteServicePerimeterRequest, ::Google::Longrunning::Operation
            # Replace all existing [Service Perimeters]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter] in an
            # [Access Policy] [google.identity.accesscontextmanager.v1.AccessPolicy]
            # with the [Service Perimeters]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter] provided.
            # This is done atomically. The longrunning operation from this
            # RPC will have a successful status once all replacements have propagated to
            # long-lasting storage. Replacements containing errors will result in an
            # error response for the first error encountered. Replacement will be
            # cancelled on error, existing [Service Perimeters]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter] will not be
            # affected. Operation.response field will contain
            # ReplaceServicePerimetersResponse.
            rpc :ReplaceServicePerimeters, ::Google::Identity::AccessContextManager::V1::ReplaceServicePerimetersRequest, ::Google::Longrunning::Operation
            # Commit the dry-run spec for all the [Service Perimeters]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter] in an
            # [Access Policy][google.identity.accesscontextmanager.v1.AccessPolicy].
            # A commit operation on a Service Perimeter involves copying its `spec` field
            # to that Service Perimeter's `status` field. Only [Service Perimeters]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter] with
            # `use_explicit_dry_run_spec` field set to true are affected by a commit
            # operation. The longrunning operation from this RPC will have a successful
            # status once the dry-run specs for all the [Service Perimeters]
            # [google.identity.accesscontextmanager.v1.ServicePerimeter] have been
            # committed. If a commit fails, it will cause the longrunning operation to
            # return an error response and the entire commit operation will be cancelled.
            # When successful, Operation.response field will contain
            # CommitServicePerimetersResponse. The `dry_run` and the `spec` fields will
            # be cleared after a successful commit operation.
            rpc :CommitServicePerimeters, ::Google::Identity::AccessContextManager::V1::CommitServicePerimetersRequest, ::Google::Longrunning::Operation
            # Lists all [GcpUserAccessBindings]
            # [google.identity.accesscontextmanager.v1.GcpUserAccessBinding] for a
            # Google Cloud organization.
            rpc :ListGcpUserAccessBindings, ::Google::Identity::AccessContextManager::V1::ListGcpUserAccessBindingsRequest, ::Google::Identity::AccessContextManager::V1::ListGcpUserAccessBindingsResponse
            # Gets the [GcpUserAccessBinding]
            # [google.identity.accesscontextmanager.v1.GcpUserAccessBinding] with
            # the given name.
            rpc :GetGcpUserAccessBinding, ::Google::Identity::AccessContextManager::V1::GetGcpUserAccessBindingRequest, ::Google::Identity::AccessContextManager::V1::GcpUserAccessBinding
            # Creates a [GcpUserAccessBinding]
            # [google.identity.accesscontextmanager.v1.GcpUserAccessBinding]. If the
            # client specifies a [name]
            # [google.identity.accesscontextmanager.v1.GcpUserAccessBinding.name],
            # the server will ignore it. Fails if a resource already exists with the same
            # [group_key]
            # [google.identity.accesscontextmanager.v1.GcpUserAccessBinding.group_key].
            # Completion of this long-running operation does not necessarily signify that
            # the new binding is deployed onto all affected users, which may take more
            # time.
            rpc :CreateGcpUserAccessBinding, ::Google::Identity::AccessContextManager::V1::CreateGcpUserAccessBindingRequest, ::Google::Longrunning::Operation
            # Updates a [GcpUserAccessBinding]
            # [google.identity.accesscontextmanager.v1.GcpUserAccessBinding].
            # Completion of this long-running operation does not necessarily signify that
            # the changed binding is deployed onto all affected users, which may take
            # more time.
            rpc :UpdateGcpUserAccessBinding, ::Google::Identity::AccessContextManager::V1::UpdateGcpUserAccessBindingRequest, ::Google::Longrunning::Operation
            # Deletes a [GcpUserAccessBinding]
            # [google.identity.accesscontextmanager.v1.GcpUserAccessBinding].
            # Completion of this long-running operation does not necessarily signify that
            # the binding deletion is deployed onto all affected users, which may take
            # more time.
            rpc :DeleteGcpUserAccessBinding, ::Google::Identity::AccessContextManager::V1::DeleteGcpUserAccessBindingRequest, ::Google::Longrunning::Operation
          end

          Stub = Service.rpc_stub_class
        end
      end
    end
  end
end
