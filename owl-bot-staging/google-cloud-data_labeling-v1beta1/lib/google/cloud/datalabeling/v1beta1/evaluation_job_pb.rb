# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/datalabeling/v1beta1/evaluation_job.proto

require 'google/protobuf'

require 'google/api/resource_pb'
require 'google/cloud/datalabeling/v1beta1/dataset_pb'
require 'google/cloud/datalabeling/v1beta1/evaluation_pb'
require 'google/cloud/datalabeling/v1beta1/human_annotation_config_pb'
require 'google/protobuf/timestamp_pb'
require 'google/rpc/status_pb'


descriptor_data = "\n6google/cloud/datalabeling/v1beta1/evaluation_job.proto\x12!google.cloud.datalabeling.v1beta1\x1a\x19google/api/resource.proto\x1a/google/cloud/datalabeling/v1beta1/dataset.proto\x1a\x32google/cloud/datalabeling/v1beta1/evaluation.proto\x1a?google/cloud/datalabeling/v1beta1/human_annotation_config.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17google/rpc/status.proto\"\xe2\x04\n\rEvaluationJob\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x45\n\x05state\x18\x03 \x01(\x0e\x32\x36.google.cloud.datalabeling.v1beta1.EvaluationJob.State\x12\x10\n\x08schedule\x18\x04 \x01(\t\x12\x15\n\rmodel_version\x18\x05 \x01(\t\x12U\n\x15\x65valuation_job_config\x18\x06 \x01(\x0b\x32\x36.google.cloud.datalabeling.v1beta1.EvaluationJobConfig\x12\x1b\n\x13\x61nnotation_spec_set\x18\x07 \x01(\t\x12\"\n\x1alabel_missing_ground_truth\x18\x08 \x01(\x08\x12<\n\x08\x61ttempts\x18\t \x03(\x0b\x32*.google.cloud.datalabeling.v1beta1.Attempt\x12/\n\x0b\x63reate_time\x18\n \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"S\n\x05State\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\r\n\tSCHEDULED\x10\x01\x12\x0b\n\x07RUNNING\x10\x02\x12\n\n\x06PAUSED\x10\x03\x12\x0b\n\x07STOPPED\x10\x04:b\xea\x41_\n)datalabeling.googleapis.com/EvaluationJob\x12\x32projects/{project}/evaluationJobs/{evaluation_job}\"\x8d\x07\n\x13\x45valuationJobConfig\x12\x63\n\x1bimage_classification_config\x18\x04 \x01(\x0b\x32<.google.cloud.datalabeling.v1beta1.ImageClassificationConfigH\x00\x12U\n\x14\x62ounding_poly_config\x18\x05 \x01(\x0b\x32\x35.google.cloud.datalabeling.v1beta1.BoundingPolyConfigH\x00\x12\x61\n\x1atext_classification_config\x18\x08 \x01(\x0b\x32;.google.cloud.datalabeling.v1beta1.TextClassificationConfigH\x00\x12\x44\n\x0cinput_config\x18\x01 \x01(\x0b\x32..google.cloud.datalabeling.v1beta1.InputConfig\x12N\n\x11\x65valuation_config\x18\x02 \x01(\x0b\x32\x33.google.cloud.datalabeling.v1beta1.EvaluationConfig\x12Y\n\x17human_annotation_config\x18\x03 \x01(\x0b\x32\x38.google.cloud.datalabeling.v1beta1.HumanAnnotationConfig\x12l\n\x14\x62igquery_import_keys\x18\t \x03(\x0b\x32N.google.cloud.datalabeling.v1beta1.EvaluationJobConfig.BigqueryImportKeysEntry\x12\x15\n\rexample_count\x18\n \x01(\x05\x12!\n\x19\x65xample_sample_percentage\x18\x0b \x01(\x01\x12`\n\x1b\x65valuation_job_alert_config\x18\r \x01(\x0b\x32;.google.cloud.datalabeling.v1beta1.EvaluationJobAlertConfig\x1a\x39\n\x17\x42igqueryImportKeysEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42!\n\x1fhuman_annotation_request_config\"X\n\x18\x45valuationJobAlertConfig\x12\r\n\x05\x65mail\x18\x01 \x01(\t\x12-\n%min_acceptable_mean_average_precision\x18\x02 \x01(\x01\"i\n\x07\x41ttempt\x12\x30\n\x0c\x61ttempt_time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x10partial_failures\x18\x02 \x03(\x0b\x32\x12.google.rpc.StatusB\xe3\x01\n%com.google.cloud.datalabeling.v1beta1P\x01ZIcloud.google.com/go/datalabeling/apiv1beta1/datalabelingpb;datalabelingpb\xaa\x02!Google.Cloud.DataLabeling.V1Beta1\xca\x02!Google\\Cloud\\DataLabeling\\V1beta1\xea\x02$Google::Cloud::DataLabeling::V1beta1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.protobuf.Timestamp", "google/protobuf/timestamp.proto"],
    ["google.cloud.datalabeling.v1beta1.ImageClassificationConfig", "google/cloud/datalabeling/v1beta1/human_annotation_config.proto"],
    ["google.cloud.datalabeling.v1beta1.InputConfig", "google/cloud/datalabeling/v1beta1/dataset.proto"],
    ["google.cloud.datalabeling.v1beta1.EvaluationConfig", "google/cloud/datalabeling/v1beta1/evaluation.proto"],
    ["google.rpc.Status", "google/rpc/status.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module DataLabeling
      module V1beta1
        EvaluationJob = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datalabeling.v1beta1.EvaluationJob").msgclass
        EvaluationJob::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datalabeling.v1beta1.EvaluationJob.State").enummodule
        EvaluationJobConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datalabeling.v1beta1.EvaluationJobConfig").msgclass
        EvaluationJobAlertConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datalabeling.v1beta1.EvaluationJobAlertConfig").msgclass
        Attempt = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datalabeling.v1beta1.Attempt").msgclass
      end
    end
  end
end
