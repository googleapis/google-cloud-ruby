# frozen_string_literal: true

# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!

require "google/cloud/orchestration/airflow/service/v1/environments_pb"

module Google
  module Cloud
    module Orchestration
      module Airflow
        module Service
          module V1
            module Environments
              module Rest
                ##
                # REST service stub for the Environments service.
                # Service stub contains baseline method implementations
                # including transcoding, making the REST call, and deserialing the response.
                #
                class ServiceStub
                  def initialize endpoint:, credentials:
                    # These require statements are intentionally placed here to initialize
                    # the REST modules only when it's required.
                    require "gapic/rest"

                    @client_stub = ::Gapic::Rest::ClientStub.new endpoint: endpoint, credentials: credentials,
                                                                 numeric_enums: true,
                                                                 raise_faraday_errors: false
                  end

                  ##
                  # Baseline implementation for the create_environment REST call
                  #
                  # @param request_pb [::Google::Cloud::Orchestration::Airflow::Service::V1::CreateEnvironmentRequest]
                  #   A request object representing the call parameters. Required.
                  # @param options [::Gapic::CallOptions]
                  #   Overrides the default settings for this call, e.g, timeout, retries etc. Optional.
                  #
                  # @yield [result, operation] Access the result along with the TransportOperation object
                  # @yieldparam result [::Google::Longrunning::Operation]
                  # @yieldparam operation [::Gapic::Rest::TransportOperation]
                  #
                  # @return [::Google::Longrunning::Operation]
                  #   A result object deserialized from the server's reply
                  def create_environment request_pb, options = nil
                    raise ::ArgumentError, "request must be provided" if request_pb.nil?

                    verb, uri, query_string_params, body = ServiceStub.transcode_create_environment_request request_pb
                    query_string_params = if query_string_params.any?
                                            query_string_params.to_h { |p| p.split("=", 2) }
                                          else
                                            {}
                                          end

                    response = @client_stub.make_http_request(
                      verb,
                      uri:     uri,
                      body:    body || "",
                      params:  query_string_params,
                      options: options
                    )
                    operation = ::Gapic::Rest::TransportOperation.new response
                    result = ::Google::Longrunning::Operation.decode_json response.body, ignore_unknown_fields: true

                    yield result, operation if block_given?
                    result
                  end

                  ##
                  # Baseline implementation for the get_environment REST call
                  #
                  # @param request_pb [::Google::Cloud::Orchestration::Airflow::Service::V1::GetEnvironmentRequest]
                  #   A request object representing the call parameters. Required.
                  # @param options [::Gapic::CallOptions]
                  #   Overrides the default settings for this call, e.g, timeout, retries etc. Optional.
                  #
                  # @yield [result, operation] Access the result along with the TransportOperation object
                  # @yieldparam result [::Google::Cloud::Orchestration::Airflow::Service::V1::Environment]
                  # @yieldparam operation [::Gapic::Rest::TransportOperation]
                  #
                  # @return [::Google::Cloud::Orchestration::Airflow::Service::V1::Environment]
                  #   A result object deserialized from the server's reply
                  def get_environment request_pb, options = nil
                    raise ::ArgumentError, "request must be provided" if request_pb.nil?

                    verb, uri, query_string_params, body = ServiceStub.transcode_get_environment_request request_pb
                    query_string_params = if query_string_params.any?
                                            query_string_params.to_h { |p| p.split("=", 2) }
                                          else
                                            {}
                                          end

                    response = @client_stub.make_http_request(
                      verb,
                      uri:     uri,
                      body:    body || "",
                      params:  query_string_params,
                      options: options
                    )
                    operation = ::Gapic::Rest::TransportOperation.new response
                    result = ::Google::Cloud::Orchestration::Airflow::Service::V1::Environment.decode_json response.body, ignore_unknown_fields: true

                    yield result, operation if block_given?
                    result
                  end

                  ##
                  # Baseline implementation for the list_environments REST call
                  #
                  # @param request_pb [::Google::Cloud::Orchestration::Airflow::Service::V1::ListEnvironmentsRequest]
                  #   A request object representing the call parameters. Required.
                  # @param options [::Gapic::CallOptions]
                  #   Overrides the default settings for this call, e.g, timeout, retries etc. Optional.
                  #
                  # @yield [result, operation] Access the result along with the TransportOperation object
                  # @yieldparam result [::Google::Cloud::Orchestration::Airflow::Service::V1::ListEnvironmentsResponse]
                  # @yieldparam operation [::Gapic::Rest::TransportOperation]
                  #
                  # @return [::Google::Cloud::Orchestration::Airflow::Service::V1::ListEnvironmentsResponse]
                  #   A result object deserialized from the server's reply
                  def list_environments request_pb, options = nil
                    raise ::ArgumentError, "request must be provided" if request_pb.nil?

                    verb, uri, query_string_params, body = ServiceStub.transcode_list_environments_request request_pb
                    query_string_params = if query_string_params.any?
                                            query_string_params.to_h { |p| p.split("=", 2) }
                                          else
                                            {}
                                          end

                    response = @client_stub.make_http_request(
                      verb,
                      uri:     uri,
                      body:    body || "",
                      params:  query_string_params,
                      options: options
                    )
                    operation = ::Gapic::Rest::TransportOperation.new response
                    result = ::Google::Cloud::Orchestration::Airflow::Service::V1::ListEnvironmentsResponse.decode_json response.body, ignore_unknown_fields: true

                    yield result, operation if block_given?
                    result
                  end

                  ##
                  # Baseline implementation for the update_environment REST call
                  #
                  # @param request_pb [::Google::Cloud::Orchestration::Airflow::Service::V1::UpdateEnvironmentRequest]
                  #   A request object representing the call parameters. Required.
                  # @param options [::Gapic::CallOptions]
                  #   Overrides the default settings for this call, e.g, timeout, retries etc. Optional.
                  #
                  # @yield [result, operation] Access the result along with the TransportOperation object
                  # @yieldparam result [::Google::Longrunning::Operation]
                  # @yieldparam operation [::Gapic::Rest::TransportOperation]
                  #
                  # @return [::Google::Longrunning::Operation]
                  #   A result object deserialized from the server's reply
                  def update_environment request_pb, options = nil
                    raise ::ArgumentError, "request must be provided" if request_pb.nil?

                    verb, uri, query_string_params, body = ServiceStub.transcode_update_environment_request request_pb
                    query_string_params = if query_string_params.any?
                                            query_string_params.to_h { |p| p.split("=", 2) }
                                          else
                                            {}
                                          end

                    response = @client_stub.make_http_request(
                      verb,
                      uri:     uri,
                      body:    body || "",
                      params:  query_string_params,
                      options: options
                    )
                    operation = ::Gapic::Rest::TransportOperation.new response
                    result = ::Google::Longrunning::Operation.decode_json response.body, ignore_unknown_fields: true

                    yield result, operation if block_given?
                    result
                  end

                  ##
                  # Baseline implementation for the delete_environment REST call
                  #
                  # @param request_pb [::Google::Cloud::Orchestration::Airflow::Service::V1::DeleteEnvironmentRequest]
                  #   A request object representing the call parameters. Required.
                  # @param options [::Gapic::CallOptions]
                  #   Overrides the default settings for this call, e.g, timeout, retries etc. Optional.
                  #
                  # @yield [result, operation] Access the result along with the TransportOperation object
                  # @yieldparam result [::Google::Longrunning::Operation]
                  # @yieldparam operation [::Gapic::Rest::TransportOperation]
                  #
                  # @return [::Google::Longrunning::Operation]
                  #   A result object deserialized from the server's reply
                  def delete_environment request_pb, options = nil
                    raise ::ArgumentError, "request must be provided" if request_pb.nil?

                    verb, uri, query_string_params, body = ServiceStub.transcode_delete_environment_request request_pb
                    query_string_params = if query_string_params.any?
                                            query_string_params.to_h { |p| p.split("=", 2) }
                                          else
                                            {}
                                          end

                    response = @client_stub.make_http_request(
                      verb,
                      uri:     uri,
                      body:    body || "",
                      params:  query_string_params,
                      options: options
                    )
                    operation = ::Gapic::Rest::TransportOperation.new response
                    result = ::Google::Longrunning::Operation.decode_json response.body, ignore_unknown_fields: true

                    yield result, operation if block_given?
                    result
                  end

                  ##
                  # Baseline implementation for the save_snapshot REST call
                  #
                  # @param request_pb [::Google::Cloud::Orchestration::Airflow::Service::V1::SaveSnapshotRequest]
                  #   A request object representing the call parameters. Required.
                  # @param options [::Gapic::CallOptions]
                  #   Overrides the default settings for this call, e.g, timeout, retries etc. Optional.
                  #
                  # @yield [result, operation] Access the result along with the TransportOperation object
                  # @yieldparam result [::Google::Longrunning::Operation]
                  # @yieldparam operation [::Gapic::Rest::TransportOperation]
                  #
                  # @return [::Google::Longrunning::Operation]
                  #   A result object deserialized from the server's reply
                  def save_snapshot request_pb, options = nil
                    raise ::ArgumentError, "request must be provided" if request_pb.nil?

                    verb, uri, query_string_params, body = ServiceStub.transcode_save_snapshot_request request_pb
                    query_string_params = if query_string_params.any?
                                            query_string_params.to_h { |p| p.split("=", 2) }
                                          else
                                            {}
                                          end

                    response = @client_stub.make_http_request(
                      verb,
                      uri:     uri,
                      body:    body || "",
                      params:  query_string_params,
                      options: options
                    )
                    operation = ::Gapic::Rest::TransportOperation.new response
                    result = ::Google::Longrunning::Operation.decode_json response.body, ignore_unknown_fields: true

                    yield result, operation if block_given?
                    result
                  end

                  ##
                  # Baseline implementation for the load_snapshot REST call
                  #
                  # @param request_pb [::Google::Cloud::Orchestration::Airflow::Service::V1::LoadSnapshotRequest]
                  #   A request object representing the call parameters. Required.
                  # @param options [::Gapic::CallOptions]
                  #   Overrides the default settings for this call, e.g, timeout, retries etc. Optional.
                  #
                  # @yield [result, operation] Access the result along with the TransportOperation object
                  # @yieldparam result [::Google::Longrunning::Operation]
                  # @yieldparam operation [::Gapic::Rest::TransportOperation]
                  #
                  # @return [::Google::Longrunning::Operation]
                  #   A result object deserialized from the server's reply
                  def load_snapshot request_pb, options = nil
                    raise ::ArgumentError, "request must be provided" if request_pb.nil?

                    verb, uri, query_string_params, body = ServiceStub.transcode_load_snapshot_request request_pb
                    query_string_params = if query_string_params.any?
                                            query_string_params.to_h { |p| p.split("=", 2) }
                                          else
                                            {}
                                          end

                    response = @client_stub.make_http_request(
                      verb,
                      uri:     uri,
                      body:    body || "",
                      params:  query_string_params,
                      options: options
                    )
                    operation = ::Gapic::Rest::TransportOperation.new response
                    result = ::Google::Longrunning::Operation.decode_json response.body, ignore_unknown_fields: true

                    yield result, operation if block_given?
                    result
                  end

                  ##
                  # @private
                  #
                  # GRPC transcoding helper method for the create_environment REST call
                  #
                  # @param request_pb [::Google::Cloud::Orchestration::Airflow::Service::V1::CreateEnvironmentRequest]
                  #   A request object representing the call parameters. Required.
                  # @return [Array(String, [String, nil], Hash{String => String})]
                  #   Uri, Body, Query string parameters
                  def self.transcode_create_environment_request request_pb
                    transcoder = Gapic::Rest::GrpcTranscoder.new
                                                            .with_bindings(
                                                              uri_method: :post,
                                                              uri_template: "/v1/{parent}/environments",
                                                              body: "environment",
                                                              matches: [
                                                                ["parent", %r{^projects/[^/]+/locations/[^/]+/?$}, false]
                                                              ]
                                                            )
                    transcoder.transcode request_pb
                  end

                  ##
                  # @private
                  #
                  # GRPC transcoding helper method for the get_environment REST call
                  #
                  # @param request_pb [::Google::Cloud::Orchestration::Airflow::Service::V1::GetEnvironmentRequest]
                  #   A request object representing the call parameters. Required.
                  # @return [Array(String, [String, nil], Hash{String => String})]
                  #   Uri, Body, Query string parameters
                  def self.transcode_get_environment_request request_pb
                    transcoder = Gapic::Rest::GrpcTranscoder.new
                                                            .with_bindings(
                                                              uri_method: :get,
                                                              uri_template: "/v1/{name}",
                                                              matches: [
                                                                ["name", %r{^projects/[^/]+/locations/[^/]+/environments/[^/]+/?$}, false]
                                                              ]
                                                            )
                    transcoder.transcode request_pb
                  end

                  ##
                  # @private
                  #
                  # GRPC transcoding helper method for the list_environments REST call
                  #
                  # @param request_pb [::Google::Cloud::Orchestration::Airflow::Service::V1::ListEnvironmentsRequest]
                  #   A request object representing the call parameters. Required.
                  # @return [Array(String, [String, nil], Hash{String => String})]
                  #   Uri, Body, Query string parameters
                  def self.transcode_list_environments_request request_pb
                    transcoder = Gapic::Rest::GrpcTranscoder.new
                                                            .with_bindings(
                                                              uri_method: :get,
                                                              uri_template: "/v1/{parent}/environments",
                                                              matches: [
                                                                ["parent", %r{^projects/[^/]+/locations/[^/]+/?$}, false]
                                                              ]
                                                            )
                    transcoder.transcode request_pb
                  end

                  ##
                  # @private
                  #
                  # GRPC transcoding helper method for the update_environment REST call
                  #
                  # @param request_pb [::Google::Cloud::Orchestration::Airflow::Service::V1::UpdateEnvironmentRequest]
                  #   A request object representing the call parameters. Required.
                  # @return [Array(String, [String, nil], Hash{String => String})]
                  #   Uri, Body, Query string parameters
                  def self.transcode_update_environment_request request_pb
                    transcoder = Gapic::Rest::GrpcTranscoder.new
                                                            .with_bindings(
                                                              uri_method: :patch,
                                                              uri_template: "/v1/{name}",
                                                              body: "environment",
                                                              matches: [
                                                                ["name", %r{^projects/[^/]+/locations/[^/]+/environments/[^/]+/?$}, false]
                                                              ]
                                                            )
                    transcoder.transcode request_pb
                  end

                  ##
                  # @private
                  #
                  # GRPC transcoding helper method for the delete_environment REST call
                  #
                  # @param request_pb [::Google::Cloud::Orchestration::Airflow::Service::V1::DeleteEnvironmentRequest]
                  #   A request object representing the call parameters. Required.
                  # @return [Array(String, [String, nil], Hash{String => String})]
                  #   Uri, Body, Query string parameters
                  def self.transcode_delete_environment_request request_pb
                    transcoder = Gapic::Rest::GrpcTranscoder.new
                                                            .with_bindings(
                                                              uri_method: :delete,
                                                              uri_template: "/v1/{name}",
                                                              matches: [
                                                                ["name", %r{^projects/[^/]+/locations/[^/]+/environments/[^/]+/?$}, false]
                                                              ]
                                                            )
                    transcoder.transcode request_pb
                  end

                  ##
                  # @private
                  #
                  # GRPC transcoding helper method for the save_snapshot REST call
                  #
                  # @param request_pb [::Google::Cloud::Orchestration::Airflow::Service::V1::SaveSnapshotRequest]
                  #   A request object representing the call parameters. Required.
                  # @return [Array(String, [String, nil], Hash{String => String})]
                  #   Uri, Body, Query string parameters
                  def self.transcode_save_snapshot_request request_pb
                    transcoder = Gapic::Rest::GrpcTranscoder.new
                                                            .with_bindings(
                                                              uri_method: :post,
                                                              uri_template: "/v1/{environment}:saveSnapshot",
                                                              body: "*",
                                                              matches: [
                                                                ["environment", %r{^projects/[^/]+/locations/[^/]+/environments/[^/]+/?$}, false]
                                                              ]
                                                            )
                    transcoder.transcode request_pb
                  end

                  ##
                  # @private
                  #
                  # GRPC transcoding helper method for the load_snapshot REST call
                  #
                  # @param request_pb [::Google::Cloud::Orchestration::Airflow::Service::V1::LoadSnapshotRequest]
                  #   A request object representing the call parameters. Required.
                  # @return [Array(String, [String, nil], Hash{String => String})]
                  #   Uri, Body, Query string parameters
                  def self.transcode_load_snapshot_request request_pb
                    transcoder = Gapic::Rest::GrpcTranscoder.new
                                                            .with_bindings(
                                                              uri_method: :post,
                                                              uri_template: "/v1/{environment}:loadSnapshot",
                                                              body: "*",
                                                              matches: [
                                                                ["environment", %r{^projects/[^/]+/locations/[^/]+/environments/[^/]+/?$}, false]
                                                              ]
                                                            )
                    transcoder.transcode request_pb
                  end
                end
              end
            end
          end
        end
      end
    end
  end
end
