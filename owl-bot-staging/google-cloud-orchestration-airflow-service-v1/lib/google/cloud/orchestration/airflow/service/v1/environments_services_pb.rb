# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/cloud/orchestration/airflow/service/v1/environments.proto for package 'google.cloud.orchestration.airflow.service.v1'
# Original file comments:
# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'google/cloud/orchestration/airflow/service/v1/environments_pb'

module Google
  module Cloud
    module Orchestration
      module Airflow
        module Service
          module V1
            module Environments
              # Managed Apache Airflow Environments.
              class Service

                include ::GRPC::GenericService

                self.marshal_class_method = :encode
                self.unmarshal_class_method = :decode
                self.service_name = 'google.cloud.orchestration.airflow.service.v1.Environments'

                # Create a new environment.
                rpc :CreateEnvironment, ::Google::Cloud::Orchestration::Airflow::Service::V1::CreateEnvironmentRequest, ::Google::Longrunning::Operation
                # Get an existing environment.
                rpc :GetEnvironment, ::Google::Cloud::Orchestration::Airflow::Service::V1::GetEnvironmentRequest, ::Google::Cloud::Orchestration::Airflow::Service::V1::Environment
                # List environments.
                rpc :ListEnvironments, ::Google::Cloud::Orchestration::Airflow::Service::V1::ListEnvironmentsRequest, ::Google::Cloud::Orchestration::Airflow::Service::V1::ListEnvironmentsResponse
                # Update an environment.
                rpc :UpdateEnvironment, ::Google::Cloud::Orchestration::Airflow::Service::V1::UpdateEnvironmentRequest, ::Google::Longrunning::Operation
                # Delete an environment.
                rpc :DeleteEnvironment, ::Google::Cloud::Orchestration::Airflow::Service::V1::DeleteEnvironmentRequest, ::Google::Longrunning::Operation
              end

              Stub = Service.rpc_stub_class
            end
          end
        end
      end
    end
  end
end
