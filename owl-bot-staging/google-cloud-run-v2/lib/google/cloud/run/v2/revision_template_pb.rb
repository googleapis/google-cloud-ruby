# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/run/v2/revision_template.proto

require 'google/protobuf'

require 'google/api/resource_pb'
require 'google/cloud/run/v2/k8s.min_pb'
require 'google/cloud/run/v2/vendor_settings_pb'
require 'google/protobuf/duration_pb'


descriptor_data = "\n+google/cloud/run/v2/revision_template.proto\x12\x13google.cloud.run.v2\x1a\x19google/api/resource.proto\x1a!google/cloud/run/v2/k8s.min.proto\x1a)google/cloud/run/v2/vendor_settings.proto\x1a\x1egoogle/protobuf/duration.proto\"\x99\x06\n\x10RevisionTemplate\x12\x32\n\x08revision\x18\x01 \x01(\tB \xfa\x41\x1d\n\x1brun.googleapis.com/Revision\x12\x41\n\x06labels\x18\x02 \x03(\x0b\x32\x31.google.cloud.run.v2.RevisionTemplate.LabelsEntry\x12K\n\x0b\x61nnotations\x18\x03 \x03(\x0b\x32\x36.google.cloud.run.v2.RevisionTemplate.AnnotationsEntry\x12\x35\n\x07scaling\x18\x04 \x01(\x0b\x32$.google.cloud.run.v2.RevisionScaling\x12\x32\n\nvpc_access\x18\x06 \x01(\x0b\x32\x1e.google.cloud.run.v2.VpcAccess\x12*\n\x07timeout\x18\x08 \x01(\x0b\x32\x19.google.protobuf.Duration\x12\x17\n\x0fservice_account\x18\t \x01(\t\x12\x32\n\ncontainers\x18\n \x03(\x0b\x32\x1e.google.cloud.run.v2.Container\x12,\n\x07volumes\x18\x0b \x03(\x0b\x32\x1b.google.cloud.run.v2.Volume\x12H\n\x15\x65xecution_environment\x18\r \x01(\x0e\x32).google.cloud.run.v2.ExecutionEnvironment\x12>\n\x0e\x65ncryption_key\x18\x0e \x01(\tB&\xfa\x41#\n!cloudkms.googleapis.com/CryptoKey\x12(\n max_instance_request_concurrency\x18\x0f \x01(\x05\x12\x18\n\x10session_affinity\x18\x13 \x01(\x08\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x32\n\x10\x41nnotationsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42]\n\x17\x63om.google.cloud.run.v2B\x15RevisionTemplateProtoP\x01Z)cloud.google.com/go/run/apiv2/runpb;runpbb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.cloud.run.v2.RevisionScaling", "google/cloud/run/v2/vendor_settings.proto"],
    ["google.protobuf.Duration", "google/protobuf/duration.proto"],
    ["google.cloud.run.v2.Container", "google/cloud/run/v2/k8s.min.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module Run
      module V2
        RevisionTemplate = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.run.v2.RevisionTemplate").msgclass
      end
    end
  end
end
