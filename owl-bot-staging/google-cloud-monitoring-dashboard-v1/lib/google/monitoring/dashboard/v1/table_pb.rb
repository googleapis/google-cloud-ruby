# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/monitoring/dashboard/v1/table.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/monitoring/dashboard/v1/metrics_pb'
require 'google/monitoring/dashboard/v1/table_display_options_pb'
require 'google/protobuf/duration_pb'


descriptor_data = "\n*google/monitoring/dashboard/v1/table.proto\x12\x1egoogle.monitoring.dashboard.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a,google/monitoring/dashboard/v1/metrics.proto\x1a:google/monitoring/dashboard/v1/table_display_options.proto\x1a\x1egoogle/protobuf/duration.proto\"\xd2\x05\n\x0fTimeSeriesTable\x12T\n\tdata_sets\x18\x01 \x03(\x0b\x32<.google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSetB\x03\xe0\x41\x02\x12\x66\n\x14metric_visualization\x18\x02 \x01(\x0e\x32\x43.google.monitoring.dashboard.v1.TimeSeriesTable.MetricVisualizationB\x03\xe0\x41\x01\x12\\\n\x0f\x63olumn_settings\x18\x04 \x03(\x0b\x32>.google.monitoring.dashboard.v1.TimeSeriesTable.ColumnSettingsB\x03\xe0\x41\x01\x1a\x93\x02\n\x0cTableDataSet\x12O\n\x11time_series_query\x18\x01 \x01(\x0b\x32/.google.monitoring.dashboard.v1.TimeSeriesQueryB\x03\xe0\x41\x02\x12\x1b\n\x0etable_template\x18\x02 \x01(\tB\x03\xe0\x41\x01\x12<\n\x14min_alignment_period\x18\x03 \x01(\x0b\x32\x19.google.protobuf.DurationB\x03\xe0\x41\x01\x12W\n\x15table_display_options\x18\x04 \x01(\x0b\x32\x33.google.monitoring.dashboard.v1.TableDisplayOptionsB\x03\xe0\x41\x01\x1a;\n\x0e\x43olumnSettings\x12\x13\n\x06\x63olumn\x18\x01 \x01(\tB\x03\xe0\x41\x02\x12\x14\n\x07visible\x18\x02 \x01(\x08\x42\x03\xe0\x41\x02\"P\n\x13MetricVisualization\x12$\n METRIC_VISUALIZATION_UNSPECIFIED\x10\x00\x12\n\n\x06NUMBER\x10\x01\x12\x07\n\x03\x42\x41R\x10\x02\x42\xf3\x01\n\"com.google.monitoring.dashboard.v1B\nTableProtoP\x01ZFcloud.google.com/go/monitoring/dashboard/apiv1/dashboardpb;dashboardpb\xaa\x02$Google.Cloud.Monitoring.Dashboard.V1\xca\x02$Google\\Cloud\\Monitoring\\Dashboard\\V1\xea\x02(Google::Cloud::Monitoring::Dashboard::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.monitoring.dashboard.v1.TimeSeriesQuery", "google/monitoring/dashboard/v1/metrics.proto"],
    ["google.protobuf.Duration", "google/protobuf/duration.proto"],
    ["google.monitoring.dashboard.v1.TableDisplayOptions", "google/monitoring/dashboard/v1/table_display_options.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module Monitoring
      module Dashboard
        module V1
          TimeSeriesTable = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.monitoring.dashboard.v1.TimeSeriesTable").msgclass
          TimeSeriesTable::TableDataSet = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet").msgclass
          TimeSeriesTable::ColumnSettings = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.monitoring.dashboard.v1.TimeSeriesTable.ColumnSettings").msgclass
          TimeSeriesTable::MetricVisualization = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.monitoring.dashboard.v1.TimeSeriesTable.MetricVisualization").enummodule
        end
      end
    end
  end
end
