# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/batch/v1/job.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'
require 'google/cloud/batch/v1/task_pb'
require 'google/protobuf/duration_pb'
require 'google/protobuf/timestamp_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("google/cloud/batch/v1/job.proto", :syntax => :proto3) do
    add_message "google.cloud.batch.v1.Job" do
      optional :name, :string, 1
      optional :uid, :string, 2
      optional :priority, :int64, 3
      repeated :task_groups, :message, 4, "google.cloud.batch.v1.TaskGroup"
      optional :allocation_policy, :message, 7, "google.cloud.batch.v1.AllocationPolicy"
      map :labels, :string, :string, 8
      optional :status, :message, 9, "google.cloud.batch.v1.JobStatus"
      optional :create_time, :message, 11, "google.protobuf.Timestamp"
      optional :update_time, :message, 12, "google.protobuf.Timestamp"
      optional :logs_policy, :message, 13, "google.cloud.batch.v1.LogsPolicy"
      repeated :notifications, :message, 14, "google.cloud.batch.v1.JobNotification"
    end
    add_message "google.cloud.batch.v1.LogsPolicy" do
      optional :destination, :enum, 1, "google.cloud.batch.v1.LogsPolicy.Destination"
      optional :logs_path, :string, 2
    end
    add_enum "google.cloud.batch.v1.LogsPolicy.Destination" do
      value :DESTINATION_UNSPECIFIED, 0
      value :CLOUD_LOGGING, 1
      value :PATH, 2
    end
    add_message "google.cloud.batch.v1.JobStatus" do
      optional :state, :enum, 1, "google.cloud.batch.v1.JobStatus.State"
      repeated :status_events, :message, 2, "google.cloud.batch.v1.StatusEvent"
      map :task_groups, :string, :message, 4, "google.cloud.batch.v1.JobStatus.TaskGroupStatus"
      optional :run_duration, :message, 5, "google.protobuf.Duration"
    end
    add_message "google.cloud.batch.v1.JobStatus.InstanceStatus" do
      optional :machine_type, :string, 1
      optional :provisioning_model, :enum, 2, "google.cloud.batch.v1.AllocationPolicy.ProvisioningModel"
      optional :task_pack, :int64, 3
    end
    add_message "google.cloud.batch.v1.JobStatus.TaskGroupStatus" do
      map :counts, :string, :int64, 1
      repeated :instances, :message, 2, "google.cloud.batch.v1.JobStatus.InstanceStatus"
    end
    add_enum "google.cloud.batch.v1.JobStatus.State" do
      value :STATE_UNSPECIFIED, 0
      value :QUEUED, 1
      value :SCHEDULED, 2
      value :RUNNING, 3
      value :SUCCEEDED, 4
      value :FAILED, 5
      value :DELETION_IN_PROGRESS, 6
    end
    add_message "google.cloud.batch.v1.JobNotification" do
      optional :pubsub_topic, :string, 1
      optional :message, :message, 2, "google.cloud.batch.v1.JobNotification.Message"
    end
    add_message "google.cloud.batch.v1.JobNotification.Message" do
      optional :type, :enum, 1, "google.cloud.batch.v1.JobNotification.Type"
      optional :new_job_state, :enum, 2, "google.cloud.batch.v1.JobStatus.State"
      optional :new_task_state, :enum, 3, "google.cloud.batch.v1.TaskStatus.State"
    end
    add_enum "google.cloud.batch.v1.JobNotification.Type" do
      value :TYPE_UNSPECIFIED, 0
      value :JOB_STATE_CHANGED, 1
      value :TASK_STATE_CHANGED, 2
    end
    add_message "google.cloud.batch.v1.AllocationPolicy" do
      optional :location, :message, 1, "google.cloud.batch.v1.AllocationPolicy.LocationPolicy"
      repeated :instances, :message, 8, "google.cloud.batch.v1.AllocationPolicy.InstancePolicyOrTemplate"
      map :labels, :string, :string, 6
      optional :network, :message, 7, "google.cloud.batch.v1.AllocationPolicy.NetworkPolicy"
    end
    add_message "google.cloud.batch.v1.AllocationPolicy.LocationPolicy" do
      repeated :allowed_locations, :string, 1
    end
    add_message "google.cloud.batch.v1.AllocationPolicy.Disk" do
      optional :type, :string, 1
      optional :size_gb, :int64, 2
      optional :disk_interface, :string, 6
      oneof :data_source do
        optional :image, :string, 4
        optional :snapshot, :string, 5
      end
    end
    add_message "google.cloud.batch.v1.AllocationPolicy.AttachedDisk" do
      optional :device_name, :string, 3
      oneof :attached do
        optional :new_disk, :message, 1, "google.cloud.batch.v1.AllocationPolicy.Disk"
        optional :existing_disk, :string, 2
      end
    end
    add_message "google.cloud.batch.v1.AllocationPolicy.Accelerator" do
      optional :type, :string, 1
      optional :count, :int64, 2
      optional :install_gpu_drivers, :bool, 3
    end
    add_message "google.cloud.batch.v1.AllocationPolicy.InstancePolicy" do
      optional :machine_type, :string, 2
      optional :min_cpu_platform, :string, 3
      optional :provisioning_model, :enum, 4, "google.cloud.batch.v1.AllocationPolicy.ProvisioningModel"
      repeated :accelerators, :message, 5, "google.cloud.batch.v1.AllocationPolicy.Accelerator"
      repeated :disks, :message, 6, "google.cloud.batch.v1.AllocationPolicy.AttachedDisk"
    end
    add_message "google.cloud.batch.v1.AllocationPolicy.InstancePolicyOrTemplate" do
      oneof :policy_template do
        optional :policy, :message, 1, "google.cloud.batch.v1.AllocationPolicy.InstancePolicy"
        optional :instance_template, :string, 2
      end
    end
    add_message "google.cloud.batch.v1.AllocationPolicy.NetworkInterface" do
      optional :network, :string, 1
      optional :subnetwork, :string, 2
      optional :no_external_ip_address, :bool, 3
    end
    add_message "google.cloud.batch.v1.AllocationPolicy.NetworkPolicy" do
      repeated :network_interfaces, :message, 1, "google.cloud.batch.v1.AllocationPolicy.NetworkInterface"
    end
    add_enum "google.cloud.batch.v1.AllocationPolicy.ProvisioningModel" do
      value :PROVISIONING_MODEL_UNSPECIFIED, 0
      value :STANDARD, 1
      value :SPOT, 2
      value :PREEMPTIBLE, 3
    end
    add_message "google.cloud.batch.v1.TaskGroup" do
      optional :name, :string, 1
      optional :task_spec, :message, 3, "google.cloud.batch.v1.TaskSpec"
      optional :task_count, :int64, 4
      optional :parallelism, :int64, 5
      repeated :task_environments, :message, 9, "google.cloud.batch.v1.Environment"
      optional :task_count_per_node, :int64, 10
      optional :require_hosts_file, :bool, 11
      optional :permissive_ssh, :bool, 12
    end
  end
end

module Google
  module Cloud
    module Batch
      module V1
        Job = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.Job").msgclass
        LogsPolicy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.LogsPolicy").msgclass
        LogsPolicy::Destination = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.LogsPolicy.Destination").enummodule
        JobStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.JobStatus").msgclass
        JobStatus::InstanceStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.JobStatus.InstanceStatus").msgclass
        JobStatus::TaskGroupStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.JobStatus.TaskGroupStatus").msgclass
        JobStatus::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.JobStatus.State").enummodule
        JobNotification = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.JobNotification").msgclass
        JobNotification::Message = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.JobNotification.Message").msgclass
        JobNotification::Type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.JobNotification.Type").enummodule
        AllocationPolicy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.AllocationPolicy").msgclass
        AllocationPolicy::LocationPolicy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.AllocationPolicy.LocationPolicy").msgclass
        AllocationPolicy::Disk = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.AllocationPolicy.Disk").msgclass
        AllocationPolicy::AttachedDisk = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.AllocationPolicy.AttachedDisk").msgclass
        AllocationPolicy::Accelerator = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.AllocationPolicy.Accelerator").msgclass
        AllocationPolicy::InstancePolicy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.AllocationPolicy.InstancePolicy").msgclass
        AllocationPolicy::InstancePolicyOrTemplate = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.AllocationPolicy.InstancePolicyOrTemplate").msgclass
        AllocationPolicy::NetworkInterface = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.AllocationPolicy.NetworkInterface").msgclass
        AllocationPolicy::NetworkPolicy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.AllocationPolicy.NetworkPolicy").msgclass
        AllocationPolicy::ProvisioningModel = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.AllocationPolicy.ProvisioningModel").enummodule
        TaskGroup = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.batch.v1.TaskGroup").msgclass
      end
    end
  end
end
