{
  "client_library": {
    "name": "google-cloud-compute-v1",
    "version": "",
    "language": "RUBY",
    "apis": [
      {
        "id": "google.cloud.compute.v1",
        "version": "v1"
      }
    ]
  },
  "snippets": [
    {
      "region_tag": "compute_v1_generated_AcceleratorTypes_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the AcceleratorTypes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::AcceleratorTypes::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "accelerator_types/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::AcceleratorTypes::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListAcceleratorTypesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::AcceleratorTypeAggregatedList",
        "client": {
          "short_name": "AcceleratorTypes::Client",
          "full_name": "::Google::Cloud::Compute::V1::AcceleratorTypes::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.AcceleratorTypes.AggregatedList",
          "service": {
            "short_name": "AcceleratorTypes",
            "full_name": "google.cloud.compute.v1.AcceleratorTypes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_AcceleratorTypes_Get_sync",
      "title": "Snippet for the get call in the AcceleratorTypes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::AcceleratorTypes::Client#get. It may require modification in order to execute successfully.",
      "file": "accelerator_types/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::AcceleratorTypes::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetAcceleratorTypeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::AcceleratorType",
        "client": {
          "short_name": "AcceleratorTypes::Client",
          "full_name": "::Google::Cloud::Compute::V1::AcceleratorTypes::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.AcceleratorTypes.Get",
          "service": {
            "short_name": "AcceleratorTypes",
            "full_name": "google.cloud.compute.v1.AcceleratorTypes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_AcceleratorTypes_List_sync",
      "title": "Snippet for the list call in the AcceleratorTypes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::AcceleratorTypes::Client#list. It may require modification in order to execute successfully.",
      "file": "accelerator_types/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::AcceleratorTypes::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListAcceleratorTypesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::AcceleratorTypeList",
        "client": {
          "short_name": "AcceleratorTypes::Client",
          "full_name": "::Google::Cloud::Compute::V1::AcceleratorTypes::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.AcceleratorTypes.List",
          "service": {
            "short_name": "AcceleratorTypes",
            "full_name": "google.cloud.compute.v1.AcceleratorTypes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Addresses_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the Addresses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Addresses::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "addresses/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::Addresses::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListAddressesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::AddressAggregatedList",
        "client": {
          "short_name": "Addresses::Client",
          "full_name": "::Google::Cloud::Compute::V1::Addresses::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.Addresses.AggregatedList",
          "service": {
            "short_name": "Addresses",
            "full_name": "google.cloud.compute.v1.Addresses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Addresses_Delete_sync",
      "title": "Snippet for the delete call in the Addresses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Addresses::Client#delete. It may require modification in order to execute successfully.",
      "file": "addresses/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::Addresses::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteAddressRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Addresses::Client",
          "full_name": "::Google::Cloud::Compute::V1::Addresses::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.Addresses.Delete",
          "service": {
            "short_name": "Addresses",
            "full_name": "google.cloud.compute.v1.Addresses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Addresses_Get_sync",
      "title": "Snippet for the get call in the Addresses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Addresses::Client#get. It may require modification in order to execute successfully.",
      "file": "addresses/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Addresses::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetAddressRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Address",
        "client": {
          "short_name": "Addresses::Client",
          "full_name": "::Google::Cloud::Compute::V1::Addresses::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Addresses.Get",
          "service": {
            "short_name": "Addresses",
            "full_name": "google.cloud.compute.v1.Addresses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Addresses_Insert_sync",
      "title": "Snippet for the insert call in the Addresses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Addresses::Client#insert. It may require modification in order to execute successfully.",
      "file": "addresses/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::Addresses::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertAddressRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Addresses::Client",
          "full_name": "::Google::Cloud::Compute::V1::Addresses::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.Addresses.Insert",
          "service": {
            "short_name": "Addresses",
            "full_name": "google.cloud.compute.v1.Addresses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Addresses_List_sync",
      "title": "Snippet for the list call in the Addresses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Addresses::Client#list. It may require modification in order to execute successfully.",
      "file": "addresses/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Addresses::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListAddressesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::AddressList",
        "client": {
          "short_name": "Addresses::Client",
          "full_name": "::Google::Cloud::Compute::V1::Addresses::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Addresses.List",
          "service": {
            "short_name": "Addresses",
            "full_name": "google.cloud.compute.v1.Addresses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Addresses_SetLabels_sync",
      "title": "Snippet for the set_labels call in the Addresses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Addresses::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "addresses/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::Addresses::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsAddressRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Addresses::Client",
          "full_name": "::Google::Cloud::Compute::V1::Addresses::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.Addresses.SetLabels",
          "service": {
            "short_name": "Addresses",
            "full_name": "google.cloud.compute.v1.Addresses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Autoscalers_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the Autoscalers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Autoscalers::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "autoscalers/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::Autoscalers::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListAutoscalersRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::AutoscalerAggregatedList",
        "client": {
          "short_name": "Autoscalers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Autoscalers::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.Autoscalers.AggregatedList",
          "service": {
            "short_name": "Autoscalers",
            "full_name": "google.cloud.compute.v1.Autoscalers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Autoscalers_Delete_sync",
      "title": "Snippet for the delete call in the Autoscalers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Autoscalers::Client#delete. It may require modification in order to execute successfully.",
      "file": "autoscalers/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::Autoscalers::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteAutoscalerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Autoscalers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Autoscalers::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.Autoscalers.Delete",
          "service": {
            "short_name": "Autoscalers",
            "full_name": "google.cloud.compute.v1.Autoscalers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Autoscalers_Get_sync",
      "title": "Snippet for the get call in the Autoscalers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Autoscalers::Client#get. It may require modification in order to execute successfully.",
      "file": "autoscalers/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Autoscalers::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetAutoscalerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Autoscaler",
        "client": {
          "short_name": "Autoscalers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Autoscalers::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Autoscalers.Get",
          "service": {
            "short_name": "Autoscalers",
            "full_name": "google.cloud.compute.v1.Autoscalers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Autoscalers_Insert_sync",
      "title": "Snippet for the insert call in the Autoscalers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Autoscalers::Client#insert. It may require modification in order to execute successfully.",
      "file": "autoscalers/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::Autoscalers::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertAutoscalerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Autoscalers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Autoscalers::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.Autoscalers.Insert",
          "service": {
            "short_name": "Autoscalers",
            "full_name": "google.cloud.compute.v1.Autoscalers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Autoscalers_List_sync",
      "title": "Snippet for the list call in the Autoscalers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Autoscalers::Client#list. It may require modification in order to execute successfully.",
      "file": "autoscalers/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Autoscalers::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListAutoscalersRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::AutoscalerList",
        "client": {
          "short_name": "Autoscalers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Autoscalers::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Autoscalers.List",
          "service": {
            "short_name": "Autoscalers",
            "full_name": "google.cloud.compute.v1.Autoscalers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Autoscalers_Patch_sync",
      "title": "Snippet for the patch call in the Autoscalers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Autoscalers::Client#patch. It may require modification in order to execute successfully.",
      "file": "autoscalers/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::Autoscalers::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchAutoscalerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Autoscalers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Autoscalers::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.Autoscalers.Patch",
          "service": {
            "short_name": "Autoscalers",
            "full_name": "google.cloud.compute.v1.Autoscalers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Autoscalers_Update_sync",
      "title": "Snippet for the update call in the Autoscalers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Autoscalers::Client#update. It may require modification in order to execute successfully.",
      "file": "autoscalers/update.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update",
        "full_name": "::Google::Cloud::Compute::V1::Autoscalers::Client#update",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateAutoscalerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Autoscalers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Autoscalers::Client"
        },
        "method": {
          "short_name": "Update",
          "full_name": "google.cloud.compute.v1.Autoscalers.Update",
          "service": {
            "short_name": "Autoscalers",
            "full_name": "google.cloud.compute.v1.Autoscalers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendBuckets_AddSignedUrlKey_sync",
      "title": "Snippet for the add_signed_url_key call in the BackendBuckets service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendBuckets::Client#add_signed_url_key. It may require modification in order to execute successfully.",
      "file": "backend_buckets/add_signed_url_key.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_signed_url_key",
        "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client#add_signed_url_key",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddSignedUrlKeyBackendBucketRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "BackendBuckets::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client"
        },
        "method": {
          "short_name": "AddSignedUrlKey",
          "full_name": "google.cloud.compute.v1.BackendBuckets.AddSignedUrlKey",
          "service": {
            "short_name": "BackendBuckets",
            "full_name": "google.cloud.compute.v1.BackendBuckets"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendBuckets_Delete_sync",
      "title": "Snippet for the delete call in the BackendBuckets service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendBuckets::Client#delete. It may require modification in order to execute successfully.",
      "file": "backend_buckets/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteBackendBucketRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "BackendBuckets::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.BackendBuckets.Delete",
          "service": {
            "short_name": "BackendBuckets",
            "full_name": "google.cloud.compute.v1.BackendBuckets"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendBuckets_DeleteSignedUrlKey_sync",
      "title": "Snippet for the delete_signed_url_key call in the BackendBuckets service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendBuckets::Client#delete_signed_url_key. It may require modification in order to execute successfully.",
      "file": "backend_buckets/delete_signed_url_key.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete_signed_url_key",
        "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client#delete_signed_url_key",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteSignedUrlKeyBackendBucketRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "BackendBuckets::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client"
        },
        "method": {
          "short_name": "DeleteSignedUrlKey",
          "full_name": "google.cloud.compute.v1.BackendBuckets.DeleteSignedUrlKey",
          "service": {
            "short_name": "BackendBuckets",
            "full_name": "google.cloud.compute.v1.BackendBuckets"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendBuckets_Get_sync",
      "title": "Snippet for the get call in the BackendBuckets service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendBuckets::Client#get. It may require modification in order to execute successfully.",
      "file": "backend_buckets/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetBackendBucketRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::BackendBucket",
        "client": {
          "short_name": "BackendBuckets::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.BackendBuckets.Get",
          "service": {
            "short_name": "BackendBuckets",
            "full_name": "google.cloud.compute.v1.BackendBuckets"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendBuckets_Insert_sync",
      "title": "Snippet for the insert call in the BackendBuckets service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendBuckets::Client#insert. It may require modification in order to execute successfully.",
      "file": "backend_buckets/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertBackendBucketRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "BackendBuckets::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.BackendBuckets.Insert",
          "service": {
            "short_name": "BackendBuckets",
            "full_name": "google.cloud.compute.v1.BackendBuckets"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendBuckets_List_sync",
      "title": "Snippet for the list call in the BackendBuckets service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendBuckets::Client#list. It may require modification in order to execute successfully.",
      "file": "backend_buckets/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListBackendBucketsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::BackendBucketList",
        "client": {
          "short_name": "BackendBuckets::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.BackendBuckets.List",
          "service": {
            "short_name": "BackendBuckets",
            "full_name": "google.cloud.compute.v1.BackendBuckets"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendBuckets_Patch_sync",
      "title": "Snippet for the patch call in the BackendBuckets service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendBuckets::Client#patch. It may require modification in order to execute successfully.",
      "file": "backend_buckets/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchBackendBucketRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "BackendBuckets::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.BackendBuckets.Patch",
          "service": {
            "short_name": "BackendBuckets",
            "full_name": "google.cloud.compute.v1.BackendBuckets"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendBuckets_SetEdgeSecurityPolicy_sync",
      "title": "Snippet for the set_edge_security_policy call in the BackendBuckets service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendBuckets::Client#set_edge_security_policy. It may require modification in order to execute successfully.",
      "file": "backend_buckets/set_edge_security_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_edge_security_policy",
        "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client#set_edge_security_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetEdgeSecurityPolicyBackendBucketRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "BackendBuckets::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client"
        },
        "method": {
          "short_name": "SetEdgeSecurityPolicy",
          "full_name": "google.cloud.compute.v1.BackendBuckets.SetEdgeSecurityPolicy",
          "service": {
            "short_name": "BackendBuckets",
            "full_name": "google.cloud.compute.v1.BackendBuckets"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendBuckets_Update_sync",
      "title": "Snippet for the update call in the BackendBuckets service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendBuckets::Client#update. It may require modification in order to execute successfully.",
      "file": "backend_buckets/update.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update",
        "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client#update",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateBackendBucketRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "BackendBuckets::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendBuckets::Client"
        },
        "method": {
          "short_name": "Update",
          "full_name": "google.cloud.compute.v1.BackendBuckets.Update",
          "service": {
            "short_name": "BackendBuckets",
            "full_name": "google.cloud.compute.v1.BackendBuckets"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendServices_AddSignedUrlKey_sync",
      "title": "Snippet for the add_signed_url_key call in the BackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendServices::Client#add_signed_url_key. It may require modification in order to execute successfully.",
      "file": "backend_services/add_signed_url_key.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_signed_url_key",
        "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client#add_signed_url_key",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddSignedUrlKeyBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "BackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client"
        },
        "method": {
          "short_name": "AddSignedUrlKey",
          "full_name": "google.cloud.compute.v1.BackendServices.AddSignedUrlKey",
          "service": {
            "short_name": "BackendServices",
            "full_name": "google.cloud.compute.v1.BackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendServices_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the BackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendServices::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "backend_services/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListBackendServicesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::BackendServiceAggregatedList",
        "client": {
          "short_name": "BackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.BackendServices.AggregatedList",
          "service": {
            "short_name": "BackendServices",
            "full_name": "google.cloud.compute.v1.BackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendServices_Delete_sync",
      "title": "Snippet for the delete call in the BackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendServices::Client#delete. It may require modification in order to execute successfully.",
      "file": "backend_services/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "BackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.BackendServices.Delete",
          "service": {
            "short_name": "BackendServices",
            "full_name": "google.cloud.compute.v1.BackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendServices_DeleteSignedUrlKey_sync",
      "title": "Snippet for the delete_signed_url_key call in the BackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendServices::Client#delete_signed_url_key. It may require modification in order to execute successfully.",
      "file": "backend_services/delete_signed_url_key.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete_signed_url_key",
        "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client#delete_signed_url_key",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteSignedUrlKeyBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "BackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client"
        },
        "method": {
          "short_name": "DeleteSignedUrlKey",
          "full_name": "google.cloud.compute.v1.BackendServices.DeleteSignedUrlKey",
          "service": {
            "short_name": "BackendServices",
            "full_name": "google.cloud.compute.v1.BackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendServices_Get_sync",
      "title": "Snippet for the get call in the BackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendServices::Client#get. It may require modification in order to execute successfully.",
      "file": "backend_services/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::BackendService",
        "client": {
          "short_name": "BackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.BackendServices.Get",
          "service": {
            "short_name": "BackendServices",
            "full_name": "google.cloud.compute.v1.BackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendServices_GetHealth_sync",
      "title": "Snippet for the get_health call in the BackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendServices::Client#get_health. It may require modification in order to execute successfully.",
      "file": "backend_services/get_health.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_health",
        "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client#get_health",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetHealthBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::BackendServiceGroupHealth",
        "client": {
          "short_name": "BackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client"
        },
        "method": {
          "short_name": "GetHealth",
          "full_name": "google.cloud.compute.v1.BackendServices.GetHealth",
          "service": {
            "short_name": "BackendServices",
            "full_name": "google.cloud.compute.v1.BackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendServices_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the BackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendServices::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "backend_services/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "BackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.BackendServices.GetIamPolicy",
          "service": {
            "short_name": "BackendServices",
            "full_name": "google.cloud.compute.v1.BackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendServices_Insert_sync",
      "title": "Snippet for the insert call in the BackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendServices::Client#insert. It may require modification in order to execute successfully.",
      "file": "backend_services/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "BackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.BackendServices.Insert",
          "service": {
            "short_name": "BackendServices",
            "full_name": "google.cloud.compute.v1.BackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendServices_List_sync",
      "title": "Snippet for the list call in the BackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendServices::Client#list. It may require modification in order to execute successfully.",
      "file": "backend_services/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListBackendServicesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::BackendServiceList",
        "client": {
          "short_name": "BackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.BackendServices.List",
          "service": {
            "short_name": "BackendServices",
            "full_name": "google.cloud.compute.v1.BackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendServices_Patch_sync",
      "title": "Snippet for the patch call in the BackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendServices::Client#patch. It may require modification in order to execute successfully.",
      "file": "backend_services/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "BackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.BackendServices.Patch",
          "service": {
            "short_name": "BackendServices",
            "full_name": "google.cloud.compute.v1.BackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendServices_SetEdgeSecurityPolicy_sync",
      "title": "Snippet for the set_edge_security_policy call in the BackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendServices::Client#set_edge_security_policy. It may require modification in order to execute successfully.",
      "file": "backend_services/set_edge_security_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_edge_security_policy",
        "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client#set_edge_security_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetEdgeSecurityPolicyBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "BackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client"
        },
        "method": {
          "short_name": "SetEdgeSecurityPolicy",
          "full_name": "google.cloud.compute.v1.BackendServices.SetEdgeSecurityPolicy",
          "service": {
            "short_name": "BackendServices",
            "full_name": "google.cloud.compute.v1.BackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendServices_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the BackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendServices::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "backend_services/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "BackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.BackendServices.SetIamPolicy",
          "service": {
            "short_name": "BackendServices",
            "full_name": "google.cloud.compute.v1.BackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendServices_SetSecurityPolicy_sync",
      "title": "Snippet for the set_security_policy call in the BackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendServices::Client#set_security_policy. It may require modification in order to execute successfully.",
      "file": "backend_services/set_security_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_security_policy",
        "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client#set_security_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetSecurityPolicyBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "BackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client"
        },
        "method": {
          "short_name": "SetSecurityPolicy",
          "full_name": "google.cloud.compute.v1.BackendServices.SetSecurityPolicy",
          "service": {
            "short_name": "BackendServices",
            "full_name": "google.cloud.compute.v1.BackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_BackendServices_Update_sync",
      "title": "Snippet for the update call in the BackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::BackendServices::Client#update. It may require modification in order to execute successfully.",
      "file": "backend_services/update.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update",
        "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client#update",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "BackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::BackendServices::Client"
        },
        "method": {
          "short_name": "Update",
          "full_name": "google.cloud.compute.v1.BackendServices.Update",
          "service": {
            "short_name": "BackendServices",
            "full_name": "google.cloud.compute.v1.BackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_DiskTypes_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the DiskTypes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::DiskTypes::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "disk_types/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::DiskTypes::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListDiskTypesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::DiskTypeAggregatedList",
        "client": {
          "short_name": "DiskTypes::Client",
          "full_name": "::Google::Cloud::Compute::V1::DiskTypes::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.DiskTypes.AggregatedList",
          "service": {
            "short_name": "DiskTypes",
            "full_name": "google.cloud.compute.v1.DiskTypes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_DiskTypes_Get_sync",
      "title": "Snippet for the get call in the DiskTypes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::DiskTypes::Client#get. It may require modification in order to execute successfully.",
      "file": "disk_types/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::DiskTypes::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetDiskTypeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::DiskType",
        "client": {
          "short_name": "DiskTypes::Client",
          "full_name": "::Google::Cloud::Compute::V1::DiskTypes::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.DiskTypes.Get",
          "service": {
            "short_name": "DiskTypes",
            "full_name": "google.cloud.compute.v1.DiskTypes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_DiskTypes_List_sync",
      "title": "Snippet for the list call in the DiskTypes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::DiskTypes::Client#list. It may require modification in order to execute successfully.",
      "file": "disk_types/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::DiskTypes::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListDiskTypesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::DiskTypeList",
        "client": {
          "short_name": "DiskTypes::Client",
          "full_name": "::Google::Cloud::Compute::V1::DiskTypes::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.DiskTypes.List",
          "service": {
            "short_name": "DiskTypes",
            "full_name": "google.cloud.compute.v1.DiskTypes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Disks_AddResourcePolicies_sync",
      "title": "Snippet for the add_resource_policies call in the Disks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Disks::Client#add_resource_policies. It may require modification in order to execute successfully.",
      "file": "disks/add_resource_policies.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_resource_policies",
        "full_name": "::Google::Cloud::Compute::V1::Disks::Client#add_resource_policies",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddResourcePoliciesDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Disks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Disks::Client"
        },
        "method": {
          "short_name": "AddResourcePolicies",
          "full_name": "google.cloud.compute.v1.Disks.AddResourcePolicies",
          "service": {
            "short_name": "Disks",
            "full_name": "google.cloud.compute.v1.Disks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Disks_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the Disks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Disks::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "disks/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::Disks::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListDisksRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::DiskAggregatedList",
        "client": {
          "short_name": "Disks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Disks::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.Disks.AggregatedList",
          "service": {
            "short_name": "Disks",
            "full_name": "google.cloud.compute.v1.Disks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Disks_CreateSnapshot_sync",
      "title": "Snippet for the create_snapshot call in the Disks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Disks::Client#create_snapshot. It may require modification in order to execute successfully.",
      "file": "disks/create_snapshot.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "create_snapshot",
        "full_name": "::Google::Cloud::Compute::V1::Disks::Client#create_snapshot",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::CreateSnapshotDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Disks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Disks::Client"
        },
        "method": {
          "short_name": "CreateSnapshot",
          "full_name": "google.cloud.compute.v1.Disks.CreateSnapshot",
          "service": {
            "short_name": "Disks",
            "full_name": "google.cloud.compute.v1.Disks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Disks_Delete_sync",
      "title": "Snippet for the delete call in the Disks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Disks::Client#delete. It may require modification in order to execute successfully.",
      "file": "disks/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::Disks::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Disks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Disks::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.Disks.Delete",
          "service": {
            "short_name": "Disks",
            "full_name": "google.cloud.compute.v1.Disks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Disks_Get_sync",
      "title": "Snippet for the get call in the Disks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Disks::Client#get. It may require modification in order to execute successfully.",
      "file": "disks/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Disks::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Disk",
        "client": {
          "short_name": "Disks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Disks::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Disks.Get",
          "service": {
            "short_name": "Disks",
            "full_name": "google.cloud.compute.v1.Disks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Disks_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the Disks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Disks::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "disks/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::Disks::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "Disks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Disks::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.Disks.GetIamPolicy",
          "service": {
            "short_name": "Disks",
            "full_name": "google.cloud.compute.v1.Disks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Disks_Insert_sync",
      "title": "Snippet for the insert call in the Disks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Disks::Client#insert. It may require modification in order to execute successfully.",
      "file": "disks/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::Disks::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Disks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Disks::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.Disks.Insert",
          "service": {
            "short_name": "Disks",
            "full_name": "google.cloud.compute.v1.Disks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Disks_List_sync",
      "title": "Snippet for the list call in the Disks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Disks::Client#list. It may require modification in order to execute successfully.",
      "file": "disks/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Disks::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListDisksRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::DiskList",
        "client": {
          "short_name": "Disks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Disks::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Disks.List",
          "service": {
            "short_name": "Disks",
            "full_name": "google.cloud.compute.v1.Disks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Disks_RemoveResourcePolicies_sync",
      "title": "Snippet for the remove_resource_policies call in the Disks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Disks::Client#remove_resource_policies. It may require modification in order to execute successfully.",
      "file": "disks/remove_resource_policies.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "remove_resource_policies",
        "full_name": "::Google::Cloud::Compute::V1::Disks::Client#remove_resource_policies",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RemoveResourcePoliciesDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Disks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Disks::Client"
        },
        "method": {
          "short_name": "RemoveResourcePolicies",
          "full_name": "google.cloud.compute.v1.Disks.RemoveResourcePolicies",
          "service": {
            "short_name": "Disks",
            "full_name": "google.cloud.compute.v1.Disks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Disks_Resize_sync",
      "title": "Snippet for the resize call in the Disks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Disks::Client#resize. It may require modification in order to execute successfully.",
      "file": "disks/resize.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "resize",
        "full_name": "::Google::Cloud::Compute::V1::Disks::Client#resize",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ResizeDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Disks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Disks::Client"
        },
        "method": {
          "short_name": "Resize",
          "full_name": "google.cloud.compute.v1.Disks.Resize",
          "service": {
            "short_name": "Disks",
            "full_name": "google.cloud.compute.v1.Disks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Disks_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the Disks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Disks::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "disks/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::Disks::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "Disks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Disks::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.Disks.SetIamPolicy",
          "service": {
            "short_name": "Disks",
            "full_name": "google.cloud.compute.v1.Disks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Disks_SetLabels_sync",
      "title": "Snippet for the set_labels call in the Disks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Disks::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "disks/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::Disks::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Disks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Disks::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.Disks.SetLabels",
          "service": {
            "short_name": "Disks",
            "full_name": "google.cloud.compute.v1.Disks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Disks_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the Disks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Disks::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "disks/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::Disks::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "Disks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Disks::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.Disks.TestIamPermissions",
          "service": {
            "short_name": "Disks",
            "full_name": "google.cloud.compute.v1.Disks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ExternalVpnGateways_Delete_sync",
      "title": "Snippet for the delete call in the ExternalVpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ExternalVpnGateways::Client#delete. It may require modification in order to execute successfully.",
      "file": "external_vpn_gateways/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::ExternalVpnGateways::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteExternalVpnGatewayRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "ExternalVpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::ExternalVpnGateways::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.ExternalVpnGateways.Delete",
          "service": {
            "short_name": "ExternalVpnGateways",
            "full_name": "google.cloud.compute.v1.ExternalVpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ExternalVpnGateways_Get_sync",
      "title": "Snippet for the get call in the ExternalVpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ExternalVpnGateways::Client#get. It may require modification in order to execute successfully.",
      "file": "external_vpn_gateways/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::ExternalVpnGateways::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetExternalVpnGatewayRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ExternalVpnGateway",
        "client": {
          "short_name": "ExternalVpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::ExternalVpnGateways::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.ExternalVpnGateways.Get",
          "service": {
            "short_name": "ExternalVpnGateways",
            "full_name": "google.cloud.compute.v1.ExternalVpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ExternalVpnGateways_Insert_sync",
      "title": "Snippet for the insert call in the ExternalVpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ExternalVpnGateways::Client#insert. It may require modification in order to execute successfully.",
      "file": "external_vpn_gateways/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::ExternalVpnGateways::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertExternalVpnGatewayRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "ExternalVpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::ExternalVpnGateways::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.ExternalVpnGateways.Insert",
          "service": {
            "short_name": "ExternalVpnGateways",
            "full_name": "google.cloud.compute.v1.ExternalVpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ExternalVpnGateways_List_sync",
      "title": "Snippet for the list call in the ExternalVpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ExternalVpnGateways::Client#list. It may require modification in order to execute successfully.",
      "file": "external_vpn_gateways/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::ExternalVpnGateways::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListExternalVpnGatewaysRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ExternalVpnGatewayList",
        "client": {
          "short_name": "ExternalVpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::ExternalVpnGateways::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.ExternalVpnGateways.List",
          "service": {
            "short_name": "ExternalVpnGateways",
            "full_name": "google.cloud.compute.v1.ExternalVpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ExternalVpnGateways_SetLabels_sync",
      "title": "Snippet for the set_labels call in the ExternalVpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ExternalVpnGateways::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "external_vpn_gateways/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::ExternalVpnGateways::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsExternalVpnGatewayRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "ExternalVpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::ExternalVpnGateways::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.ExternalVpnGateways.SetLabels",
          "service": {
            "short_name": "ExternalVpnGateways",
            "full_name": "google.cloud.compute.v1.ExternalVpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ExternalVpnGateways_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the ExternalVpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ExternalVpnGateways::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "external_vpn_gateways/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::ExternalVpnGateways::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsExternalVpnGatewayRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "ExternalVpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::ExternalVpnGateways::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.ExternalVpnGateways.TestIamPermissions",
          "service": {
            "short_name": "ExternalVpnGateways",
            "full_name": "google.cloud.compute.v1.ExternalVpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_AddAssociation_sync",
      "title": "Snippet for the add_association call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#add_association. It may require modification in order to execute successfully.",
      "file": "firewall_policies/add_association.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_association",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#add_association",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddAssociationFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "AddAssociation",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.AddAssociation",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_AddRule_sync",
      "title": "Snippet for the add_rule call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#add_rule. It may require modification in order to execute successfully.",
      "file": "firewall_policies/add_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_rule",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#add_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddRuleFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "AddRule",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.AddRule",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_CloneRules_sync",
      "title": "Snippet for the clone_rules call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#clone_rules. It may require modification in order to execute successfully.",
      "file": "firewall_policies/clone_rules.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "clone_rules",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#clone_rules",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::CloneRulesFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "CloneRules",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.CloneRules",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_Delete_sync",
      "title": "Snippet for the delete call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#delete. It may require modification in order to execute successfully.",
      "file": "firewall_policies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.Delete",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_Get_sync",
      "title": "Snippet for the get call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#get. It may require modification in order to execute successfully.",
      "file": "firewall_policies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::FirewallPolicy",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.Get",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_GetAssociation_sync",
      "title": "Snippet for the get_association call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#get_association. It may require modification in order to execute successfully.",
      "file": "firewall_policies/get_association.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_association",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#get_association",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetAssociationFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::FirewallPolicyAssociation",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "GetAssociation",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.GetAssociation",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "firewall_policies/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.GetIamPolicy",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_GetRule_sync",
      "title": "Snippet for the get_rule call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#get_rule. It may require modification in order to execute successfully.",
      "file": "firewall_policies/get_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_rule",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#get_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRuleFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::FirewallPolicyRule",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "GetRule",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.GetRule",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_Insert_sync",
      "title": "Snippet for the insert call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#insert. It may require modification in order to execute successfully.",
      "file": "firewall_policies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.Insert",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_List_sync",
      "title": "Snippet for the list call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#list. It may require modification in order to execute successfully.",
      "file": "firewall_policies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListFirewallPoliciesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::FirewallPolicyList",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.List",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_ListAssociations_sync",
      "title": "Snippet for the list_associations call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#list_associations. It may require modification in order to execute successfully.",
      "file": "firewall_policies/list_associations.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_associations",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#list_associations",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListAssociationsFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::FirewallPoliciesListAssociationsResponse",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "ListAssociations",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.ListAssociations",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_Move_sync",
      "title": "Snippet for the move call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#move. It may require modification in order to execute successfully.",
      "file": "firewall_policies/move.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "move",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#move",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::MoveFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "Move",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.Move",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_Patch_sync",
      "title": "Snippet for the patch call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#patch. It may require modification in order to execute successfully.",
      "file": "firewall_policies/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.Patch",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_PatchRule_sync",
      "title": "Snippet for the patch_rule call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#patch_rule. It may require modification in order to execute successfully.",
      "file": "firewall_policies/patch_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch_rule",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#patch_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchRuleFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "PatchRule",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.PatchRule",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_RemoveAssociation_sync",
      "title": "Snippet for the remove_association call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#remove_association. It may require modification in order to execute successfully.",
      "file": "firewall_policies/remove_association.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "remove_association",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#remove_association",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RemoveAssociationFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "RemoveAssociation",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.RemoveAssociation",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_RemoveRule_sync",
      "title": "Snippet for the remove_rule call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#remove_rule. It may require modification in order to execute successfully.",
      "file": "firewall_policies/remove_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "remove_rule",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#remove_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RemoveRuleFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "RemoveRule",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.RemoveRule",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "firewall_policies/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.SetIamPolicy",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_FirewallPolicies_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the FirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::FirewallPolicies::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "firewall_policies/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "FirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::FirewallPolicies::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.FirewallPolicies.TestIamPermissions",
          "service": {
            "short_name": "FirewallPolicies",
            "full_name": "google.cloud.compute.v1.FirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Firewalls_Delete_sync",
      "title": "Snippet for the delete call in the Firewalls service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Firewalls::Client#delete. It may require modification in order to execute successfully.",
      "file": "firewalls/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::Firewalls::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteFirewallRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Firewalls::Client",
          "full_name": "::Google::Cloud::Compute::V1::Firewalls::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.Firewalls.Delete",
          "service": {
            "short_name": "Firewalls",
            "full_name": "google.cloud.compute.v1.Firewalls"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Firewalls_Get_sync",
      "title": "Snippet for the get call in the Firewalls service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Firewalls::Client#get. It may require modification in order to execute successfully.",
      "file": "firewalls/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Firewalls::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetFirewallRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Firewall",
        "client": {
          "short_name": "Firewalls::Client",
          "full_name": "::Google::Cloud::Compute::V1::Firewalls::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Firewalls.Get",
          "service": {
            "short_name": "Firewalls",
            "full_name": "google.cloud.compute.v1.Firewalls"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Firewalls_Insert_sync",
      "title": "Snippet for the insert call in the Firewalls service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Firewalls::Client#insert. It may require modification in order to execute successfully.",
      "file": "firewalls/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::Firewalls::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertFirewallRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Firewalls::Client",
          "full_name": "::Google::Cloud::Compute::V1::Firewalls::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.Firewalls.Insert",
          "service": {
            "short_name": "Firewalls",
            "full_name": "google.cloud.compute.v1.Firewalls"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Firewalls_List_sync",
      "title": "Snippet for the list call in the Firewalls service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Firewalls::Client#list. It may require modification in order to execute successfully.",
      "file": "firewalls/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Firewalls::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListFirewallsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::FirewallList",
        "client": {
          "short_name": "Firewalls::Client",
          "full_name": "::Google::Cloud::Compute::V1::Firewalls::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Firewalls.List",
          "service": {
            "short_name": "Firewalls",
            "full_name": "google.cloud.compute.v1.Firewalls"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Firewalls_Patch_sync",
      "title": "Snippet for the patch call in the Firewalls service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Firewalls::Client#patch. It may require modification in order to execute successfully.",
      "file": "firewalls/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::Firewalls::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchFirewallRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Firewalls::Client",
          "full_name": "::Google::Cloud::Compute::V1::Firewalls::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.Firewalls.Patch",
          "service": {
            "short_name": "Firewalls",
            "full_name": "google.cloud.compute.v1.Firewalls"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Firewalls_Update_sync",
      "title": "Snippet for the update call in the Firewalls service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Firewalls::Client#update. It may require modification in order to execute successfully.",
      "file": "firewalls/update.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update",
        "full_name": "::Google::Cloud::Compute::V1::Firewalls::Client#update",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateFirewallRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Firewalls::Client",
          "full_name": "::Google::Cloud::Compute::V1::Firewalls::Client"
        },
        "method": {
          "short_name": "Update",
          "full_name": "google.cloud.compute.v1.Firewalls.Update",
          "service": {
            "short_name": "Firewalls",
            "full_name": "google.cloud.compute.v1.Firewalls"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ForwardingRules_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the ForwardingRules service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ForwardingRules::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "forwarding_rules/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListForwardingRulesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ForwardingRuleAggregatedList",
        "client": {
          "short_name": "ForwardingRules::Client",
          "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.ForwardingRules.AggregatedList",
          "service": {
            "short_name": "ForwardingRules",
            "full_name": "google.cloud.compute.v1.ForwardingRules"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ForwardingRules_Delete_sync",
      "title": "Snippet for the delete call in the ForwardingRules service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ForwardingRules::Client#delete. It may require modification in order to execute successfully.",
      "file": "forwarding_rules/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteForwardingRuleRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "ForwardingRules::Client",
          "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.ForwardingRules.Delete",
          "service": {
            "short_name": "ForwardingRules",
            "full_name": "google.cloud.compute.v1.ForwardingRules"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ForwardingRules_Get_sync",
      "title": "Snippet for the get call in the ForwardingRules service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ForwardingRules::Client#get. It may require modification in order to execute successfully.",
      "file": "forwarding_rules/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetForwardingRuleRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ForwardingRule",
        "client": {
          "short_name": "ForwardingRules::Client",
          "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.ForwardingRules.Get",
          "service": {
            "short_name": "ForwardingRules",
            "full_name": "google.cloud.compute.v1.ForwardingRules"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ForwardingRules_Insert_sync",
      "title": "Snippet for the insert call in the ForwardingRules service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ForwardingRules::Client#insert. It may require modification in order to execute successfully.",
      "file": "forwarding_rules/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertForwardingRuleRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "ForwardingRules::Client",
          "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.ForwardingRules.Insert",
          "service": {
            "short_name": "ForwardingRules",
            "full_name": "google.cloud.compute.v1.ForwardingRules"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ForwardingRules_List_sync",
      "title": "Snippet for the list call in the ForwardingRules service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ForwardingRules::Client#list. It may require modification in order to execute successfully.",
      "file": "forwarding_rules/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListForwardingRulesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ForwardingRuleList",
        "client": {
          "short_name": "ForwardingRules::Client",
          "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.ForwardingRules.List",
          "service": {
            "short_name": "ForwardingRules",
            "full_name": "google.cloud.compute.v1.ForwardingRules"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ForwardingRules_Patch_sync",
      "title": "Snippet for the patch call in the ForwardingRules service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ForwardingRules::Client#patch. It may require modification in order to execute successfully.",
      "file": "forwarding_rules/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchForwardingRuleRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "ForwardingRules::Client",
          "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.ForwardingRules.Patch",
          "service": {
            "short_name": "ForwardingRules",
            "full_name": "google.cloud.compute.v1.ForwardingRules"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ForwardingRules_SetLabels_sync",
      "title": "Snippet for the set_labels call in the ForwardingRules service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ForwardingRules::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "forwarding_rules/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsForwardingRuleRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "ForwardingRules::Client",
          "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.ForwardingRules.SetLabels",
          "service": {
            "short_name": "ForwardingRules",
            "full_name": "google.cloud.compute.v1.ForwardingRules"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ForwardingRules_SetTarget_sync",
      "title": "Snippet for the set_target call in the ForwardingRules service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ForwardingRules::Client#set_target. It may require modification in order to execute successfully.",
      "file": "forwarding_rules/set_target.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_target",
        "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client#set_target",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetTargetForwardingRuleRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "ForwardingRules::Client",
          "full_name": "::Google::Cloud::Compute::V1::ForwardingRules::Client"
        },
        "method": {
          "short_name": "SetTarget",
          "full_name": "google.cloud.compute.v1.ForwardingRules.SetTarget",
          "service": {
            "short_name": "ForwardingRules",
            "full_name": "google.cloud.compute.v1.ForwardingRules"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalAddresses_Delete_sync",
      "title": "Snippet for the delete call in the GlobalAddresses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalAddresses::Client#delete. It may require modification in order to execute successfully.",
      "file": "global_addresses/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::GlobalAddresses::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteGlobalAddressRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalAddresses::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalAddresses::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.GlobalAddresses.Delete",
          "service": {
            "short_name": "GlobalAddresses",
            "full_name": "google.cloud.compute.v1.GlobalAddresses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalAddresses_Get_sync",
      "title": "Snippet for the get call in the GlobalAddresses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalAddresses::Client#get. It may require modification in order to execute successfully.",
      "file": "global_addresses/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::GlobalAddresses::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetGlobalAddressRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Address",
        "client": {
          "short_name": "GlobalAddresses::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalAddresses::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.GlobalAddresses.Get",
          "service": {
            "short_name": "GlobalAddresses",
            "full_name": "google.cloud.compute.v1.GlobalAddresses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalAddresses_Insert_sync",
      "title": "Snippet for the insert call in the GlobalAddresses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalAddresses::Client#insert. It may require modification in order to execute successfully.",
      "file": "global_addresses/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::GlobalAddresses::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertGlobalAddressRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalAddresses::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalAddresses::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.GlobalAddresses.Insert",
          "service": {
            "short_name": "GlobalAddresses",
            "full_name": "google.cloud.compute.v1.GlobalAddresses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalAddresses_List_sync",
      "title": "Snippet for the list call in the GlobalAddresses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalAddresses::Client#list. It may require modification in order to execute successfully.",
      "file": "global_addresses/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::GlobalAddresses::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListGlobalAddressesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::AddressList",
        "client": {
          "short_name": "GlobalAddresses::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalAddresses::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.GlobalAddresses.List",
          "service": {
            "short_name": "GlobalAddresses",
            "full_name": "google.cloud.compute.v1.GlobalAddresses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalAddresses_SetLabels_sync",
      "title": "Snippet for the set_labels call in the GlobalAddresses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalAddresses::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "global_addresses/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::GlobalAddresses::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsGlobalAddressRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalAddresses::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalAddresses::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.GlobalAddresses.SetLabels",
          "service": {
            "short_name": "GlobalAddresses",
            "full_name": "google.cloud.compute.v1.GlobalAddresses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalForwardingRules_Delete_sync",
      "title": "Snippet for the delete call in the GlobalForwardingRules service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalForwardingRules::Client#delete. It may require modification in order to execute successfully.",
      "file": "global_forwarding_rules/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::GlobalForwardingRules::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteGlobalForwardingRuleRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalForwardingRules::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalForwardingRules::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.GlobalForwardingRules.Delete",
          "service": {
            "short_name": "GlobalForwardingRules",
            "full_name": "google.cloud.compute.v1.GlobalForwardingRules"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalForwardingRules_Get_sync",
      "title": "Snippet for the get call in the GlobalForwardingRules service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalForwardingRules::Client#get. It may require modification in order to execute successfully.",
      "file": "global_forwarding_rules/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::GlobalForwardingRules::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetGlobalForwardingRuleRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ForwardingRule",
        "client": {
          "short_name": "GlobalForwardingRules::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalForwardingRules::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.GlobalForwardingRules.Get",
          "service": {
            "short_name": "GlobalForwardingRules",
            "full_name": "google.cloud.compute.v1.GlobalForwardingRules"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalForwardingRules_Insert_sync",
      "title": "Snippet for the insert call in the GlobalForwardingRules service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalForwardingRules::Client#insert. It may require modification in order to execute successfully.",
      "file": "global_forwarding_rules/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::GlobalForwardingRules::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertGlobalForwardingRuleRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalForwardingRules::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalForwardingRules::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.GlobalForwardingRules.Insert",
          "service": {
            "short_name": "GlobalForwardingRules",
            "full_name": "google.cloud.compute.v1.GlobalForwardingRules"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalForwardingRules_List_sync",
      "title": "Snippet for the list call in the GlobalForwardingRules service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalForwardingRules::Client#list. It may require modification in order to execute successfully.",
      "file": "global_forwarding_rules/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::GlobalForwardingRules::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListGlobalForwardingRulesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ForwardingRuleList",
        "client": {
          "short_name": "GlobalForwardingRules::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalForwardingRules::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.GlobalForwardingRules.List",
          "service": {
            "short_name": "GlobalForwardingRules",
            "full_name": "google.cloud.compute.v1.GlobalForwardingRules"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalForwardingRules_Patch_sync",
      "title": "Snippet for the patch call in the GlobalForwardingRules service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalForwardingRules::Client#patch. It may require modification in order to execute successfully.",
      "file": "global_forwarding_rules/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::GlobalForwardingRules::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchGlobalForwardingRuleRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalForwardingRules::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalForwardingRules::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.GlobalForwardingRules.Patch",
          "service": {
            "short_name": "GlobalForwardingRules",
            "full_name": "google.cloud.compute.v1.GlobalForwardingRules"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalForwardingRules_SetLabels_sync",
      "title": "Snippet for the set_labels call in the GlobalForwardingRules service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalForwardingRules::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "global_forwarding_rules/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::GlobalForwardingRules::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsGlobalForwardingRuleRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalForwardingRules::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalForwardingRules::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.GlobalForwardingRules.SetLabels",
          "service": {
            "short_name": "GlobalForwardingRules",
            "full_name": "google.cloud.compute.v1.GlobalForwardingRules"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalForwardingRules_SetTarget_sync",
      "title": "Snippet for the set_target call in the GlobalForwardingRules service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalForwardingRules::Client#set_target. It may require modification in order to execute successfully.",
      "file": "global_forwarding_rules/set_target.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_target",
        "full_name": "::Google::Cloud::Compute::V1::GlobalForwardingRules::Client#set_target",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetTargetGlobalForwardingRuleRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalForwardingRules::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalForwardingRules::Client"
        },
        "method": {
          "short_name": "SetTarget",
          "full_name": "google.cloud.compute.v1.GlobalForwardingRules.SetTarget",
          "service": {
            "short_name": "GlobalForwardingRules",
            "full_name": "google.cloud.compute.v1.GlobalForwardingRules"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalNetworkEndpointGroups_AttachNetworkEndpoints_sync",
      "title": "Snippet for the attach_network_endpoints call in the GlobalNetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client#attach_network_endpoints. It may require modification in order to execute successfully.",
      "file": "global_network_endpoint_groups/attach_network_endpoints.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "attach_network_endpoints",
        "full_name": "::Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client#attach_network_endpoints",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AttachNetworkEndpointsGlobalNetworkEndpointGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalNetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "AttachNetworkEndpoints",
          "full_name": "google.cloud.compute.v1.GlobalNetworkEndpointGroups.AttachNetworkEndpoints",
          "service": {
            "short_name": "GlobalNetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.GlobalNetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalNetworkEndpointGroups_Delete_sync",
      "title": "Snippet for the delete call in the GlobalNetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client#delete. It may require modification in order to execute successfully.",
      "file": "global_network_endpoint_groups/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteGlobalNetworkEndpointGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalNetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.GlobalNetworkEndpointGroups.Delete",
          "service": {
            "short_name": "GlobalNetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.GlobalNetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalNetworkEndpointGroups_DetachNetworkEndpoints_sync",
      "title": "Snippet for the detach_network_endpoints call in the GlobalNetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client#detach_network_endpoints. It may require modification in order to execute successfully.",
      "file": "global_network_endpoint_groups/detach_network_endpoints.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "detach_network_endpoints",
        "full_name": "::Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client#detach_network_endpoints",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DetachNetworkEndpointsGlobalNetworkEndpointGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalNetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "DetachNetworkEndpoints",
          "full_name": "google.cloud.compute.v1.GlobalNetworkEndpointGroups.DetachNetworkEndpoints",
          "service": {
            "short_name": "GlobalNetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.GlobalNetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalNetworkEndpointGroups_Get_sync",
      "title": "Snippet for the get call in the GlobalNetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client#get. It may require modification in order to execute successfully.",
      "file": "global_network_endpoint_groups/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetGlobalNetworkEndpointGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworkEndpointGroup",
        "client": {
          "short_name": "GlobalNetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.GlobalNetworkEndpointGroups.Get",
          "service": {
            "short_name": "GlobalNetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.GlobalNetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalNetworkEndpointGroups_Insert_sync",
      "title": "Snippet for the insert call in the GlobalNetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client#insert. It may require modification in order to execute successfully.",
      "file": "global_network_endpoint_groups/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertGlobalNetworkEndpointGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalNetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.GlobalNetworkEndpointGroups.Insert",
          "service": {
            "short_name": "GlobalNetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.GlobalNetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalNetworkEndpointGroups_List_sync",
      "title": "Snippet for the list call in the GlobalNetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client#list. It may require modification in order to execute successfully.",
      "file": "global_network_endpoint_groups/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListGlobalNetworkEndpointGroupsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworkEndpointGroupList",
        "client": {
          "short_name": "GlobalNetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.GlobalNetworkEndpointGroups.List",
          "service": {
            "short_name": "GlobalNetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.GlobalNetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalNetworkEndpointGroups_ListNetworkEndpoints_sync",
      "title": "Snippet for the list_network_endpoints call in the GlobalNetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client#list_network_endpoints. It may require modification in order to execute successfully.",
      "file": "global_network_endpoint_groups/list_network_endpoints.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_network_endpoints",
        "full_name": "::Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client#list_network_endpoints",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListNetworkEndpointsGlobalNetworkEndpointGroupsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworkEndpointGroupsListNetworkEndpoints",
        "client": {
          "short_name": "GlobalNetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalNetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "ListNetworkEndpoints",
          "full_name": "google.cloud.compute.v1.GlobalNetworkEndpointGroups.ListNetworkEndpoints",
          "service": {
            "short_name": "GlobalNetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.GlobalNetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalOperations_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the GlobalOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalOperations::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "global_operations/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::GlobalOperations::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListGlobalOperationsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::OperationAggregatedList",
        "client": {
          "short_name": "GlobalOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalOperations::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.GlobalOperations.AggregatedList",
          "service": {
            "short_name": "GlobalOperations",
            "full_name": "google.cloud.compute.v1.GlobalOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalOperations_Delete_sync",
      "title": "Snippet for the delete call in the GlobalOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalOperations::Client#delete. It may require modification in order to execute successfully.",
      "file": "global_operations/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::GlobalOperations::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteGlobalOperationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::DeleteGlobalOperationResponse",
        "client": {
          "short_name": "GlobalOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalOperations::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.GlobalOperations.Delete",
          "service": {
            "short_name": "GlobalOperations",
            "full_name": "google.cloud.compute.v1.GlobalOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalOperations_Get_sync",
      "title": "Snippet for the get call in the GlobalOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalOperations::Client#get. It may require modification in order to execute successfully.",
      "file": "global_operations/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::GlobalOperations::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetGlobalOperationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalOperations::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.GlobalOperations.Get",
          "service": {
            "short_name": "GlobalOperations",
            "full_name": "google.cloud.compute.v1.GlobalOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalOperations_List_sync",
      "title": "Snippet for the list call in the GlobalOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalOperations::Client#list. It may require modification in order to execute successfully.",
      "file": "global_operations/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::GlobalOperations::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListGlobalOperationsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::OperationList",
        "client": {
          "short_name": "GlobalOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalOperations::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.GlobalOperations.List",
          "service": {
            "short_name": "GlobalOperations",
            "full_name": "google.cloud.compute.v1.GlobalOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalOperations_Wait_sync",
      "title": "Snippet for the wait call in the GlobalOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalOperations::Client#wait. It may require modification in order to execute successfully.",
      "file": "global_operations/wait.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "wait",
        "full_name": "::Google::Cloud::Compute::V1::GlobalOperations::Client#wait",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::WaitGlobalOperationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalOperations::Client"
        },
        "method": {
          "short_name": "Wait",
          "full_name": "google.cloud.compute.v1.GlobalOperations.Wait",
          "service": {
            "short_name": "GlobalOperations",
            "full_name": "google.cloud.compute.v1.GlobalOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalOrganizationOperations_Delete_sync",
      "title": "Snippet for the delete call in the GlobalOrganizationOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalOrganizationOperations::Client#delete. It may require modification in order to execute successfully.",
      "file": "global_organization_operations/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::GlobalOrganizationOperations::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteGlobalOrganizationOperationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::DeleteGlobalOrganizationOperationResponse",
        "client": {
          "short_name": "GlobalOrganizationOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalOrganizationOperations::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.GlobalOrganizationOperations.Delete",
          "service": {
            "short_name": "GlobalOrganizationOperations",
            "full_name": "google.cloud.compute.v1.GlobalOrganizationOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalOrganizationOperations_Get_sync",
      "title": "Snippet for the get call in the GlobalOrganizationOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalOrganizationOperations::Client#get. It may require modification in order to execute successfully.",
      "file": "global_organization_operations/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::GlobalOrganizationOperations::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetGlobalOrganizationOperationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalOrganizationOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalOrganizationOperations::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.GlobalOrganizationOperations.Get",
          "service": {
            "short_name": "GlobalOrganizationOperations",
            "full_name": "google.cloud.compute.v1.GlobalOrganizationOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalOrganizationOperations_List_sync",
      "title": "Snippet for the list call in the GlobalOrganizationOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalOrganizationOperations::Client#list. It may require modification in order to execute successfully.",
      "file": "global_organization_operations/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::GlobalOrganizationOperations::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListGlobalOrganizationOperationsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::OperationList",
        "client": {
          "short_name": "GlobalOrganizationOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalOrganizationOperations::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.GlobalOrganizationOperations.List",
          "service": {
            "short_name": "GlobalOrganizationOperations",
            "full_name": "google.cloud.compute.v1.GlobalOrganizationOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalPublicDelegatedPrefixes_Delete_sync",
      "title": "Snippet for the delete call in the GlobalPublicDelegatedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalPublicDelegatedPrefixes::Client#delete. It may require modification in order to execute successfully.",
      "file": "global_public_delegated_prefixes/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::GlobalPublicDelegatedPrefixes::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteGlobalPublicDelegatedPrefixeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalPublicDelegatedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalPublicDelegatedPrefixes::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.GlobalPublicDelegatedPrefixes.Delete",
          "service": {
            "short_name": "GlobalPublicDelegatedPrefixes",
            "full_name": "google.cloud.compute.v1.GlobalPublicDelegatedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalPublicDelegatedPrefixes_Get_sync",
      "title": "Snippet for the get call in the GlobalPublicDelegatedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalPublicDelegatedPrefixes::Client#get. It may require modification in order to execute successfully.",
      "file": "global_public_delegated_prefixes/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::GlobalPublicDelegatedPrefixes::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetGlobalPublicDelegatedPrefixeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::PublicDelegatedPrefix",
        "client": {
          "short_name": "GlobalPublicDelegatedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalPublicDelegatedPrefixes::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.GlobalPublicDelegatedPrefixes.Get",
          "service": {
            "short_name": "GlobalPublicDelegatedPrefixes",
            "full_name": "google.cloud.compute.v1.GlobalPublicDelegatedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalPublicDelegatedPrefixes_Insert_sync",
      "title": "Snippet for the insert call in the GlobalPublicDelegatedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalPublicDelegatedPrefixes::Client#insert. It may require modification in order to execute successfully.",
      "file": "global_public_delegated_prefixes/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::GlobalPublicDelegatedPrefixes::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertGlobalPublicDelegatedPrefixeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalPublicDelegatedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalPublicDelegatedPrefixes::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.GlobalPublicDelegatedPrefixes.Insert",
          "service": {
            "short_name": "GlobalPublicDelegatedPrefixes",
            "full_name": "google.cloud.compute.v1.GlobalPublicDelegatedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalPublicDelegatedPrefixes_List_sync",
      "title": "Snippet for the list call in the GlobalPublicDelegatedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalPublicDelegatedPrefixes::Client#list. It may require modification in order to execute successfully.",
      "file": "global_public_delegated_prefixes/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::GlobalPublicDelegatedPrefixes::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListGlobalPublicDelegatedPrefixesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::PublicDelegatedPrefixList",
        "client": {
          "short_name": "GlobalPublicDelegatedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalPublicDelegatedPrefixes::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.GlobalPublicDelegatedPrefixes.List",
          "service": {
            "short_name": "GlobalPublicDelegatedPrefixes",
            "full_name": "google.cloud.compute.v1.GlobalPublicDelegatedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_GlobalPublicDelegatedPrefixes_Patch_sync",
      "title": "Snippet for the patch call in the GlobalPublicDelegatedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::GlobalPublicDelegatedPrefixes::Client#patch. It may require modification in order to execute successfully.",
      "file": "global_public_delegated_prefixes/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::GlobalPublicDelegatedPrefixes::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchGlobalPublicDelegatedPrefixeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "GlobalPublicDelegatedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::GlobalPublicDelegatedPrefixes::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.GlobalPublicDelegatedPrefixes.Patch",
          "service": {
            "short_name": "GlobalPublicDelegatedPrefixes",
            "full_name": "google.cloud.compute.v1.GlobalPublicDelegatedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_HealthChecks_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the HealthChecks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::HealthChecks::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "health_checks/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::HealthChecks::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListHealthChecksRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::HealthChecksAggregatedList",
        "client": {
          "short_name": "HealthChecks::Client",
          "full_name": "::Google::Cloud::Compute::V1::HealthChecks::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.HealthChecks.AggregatedList",
          "service": {
            "short_name": "HealthChecks",
            "full_name": "google.cloud.compute.v1.HealthChecks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_HealthChecks_Delete_sync",
      "title": "Snippet for the delete call in the HealthChecks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::HealthChecks::Client#delete. It may require modification in order to execute successfully.",
      "file": "health_checks/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::HealthChecks::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteHealthCheckRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "HealthChecks::Client",
          "full_name": "::Google::Cloud::Compute::V1::HealthChecks::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.HealthChecks.Delete",
          "service": {
            "short_name": "HealthChecks",
            "full_name": "google.cloud.compute.v1.HealthChecks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_HealthChecks_Get_sync",
      "title": "Snippet for the get call in the HealthChecks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::HealthChecks::Client#get. It may require modification in order to execute successfully.",
      "file": "health_checks/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::HealthChecks::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetHealthCheckRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::HealthCheck",
        "client": {
          "short_name": "HealthChecks::Client",
          "full_name": "::Google::Cloud::Compute::V1::HealthChecks::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.HealthChecks.Get",
          "service": {
            "short_name": "HealthChecks",
            "full_name": "google.cloud.compute.v1.HealthChecks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_HealthChecks_Insert_sync",
      "title": "Snippet for the insert call in the HealthChecks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::HealthChecks::Client#insert. It may require modification in order to execute successfully.",
      "file": "health_checks/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::HealthChecks::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertHealthCheckRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "HealthChecks::Client",
          "full_name": "::Google::Cloud::Compute::V1::HealthChecks::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.HealthChecks.Insert",
          "service": {
            "short_name": "HealthChecks",
            "full_name": "google.cloud.compute.v1.HealthChecks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_HealthChecks_List_sync",
      "title": "Snippet for the list call in the HealthChecks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::HealthChecks::Client#list. It may require modification in order to execute successfully.",
      "file": "health_checks/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::HealthChecks::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListHealthChecksRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::HealthCheckList",
        "client": {
          "short_name": "HealthChecks::Client",
          "full_name": "::Google::Cloud::Compute::V1::HealthChecks::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.HealthChecks.List",
          "service": {
            "short_name": "HealthChecks",
            "full_name": "google.cloud.compute.v1.HealthChecks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_HealthChecks_Patch_sync",
      "title": "Snippet for the patch call in the HealthChecks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::HealthChecks::Client#patch. It may require modification in order to execute successfully.",
      "file": "health_checks/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::HealthChecks::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchHealthCheckRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "HealthChecks::Client",
          "full_name": "::Google::Cloud::Compute::V1::HealthChecks::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.HealthChecks.Patch",
          "service": {
            "short_name": "HealthChecks",
            "full_name": "google.cloud.compute.v1.HealthChecks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_HealthChecks_Update_sync",
      "title": "Snippet for the update call in the HealthChecks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::HealthChecks::Client#update. It may require modification in order to execute successfully.",
      "file": "health_checks/update.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update",
        "full_name": "::Google::Cloud::Compute::V1::HealthChecks::Client#update",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateHealthCheckRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "HealthChecks::Client",
          "full_name": "::Google::Cloud::Compute::V1::HealthChecks::Client"
        },
        "method": {
          "short_name": "Update",
          "full_name": "google.cloud.compute.v1.HealthChecks.Update",
          "service": {
            "short_name": "HealthChecks",
            "full_name": "google.cloud.compute.v1.HealthChecks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ImageFamilyViews_Get_sync",
      "title": "Snippet for the get call in the ImageFamilyViews service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ImageFamilyViews::Client#get. It may require modification in order to execute successfully.",
      "file": "image_family_views/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::ImageFamilyViews::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetImageFamilyViewRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ImageFamilyView",
        "client": {
          "short_name": "ImageFamilyViews::Client",
          "full_name": "::Google::Cloud::Compute::V1::ImageFamilyViews::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.ImageFamilyViews.Get",
          "service": {
            "short_name": "ImageFamilyViews",
            "full_name": "google.cloud.compute.v1.ImageFamilyViews"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Images_Delete_sync",
      "title": "Snippet for the delete call in the Images service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Images::Client#delete. It may require modification in order to execute successfully.",
      "file": "images/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::Images::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Images::Client",
          "full_name": "::Google::Cloud::Compute::V1::Images::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.Images.Delete",
          "service": {
            "short_name": "Images",
            "full_name": "google.cloud.compute.v1.Images"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Images_Deprecate_sync",
      "title": "Snippet for the deprecate call in the Images service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Images::Client#deprecate. It may require modification in order to execute successfully.",
      "file": "images/deprecate.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "deprecate",
        "full_name": "::Google::Cloud::Compute::V1::Images::Client#deprecate",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeprecateImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Images::Client",
          "full_name": "::Google::Cloud::Compute::V1::Images::Client"
        },
        "method": {
          "short_name": "Deprecate",
          "full_name": "google.cloud.compute.v1.Images.Deprecate",
          "service": {
            "short_name": "Images",
            "full_name": "google.cloud.compute.v1.Images"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Images_Get_sync",
      "title": "Snippet for the get call in the Images service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Images::Client#get. It may require modification in order to execute successfully.",
      "file": "images/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Images::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Image",
        "client": {
          "short_name": "Images::Client",
          "full_name": "::Google::Cloud::Compute::V1::Images::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Images.Get",
          "service": {
            "short_name": "Images",
            "full_name": "google.cloud.compute.v1.Images"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Images_GetFromFamily_sync",
      "title": "Snippet for the get_from_family call in the Images service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Images::Client#get_from_family. It may require modification in order to execute successfully.",
      "file": "images/get_from_family.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_from_family",
        "full_name": "::Google::Cloud::Compute::V1::Images::Client#get_from_family",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetFromFamilyImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Image",
        "client": {
          "short_name": "Images::Client",
          "full_name": "::Google::Cloud::Compute::V1::Images::Client"
        },
        "method": {
          "short_name": "GetFromFamily",
          "full_name": "google.cloud.compute.v1.Images.GetFromFamily",
          "service": {
            "short_name": "Images",
            "full_name": "google.cloud.compute.v1.Images"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Images_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the Images service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Images::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "images/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::Images::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "Images::Client",
          "full_name": "::Google::Cloud::Compute::V1::Images::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.Images.GetIamPolicy",
          "service": {
            "short_name": "Images",
            "full_name": "google.cloud.compute.v1.Images"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Images_Insert_sync",
      "title": "Snippet for the insert call in the Images service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Images::Client#insert. It may require modification in order to execute successfully.",
      "file": "images/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::Images::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Images::Client",
          "full_name": "::Google::Cloud::Compute::V1::Images::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.Images.Insert",
          "service": {
            "short_name": "Images",
            "full_name": "google.cloud.compute.v1.Images"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Images_List_sync",
      "title": "Snippet for the list call in the Images service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Images::Client#list. It may require modification in order to execute successfully.",
      "file": "images/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Images::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListImagesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ImageList",
        "client": {
          "short_name": "Images::Client",
          "full_name": "::Google::Cloud::Compute::V1::Images::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Images.List",
          "service": {
            "short_name": "Images",
            "full_name": "google.cloud.compute.v1.Images"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Images_Patch_sync",
      "title": "Snippet for the patch call in the Images service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Images::Client#patch. It may require modification in order to execute successfully.",
      "file": "images/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::Images::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Images::Client",
          "full_name": "::Google::Cloud::Compute::V1::Images::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.Images.Patch",
          "service": {
            "short_name": "Images",
            "full_name": "google.cloud.compute.v1.Images"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Images_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the Images service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Images::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "images/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::Images::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "Images::Client",
          "full_name": "::Google::Cloud::Compute::V1::Images::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.Images.SetIamPolicy",
          "service": {
            "short_name": "Images",
            "full_name": "google.cloud.compute.v1.Images"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Images_SetLabels_sync",
      "title": "Snippet for the set_labels call in the Images service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Images::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "images/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::Images::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Images::Client",
          "full_name": "::Google::Cloud::Compute::V1::Images::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.Images.SetLabels",
          "service": {
            "short_name": "Images",
            "full_name": "google.cloud.compute.v1.Images"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Images_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the Images service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Images::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "images/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::Images::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "Images::Client",
          "full_name": "::Google::Cloud::Compute::V1::Images::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.Images.TestIamPermissions",
          "service": {
            "short_name": "Images",
            "full_name": "google.cloud.compute.v1.Images"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_AbandonInstances_sync",
      "title": "Snippet for the abandon_instances call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#abandon_instances. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/abandon_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "abandon_instances",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#abandon_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AbandonInstancesInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "AbandonInstances",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.AbandonInstances",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListInstanceGroupManagersRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceGroupManagerAggregatedList",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.AggregatedList",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_ApplyUpdatesToInstances_sync",
      "title": "Snippet for the apply_updates_to_instances call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#apply_updates_to_instances. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/apply_updates_to_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "apply_updates_to_instances",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#apply_updates_to_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ApplyUpdatesToInstancesInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "ApplyUpdatesToInstances",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.ApplyUpdatesToInstances",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_CreateInstances_sync",
      "title": "Snippet for the create_instances call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#create_instances. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/create_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "create_instances",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#create_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::CreateInstancesInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "CreateInstances",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.CreateInstances",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_Delete_sync",
      "title": "Snippet for the delete call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#delete. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.Delete",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_DeleteInstances_sync",
      "title": "Snippet for the delete_instances call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#delete_instances. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/delete_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete_instances",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#delete_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteInstancesInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "DeleteInstances",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.DeleteInstances",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_DeletePerInstanceConfigs_sync",
      "title": "Snippet for the delete_per_instance_configs call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#delete_per_instance_configs. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/delete_per_instance_configs.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete_per_instance_configs",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#delete_per_instance_configs",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeletePerInstanceConfigsInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "DeletePerInstanceConfigs",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.DeletePerInstanceConfigs",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_Get_sync",
      "title": "Snippet for the get call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#get. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceGroupManager",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.Get",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_Insert_sync",
      "title": "Snippet for the insert call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#insert. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.Insert",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_List_sync",
      "title": "Snippet for the list call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#list. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListInstanceGroupManagersRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceGroupManagerList",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.List",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_ListErrors_sync",
      "title": "Snippet for the list_errors call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#list_errors. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/list_errors.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_errors",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#list_errors",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListErrorsInstanceGroupManagersRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceGroupManagersListErrorsResponse",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "ListErrors",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.ListErrors",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_ListManagedInstances_sync",
      "title": "Snippet for the list_managed_instances call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#list_managed_instances. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/list_managed_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_managed_instances",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#list_managed_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListManagedInstancesInstanceGroupManagersRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceGroupManagersListManagedInstancesResponse",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "ListManagedInstances",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.ListManagedInstances",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_ListPerInstanceConfigs_sync",
      "title": "Snippet for the list_per_instance_configs call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#list_per_instance_configs. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/list_per_instance_configs.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_per_instance_configs",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#list_per_instance_configs",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListPerInstanceConfigsInstanceGroupManagersRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceGroupManagersListPerInstanceConfigsResp",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "ListPerInstanceConfigs",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.ListPerInstanceConfigs",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_Patch_sync",
      "title": "Snippet for the patch call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#patch. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.Patch",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_PatchPerInstanceConfigs_sync",
      "title": "Snippet for the patch_per_instance_configs call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#patch_per_instance_configs. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/patch_per_instance_configs.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch_per_instance_configs",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#patch_per_instance_configs",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchPerInstanceConfigsInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "PatchPerInstanceConfigs",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.PatchPerInstanceConfigs",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_RecreateInstances_sync",
      "title": "Snippet for the recreate_instances call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#recreate_instances. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/recreate_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "recreate_instances",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#recreate_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RecreateInstancesInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "RecreateInstances",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.RecreateInstances",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_Resize_sync",
      "title": "Snippet for the resize call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#resize. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/resize.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "resize",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#resize",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ResizeInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "Resize",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.Resize",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_SetInstanceTemplate_sync",
      "title": "Snippet for the set_instance_template call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#set_instance_template. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/set_instance_template.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_instance_template",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#set_instance_template",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetInstanceTemplateInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "SetInstanceTemplate",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.SetInstanceTemplate",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_SetTargetPools_sync",
      "title": "Snippet for the set_target_pools call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#set_target_pools. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/set_target_pools.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_target_pools",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#set_target_pools",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetTargetPoolsInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "SetTargetPools",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.SetTargetPools",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroupManagers_UpdatePerInstanceConfigs_sync",
      "title": "Snippet for the update_per_instance_configs call in the InstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroupManagers::Client#update_per_instance_configs. It may require modification in order to execute successfully.",
      "file": "instance_group_managers/update_per_instance_configs.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update_per_instance_configs",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client#update_per_instance_configs",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdatePerInstanceConfigsInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "UpdatePerInstanceConfigs",
          "full_name": "google.cloud.compute.v1.InstanceGroupManagers.UpdatePerInstanceConfigs",
          "service": {
            "short_name": "InstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.InstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroups_AddInstances_sync",
      "title": "Snippet for the add_instances call in the InstanceGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroups::Client#add_instances. It may require modification in order to execute successfully.",
      "file": "instance_groups/add_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_instances",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client#add_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddInstancesInstanceGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client"
        },
        "method": {
          "short_name": "AddInstances",
          "full_name": "google.cloud.compute.v1.InstanceGroups.AddInstances",
          "service": {
            "short_name": "InstanceGroups",
            "full_name": "google.cloud.compute.v1.InstanceGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroups_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the InstanceGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroups::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "instance_groups/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListInstanceGroupsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceGroupAggregatedList",
        "client": {
          "short_name": "InstanceGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.InstanceGroups.AggregatedList",
          "service": {
            "short_name": "InstanceGroups",
            "full_name": "google.cloud.compute.v1.InstanceGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroups_Delete_sync",
      "title": "Snippet for the delete call in the InstanceGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroups::Client#delete. It may require modification in order to execute successfully.",
      "file": "instance_groups/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteInstanceGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.InstanceGroups.Delete",
          "service": {
            "short_name": "InstanceGroups",
            "full_name": "google.cloud.compute.v1.InstanceGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroups_Get_sync",
      "title": "Snippet for the get call in the InstanceGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroups::Client#get. It may require modification in order to execute successfully.",
      "file": "instance_groups/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetInstanceGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceGroup",
        "client": {
          "short_name": "InstanceGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.InstanceGroups.Get",
          "service": {
            "short_name": "InstanceGroups",
            "full_name": "google.cloud.compute.v1.InstanceGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroups_Insert_sync",
      "title": "Snippet for the insert call in the InstanceGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroups::Client#insert. It may require modification in order to execute successfully.",
      "file": "instance_groups/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertInstanceGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.InstanceGroups.Insert",
          "service": {
            "short_name": "InstanceGroups",
            "full_name": "google.cloud.compute.v1.InstanceGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroups_List_sync",
      "title": "Snippet for the list call in the InstanceGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroups::Client#list. It may require modification in order to execute successfully.",
      "file": "instance_groups/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListInstanceGroupsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceGroupList",
        "client": {
          "short_name": "InstanceGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.InstanceGroups.List",
          "service": {
            "short_name": "InstanceGroups",
            "full_name": "google.cloud.compute.v1.InstanceGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroups_ListInstances_sync",
      "title": "Snippet for the list_instances call in the InstanceGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroups::Client#list_instances. It may require modification in order to execute successfully.",
      "file": "instance_groups/list_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_instances",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client#list_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListInstancesInstanceGroupsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceGroupsListInstances",
        "client": {
          "short_name": "InstanceGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client"
        },
        "method": {
          "short_name": "ListInstances",
          "full_name": "google.cloud.compute.v1.InstanceGroups.ListInstances",
          "service": {
            "short_name": "InstanceGroups",
            "full_name": "google.cloud.compute.v1.InstanceGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroups_RemoveInstances_sync",
      "title": "Snippet for the remove_instances call in the InstanceGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroups::Client#remove_instances. It may require modification in order to execute successfully.",
      "file": "instance_groups/remove_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "remove_instances",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client#remove_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RemoveInstancesInstanceGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client"
        },
        "method": {
          "short_name": "RemoveInstances",
          "full_name": "google.cloud.compute.v1.InstanceGroups.RemoveInstances",
          "service": {
            "short_name": "InstanceGroups",
            "full_name": "google.cloud.compute.v1.InstanceGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceGroups_SetNamedPorts_sync",
      "title": "Snippet for the set_named_ports call in the InstanceGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceGroups::Client#set_named_ports. It may require modification in order to execute successfully.",
      "file": "instance_groups/set_named_ports.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_named_ports",
        "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client#set_named_ports",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetNamedPortsInstanceGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceGroups::Client"
        },
        "method": {
          "short_name": "SetNamedPorts",
          "full_name": "google.cloud.compute.v1.InstanceGroups.SetNamedPorts",
          "service": {
            "short_name": "InstanceGroups",
            "full_name": "google.cloud.compute.v1.InstanceGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceTemplates_Delete_sync",
      "title": "Snippet for the delete call in the InstanceTemplates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceTemplates::Client#delete. It may require modification in order to execute successfully.",
      "file": "instance_templates/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::InstanceTemplates::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteInstanceTemplateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceTemplates::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceTemplates::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.InstanceTemplates.Delete",
          "service": {
            "short_name": "InstanceTemplates",
            "full_name": "google.cloud.compute.v1.InstanceTemplates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceTemplates_Get_sync",
      "title": "Snippet for the get call in the InstanceTemplates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceTemplates::Client#get. It may require modification in order to execute successfully.",
      "file": "instance_templates/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::InstanceTemplates::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetInstanceTemplateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceTemplate",
        "client": {
          "short_name": "InstanceTemplates::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceTemplates::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.InstanceTemplates.Get",
          "service": {
            "short_name": "InstanceTemplates",
            "full_name": "google.cloud.compute.v1.InstanceTemplates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceTemplates_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the InstanceTemplates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceTemplates::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "instance_templates/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::InstanceTemplates::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyInstanceTemplateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "InstanceTemplates::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceTemplates::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.InstanceTemplates.GetIamPolicy",
          "service": {
            "short_name": "InstanceTemplates",
            "full_name": "google.cloud.compute.v1.InstanceTemplates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceTemplates_Insert_sync",
      "title": "Snippet for the insert call in the InstanceTemplates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceTemplates::Client#insert. It may require modification in order to execute successfully.",
      "file": "instance_templates/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::InstanceTemplates::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertInstanceTemplateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InstanceTemplates::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceTemplates::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.InstanceTemplates.Insert",
          "service": {
            "short_name": "InstanceTemplates",
            "full_name": "google.cloud.compute.v1.InstanceTemplates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceTemplates_List_sync",
      "title": "Snippet for the list call in the InstanceTemplates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceTemplates::Client#list. It may require modification in order to execute successfully.",
      "file": "instance_templates/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::InstanceTemplates::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListInstanceTemplatesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceTemplateList",
        "client": {
          "short_name": "InstanceTemplates::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceTemplates::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.InstanceTemplates.List",
          "service": {
            "short_name": "InstanceTemplates",
            "full_name": "google.cloud.compute.v1.InstanceTemplates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceTemplates_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the InstanceTemplates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceTemplates::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "instance_templates/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::InstanceTemplates::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyInstanceTemplateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "InstanceTemplates::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceTemplates::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.InstanceTemplates.SetIamPolicy",
          "service": {
            "short_name": "InstanceTemplates",
            "full_name": "google.cloud.compute.v1.InstanceTemplates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InstanceTemplates_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the InstanceTemplates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InstanceTemplates::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "instance_templates/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::InstanceTemplates::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsInstanceTemplateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "InstanceTemplates::Client",
          "full_name": "::Google::Cloud::Compute::V1::InstanceTemplates::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.InstanceTemplates.TestIamPermissions",
          "service": {
            "short_name": "InstanceTemplates",
            "full_name": "google.cloud.compute.v1.InstanceTemplates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_AddAccessConfig_sync",
      "title": "Snippet for the add_access_config call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#add_access_config. It may require modification in order to execute successfully.",
      "file": "instances/add_access_config.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_access_config",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#add_access_config",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddAccessConfigInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "AddAccessConfig",
          "full_name": "google.cloud.compute.v1.Instances.AddAccessConfig",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_AddResourcePolicies_sync",
      "title": "Snippet for the add_resource_policies call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#add_resource_policies. It may require modification in order to execute successfully.",
      "file": "instances/add_resource_policies.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_resource_policies",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#add_resource_policies",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddResourcePoliciesInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "AddResourcePolicies",
          "full_name": "google.cloud.compute.v1.Instances.AddResourcePolicies",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "instances/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListInstancesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceAggregatedList",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.Instances.AggregatedList",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_AttachDisk_sync",
      "title": "Snippet for the attach_disk call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#attach_disk. It may require modification in order to execute successfully.",
      "file": "instances/attach_disk.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "attach_disk",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#attach_disk",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AttachDiskInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "AttachDisk",
          "full_name": "google.cloud.compute.v1.Instances.AttachDisk",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_BulkInsert_sync",
      "title": "Snippet for the bulk_insert call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#bulk_insert. It may require modification in order to execute successfully.",
      "file": "instances/bulk_insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "bulk_insert",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#bulk_insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::BulkInsertInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "BulkInsert",
          "full_name": "google.cloud.compute.v1.Instances.BulkInsert",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_Delete_sync",
      "title": "Snippet for the delete call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#delete. It may require modification in order to execute successfully.",
      "file": "instances/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.Instances.Delete",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_DeleteAccessConfig_sync",
      "title": "Snippet for the delete_access_config call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#delete_access_config. It may require modification in order to execute successfully.",
      "file": "instances/delete_access_config.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete_access_config",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#delete_access_config",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteAccessConfigInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "DeleteAccessConfig",
          "full_name": "google.cloud.compute.v1.Instances.DeleteAccessConfig",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_DetachDisk_sync",
      "title": "Snippet for the detach_disk call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#detach_disk. It may require modification in order to execute successfully.",
      "file": "instances/detach_disk.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "detach_disk",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#detach_disk",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DetachDiskInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "DetachDisk",
          "full_name": "google.cloud.compute.v1.Instances.DetachDisk",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_Get_sync",
      "title": "Snippet for the get call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#get. It may require modification in order to execute successfully.",
      "file": "instances/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Instance",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Instances.Get",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_GetEffectiveFirewalls_sync",
      "title": "Snippet for the get_effective_firewalls call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#get_effective_firewalls. It may require modification in order to execute successfully.",
      "file": "instances/get_effective_firewalls.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_effective_firewalls",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#get_effective_firewalls",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetEffectiveFirewallsInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstancesGetEffectiveFirewallsResponse",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "GetEffectiveFirewalls",
          "full_name": "google.cloud.compute.v1.Instances.GetEffectiveFirewalls",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_GetGuestAttributes_sync",
      "title": "Snippet for the get_guest_attributes call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#get_guest_attributes. It may require modification in order to execute successfully.",
      "file": "instances/get_guest_attributes.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_guest_attributes",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#get_guest_attributes",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetGuestAttributesInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::GuestAttributes",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "GetGuestAttributes",
          "full_name": "google.cloud.compute.v1.Instances.GetGuestAttributes",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "instances/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.Instances.GetIamPolicy",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_GetScreenshot_sync",
      "title": "Snippet for the get_screenshot call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#get_screenshot. It may require modification in order to execute successfully.",
      "file": "instances/get_screenshot.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_screenshot",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#get_screenshot",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetScreenshotInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Screenshot",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "GetScreenshot",
          "full_name": "google.cloud.compute.v1.Instances.GetScreenshot",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_GetSerialPortOutput_sync",
      "title": "Snippet for the get_serial_port_output call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#get_serial_port_output. It may require modification in order to execute successfully.",
      "file": "instances/get_serial_port_output.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_serial_port_output",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#get_serial_port_output",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetSerialPortOutputInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SerialPortOutput",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "GetSerialPortOutput",
          "full_name": "google.cloud.compute.v1.Instances.GetSerialPortOutput",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_GetShieldedInstanceIdentity_sync",
      "title": "Snippet for the get_shielded_instance_identity call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#get_shielded_instance_identity. It may require modification in order to execute successfully.",
      "file": "instances/get_shielded_instance_identity.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_shielded_instance_identity",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#get_shielded_instance_identity",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetShieldedInstanceIdentityInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ShieldedInstanceIdentity",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "GetShieldedInstanceIdentity",
          "full_name": "google.cloud.compute.v1.Instances.GetShieldedInstanceIdentity",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_Insert_sync",
      "title": "Snippet for the insert call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#insert. It may require modification in order to execute successfully.",
      "file": "instances/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.Instances.Insert",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_List_sync",
      "title": "Snippet for the list call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#list. It may require modification in order to execute successfully.",
      "file": "instances/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListInstancesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceList",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Instances.List",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_ListReferrers_sync",
      "title": "Snippet for the list_referrers call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#list_referrers. It may require modification in order to execute successfully.",
      "file": "instances/list_referrers.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_referrers",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#list_referrers",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListReferrersInstancesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceListReferrers",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "ListReferrers",
          "full_name": "google.cloud.compute.v1.Instances.ListReferrers",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_RemoveResourcePolicies_sync",
      "title": "Snippet for the remove_resource_policies call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#remove_resource_policies. It may require modification in order to execute successfully.",
      "file": "instances/remove_resource_policies.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "remove_resource_policies",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#remove_resource_policies",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RemoveResourcePoliciesInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "RemoveResourcePolicies",
          "full_name": "google.cloud.compute.v1.Instances.RemoveResourcePolicies",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_Reset_sync",
      "title": "Snippet for the reset call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#reset. It may require modification in order to execute successfully.",
      "file": "instances/reset.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "reset",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#reset",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ResetInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "Reset",
          "full_name": "google.cloud.compute.v1.Instances.Reset",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_Resume_sync",
      "title": "Snippet for the resume call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#resume. It may require modification in order to execute successfully.",
      "file": "instances/resume.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "resume",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#resume",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ResumeInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "Resume",
          "full_name": "google.cloud.compute.v1.Instances.Resume",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_SendDiagnosticInterrupt_sync",
      "title": "Snippet for the send_diagnostic_interrupt call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#send_diagnostic_interrupt. It may require modification in order to execute successfully.",
      "file": "instances/send_diagnostic_interrupt.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "send_diagnostic_interrupt",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#send_diagnostic_interrupt",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SendDiagnosticInterruptInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SendDiagnosticInterruptInstanceResponse",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "SendDiagnosticInterrupt",
          "full_name": "google.cloud.compute.v1.Instances.SendDiagnosticInterrupt",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_SetDeletionProtection_sync",
      "title": "Snippet for the set_deletion_protection call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#set_deletion_protection. It may require modification in order to execute successfully.",
      "file": "instances/set_deletion_protection.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_deletion_protection",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#set_deletion_protection",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetDeletionProtectionInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "SetDeletionProtection",
          "full_name": "google.cloud.compute.v1.Instances.SetDeletionProtection",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_SetDiskAutoDelete_sync",
      "title": "Snippet for the set_disk_auto_delete call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#set_disk_auto_delete. It may require modification in order to execute successfully.",
      "file": "instances/set_disk_auto_delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_disk_auto_delete",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#set_disk_auto_delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetDiskAutoDeleteInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "SetDiskAutoDelete",
          "full_name": "google.cloud.compute.v1.Instances.SetDiskAutoDelete",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "instances/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.Instances.SetIamPolicy",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_SetLabels_sync",
      "title": "Snippet for the set_labels call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "instances/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.Instances.SetLabels",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_SetMachineResources_sync",
      "title": "Snippet for the set_machine_resources call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#set_machine_resources. It may require modification in order to execute successfully.",
      "file": "instances/set_machine_resources.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_machine_resources",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#set_machine_resources",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetMachineResourcesInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "SetMachineResources",
          "full_name": "google.cloud.compute.v1.Instances.SetMachineResources",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_SetMachineType_sync",
      "title": "Snippet for the set_machine_type call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#set_machine_type. It may require modification in order to execute successfully.",
      "file": "instances/set_machine_type.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_machine_type",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#set_machine_type",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetMachineTypeInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "SetMachineType",
          "full_name": "google.cloud.compute.v1.Instances.SetMachineType",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_SetMetadata_sync",
      "title": "Snippet for the set_metadata call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#set_metadata. It may require modification in order to execute successfully.",
      "file": "instances/set_metadata.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_metadata",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#set_metadata",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetMetadataInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "SetMetadata",
          "full_name": "google.cloud.compute.v1.Instances.SetMetadata",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_SetMinCpuPlatform_sync",
      "title": "Snippet for the set_min_cpu_platform call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#set_min_cpu_platform. It may require modification in order to execute successfully.",
      "file": "instances/set_min_cpu_platform.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_min_cpu_platform",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#set_min_cpu_platform",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetMinCpuPlatformInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "SetMinCpuPlatform",
          "full_name": "google.cloud.compute.v1.Instances.SetMinCpuPlatform",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_SetScheduling_sync",
      "title": "Snippet for the set_scheduling call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#set_scheduling. It may require modification in order to execute successfully.",
      "file": "instances/set_scheduling.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_scheduling",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#set_scheduling",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetSchedulingInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "SetScheduling",
          "full_name": "google.cloud.compute.v1.Instances.SetScheduling",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_SetServiceAccount_sync",
      "title": "Snippet for the set_service_account call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#set_service_account. It may require modification in order to execute successfully.",
      "file": "instances/set_service_account.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_service_account",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#set_service_account",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetServiceAccountInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "SetServiceAccount",
          "full_name": "google.cloud.compute.v1.Instances.SetServiceAccount",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_SetShieldedInstanceIntegrityPolicy_sync",
      "title": "Snippet for the set_shielded_instance_integrity_policy call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#set_shielded_instance_integrity_policy. It may require modification in order to execute successfully.",
      "file": "instances/set_shielded_instance_integrity_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_shielded_instance_integrity_policy",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#set_shielded_instance_integrity_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetShieldedInstanceIntegrityPolicyInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "SetShieldedInstanceIntegrityPolicy",
          "full_name": "google.cloud.compute.v1.Instances.SetShieldedInstanceIntegrityPolicy",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_SetTags_sync",
      "title": "Snippet for the set_tags call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#set_tags. It may require modification in order to execute successfully.",
      "file": "instances/set_tags.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_tags",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#set_tags",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetTagsInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "SetTags",
          "full_name": "google.cloud.compute.v1.Instances.SetTags",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_SimulateMaintenanceEvent_sync",
      "title": "Snippet for the simulate_maintenance_event call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#simulate_maintenance_event. It may require modification in order to execute successfully.",
      "file": "instances/simulate_maintenance_event.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "simulate_maintenance_event",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#simulate_maintenance_event",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SimulateMaintenanceEventInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "SimulateMaintenanceEvent",
          "full_name": "google.cloud.compute.v1.Instances.SimulateMaintenanceEvent",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_Start_sync",
      "title": "Snippet for the start call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#start. It may require modification in order to execute successfully.",
      "file": "instances/start.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "start",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#start",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::StartInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "Start",
          "full_name": "google.cloud.compute.v1.Instances.Start",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_StartWithEncryptionKey_sync",
      "title": "Snippet for the start_with_encryption_key call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#start_with_encryption_key. It may require modification in order to execute successfully.",
      "file": "instances/start_with_encryption_key.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "start_with_encryption_key",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#start_with_encryption_key",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::StartWithEncryptionKeyInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "StartWithEncryptionKey",
          "full_name": "google.cloud.compute.v1.Instances.StartWithEncryptionKey",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_Stop_sync",
      "title": "Snippet for the stop call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#stop. It may require modification in order to execute successfully.",
      "file": "instances/stop.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "stop",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#stop",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::StopInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "Stop",
          "full_name": "google.cloud.compute.v1.Instances.Stop",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_Suspend_sync",
      "title": "Snippet for the suspend call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#suspend. It may require modification in order to execute successfully.",
      "file": "instances/suspend.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "suspend",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#suspend",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SuspendInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "Suspend",
          "full_name": "google.cloud.compute.v1.Instances.Suspend",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "instances/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.Instances.TestIamPermissions",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_Update_sync",
      "title": "Snippet for the update call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#update. It may require modification in order to execute successfully.",
      "file": "instances/update.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#update",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "Update",
          "full_name": "google.cloud.compute.v1.Instances.Update",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_UpdateAccessConfig_sync",
      "title": "Snippet for the update_access_config call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#update_access_config. It may require modification in order to execute successfully.",
      "file": "instances/update_access_config.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update_access_config",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#update_access_config",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateAccessConfigInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "UpdateAccessConfig",
          "full_name": "google.cloud.compute.v1.Instances.UpdateAccessConfig",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_UpdateDisplayDevice_sync",
      "title": "Snippet for the update_display_device call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#update_display_device. It may require modification in order to execute successfully.",
      "file": "instances/update_display_device.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update_display_device",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#update_display_device",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateDisplayDeviceInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "UpdateDisplayDevice",
          "full_name": "google.cloud.compute.v1.Instances.UpdateDisplayDevice",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_UpdateNetworkInterface_sync",
      "title": "Snippet for the update_network_interface call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#update_network_interface. It may require modification in order to execute successfully.",
      "file": "instances/update_network_interface.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update_network_interface",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#update_network_interface",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateNetworkInterfaceInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "UpdateNetworkInterface",
          "full_name": "google.cloud.compute.v1.Instances.UpdateNetworkInterface",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Instances_UpdateShieldedInstanceConfig_sync",
      "title": "Snippet for the update_shielded_instance_config call in the Instances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Instances::Client#update_shielded_instance_config. It may require modification in order to execute successfully.",
      "file": "instances/update_shielded_instance_config.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update_shielded_instance_config",
        "full_name": "::Google::Cloud::Compute::V1::Instances::Client#update_shielded_instance_config",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateShieldedInstanceConfigInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Instances::Client",
          "full_name": "::Google::Cloud::Compute::V1::Instances::Client"
        },
        "method": {
          "short_name": "UpdateShieldedInstanceConfig",
          "full_name": "google.cloud.compute.v1.Instances.UpdateShieldedInstanceConfig",
          "service": {
            "short_name": "Instances",
            "full_name": "google.cloud.compute.v1.Instances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InterconnectAttachments_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the InterconnectAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InterconnectAttachments::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "interconnect_attachments/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::InterconnectAttachments::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListInterconnectAttachmentsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InterconnectAttachmentAggregatedList",
        "client": {
          "short_name": "InterconnectAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::InterconnectAttachments::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.InterconnectAttachments.AggregatedList",
          "service": {
            "short_name": "InterconnectAttachments",
            "full_name": "google.cloud.compute.v1.InterconnectAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InterconnectAttachments_Delete_sync",
      "title": "Snippet for the delete call in the InterconnectAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InterconnectAttachments::Client#delete. It may require modification in order to execute successfully.",
      "file": "interconnect_attachments/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::InterconnectAttachments::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteInterconnectAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InterconnectAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::InterconnectAttachments::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.InterconnectAttachments.Delete",
          "service": {
            "short_name": "InterconnectAttachments",
            "full_name": "google.cloud.compute.v1.InterconnectAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InterconnectAttachments_Get_sync",
      "title": "Snippet for the get call in the InterconnectAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InterconnectAttachments::Client#get. It may require modification in order to execute successfully.",
      "file": "interconnect_attachments/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::InterconnectAttachments::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetInterconnectAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InterconnectAttachment",
        "client": {
          "short_name": "InterconnectAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::InterconnectAttachments::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.InterconnectAttachments.Get",
          "service": {
            "short_name": "InterconnectAttachments",
            "full_name": "google.cloud.compute.v1.InterconnectAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InterconnectAttachments_Insert_sync",
      "title": "Snippet for the insert call in the InterconnectAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InterconnectAttachments::Client#insert. It may require modification in order to execute successfully.",
      "file": "interconnect_attachments/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::InterconnectAttachments::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertInterconnectAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InterconnectAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::InterconnectAttachments::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.InterconnectAttachments.Insert",
          "service": {
            "short_name": "InterconnectAttachments",
            "full_name": "google.cloud.compute.v1.InterconnectAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InterconnectAttachments_List_sync",
      "title": "Snippet for the list call in the InterconnectAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InterconnectAttachments::Client#list. It may require modification in order to execute successfully.",
      "file": "interconnect_attachments/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::InterconnectAttachments::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListInterconnectAttachmentsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InterconnectAttachmentList",
        "client": {
          "short_name": "InterconnectAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::InterconnectAttachments::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.InterconnectAttachments.List",
          "service": {
            "short_name": "InterconnectAttachments",
            "full_name": "google.cloud.compute.v1.InterconnectAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InterconnectAttachments_Patch_sync",
      "title": "Snippet for the patch call in the InterconnectAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InterconnectAttachments::Client#patch. It may require modification in order to execute successfully.",
      "file": "interconnect_attachments/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::InterconnectAttachments::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchInterconnectAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InterconnectAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::InterconnectAttachments::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.InterconnectAttachments.Patch",
          "service": {
            "short_name": "InterconnectAttachments",
            "full_name": "google.cloud.compute.v1.InterconnectAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InterconnectAttachments_SetLabels_sync",
      "title": "Snippet for the set_labels call in the InterconnectAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InterconnectAttachments::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "interconnect_attachments/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::InterconnectAttachments::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsInterconnectAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "InterconnectAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::InterconnectAttachments::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.InterconnectAttachments.SetLabels",
          "service": {
            "short_name": "InterconnectAttachments",
            "full_name": "google.cloud.compute.v1.InterconnectAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InterconnectLocations_Get_sync",
      "title": "Snippet for the get call in the InterconnectLocations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InterconnectLocations::Client#get. It may require modification in order to execute successfully.",
      "file": "interconnect_locations/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::InterconnectLocations::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetInterconnectLocationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InterconnectLocation",
        "client": {
          "short_name": "InterconnectLocations::Client",
          "full_name": "::Google::Cloud::Compute::V1::InterconnectLocations::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.InterconnectLocations.Get",
          "service": {
            "short_name": "InterconnectLocations",
            "full_name": "google.cloud.compute.v1.InterconnectLocations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_InterconnectLocations_List_sync",
      "title": "Snippet for the list call in the InterconnectLocations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::InterconnectLocations::Client#list. It may require modification in order to execute successfully.",
      "file": "interconnect_locations/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::InterconnectLocations::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListInterconnectLocationsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InterconnectLocationList",
        "client": {
          "short_name": "InterconnectLocations::Client",
          "full_name": "::Google::Cloud::Compute::V1::InterconnectLocations::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.InterconnectLocations.List",
          "service": {
            "short_name": "InterconnectLocations",
            "full_name": "google.cloud.compute.v1.InterconnectLocations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Interconnects_Delete_sync",
      "title": "Snippet for the delete call in the Interconnects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Interconnects::Client#delete. It may require modification in order to execute successfully.",
      "file": "interconnects/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::Interconnects::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteInterconnectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Interconnects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Interconnects::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.Interconnects.Delete",
          "service": {
            "short_name": "Interconnects",
            "full_name": "google.cloud.compute.v1.Interconnects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Interconnects_Get_sync",
      "title": "Snippet for the get call in the Interconnects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Interconnects::Client#get. It may require modification in order to execute successfully.",
      "file": "interconnects/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Interconnects::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetInterconnectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Interconnect",
        "client": {
          "short_name": "Interconnects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Interconnects::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Interconnects.Get",
          "service": {
            "short_name": "Interconnects",
            "full_name": "google.cloud.compute.v1.Interconnects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Interconnects_GetDiagnostics_sync",
      "title": "Snippet for the get_diagnostics call in the Interconnects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Interconnects::Client#get_diagnostics. It may require modification in order to execute successfully.",
      "file": "interconnects/get_diagnostics.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_diagnostics",
        "full_name": "::Google::Cloud::Compute::V1::Interconnects::Client#get_diagnostics",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetDiagnosticsInterconnectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InterconnectsGetDiagnosticsResponse",
        "client": {
          "short_name": "Interconnects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Interconnects::Client"
        },
        "method": {
          "short_name": "GetDiagnostics",
          "full_name": "google.cloud.compute.v1.Interconnects.GetDiagnostics",
          "service": {
            "short_name": "Interconnects",
            "full_name": "google.cloud.compute.v1.Interconnects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Interconnects_Insert_sync",
      "title": "Snippet for the insert call in the Interconnects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Interconnects::Client#insert. It may require modification in order to execute successfully.",
      "file": "interconnects/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::Interconnects::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertInterconnectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Interconnects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Interconnects::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.Interconnects.Insert",
          "service": {
            "short_name": "Interconnects",
            "full_name": "google.cloud.compute.v1.Interconnects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Interconnects_List_sync",
      "title": "Snippet for the list call in the Interconnects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Interconnects::Client#list. It may require modification in order to execute successfully.",
      "file": "interconnects/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Interconnects::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListInterconnectsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InterconnectList",
        "client": {
          "short_name": "Interconnects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Interconnects::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Interconnects.List",
          "service": {
            "short_name": "Interconnects",
            "full_name": "google.cloud.compute.v1.Interconnects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Interconnects_Patch_sync",
      "title": "Snippet for the patch call in the Interconnects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Interconnects::Client#patch. It may require modification in order to execute successfully.",
      "file": "interconnects/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::Interconnects::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchInterconnectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Interconnects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Interconnects::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.Interconnects.Patch",
          "service": {
            "short_name": "Interconnects",
            "full_name": "google.cloud.compute.v1.Interconnects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Interconnects_SetLabels_sync",
      "title": "Snippet for the set_labels call in the Interconnects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Interconnects::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "interconnects/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::Interconnects::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsInterconnectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Interconnects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Interconnects::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.Interconnects.SetLabels",
          "service": {
            "short_name": "Interconnects",
            "full_name": "google.cloud.compute.v1.Interconnects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_LicenseCodes_Get_sync",
      "title": "Snippet for the get call in the LicenseCodes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::LicenseCodes::Client#get. It may require modification in order to execute successfully.",
      "file": "license_codes/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::LicenseCodes::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetLicenseCodeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::LicenseCode",
        "client": {
          "short_name": "LicenseCodes::Client",
          "full_name": "::Google::Cloud::Compute::V1::LicenseCodes::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.LicenseCodes.Get",
          "service": {
            "short_name": "LicenseCodes",
            "full_name": "google.cloud.compute.v1.LicenseCodes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_LicenseCodes_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the LicenseCodes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::LicenseCodes::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "license_codes/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::LicenseCodes::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsLicenseCodeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "LicenseCodes::Client",
          "full_name": "::Google::Cloud::Compute::V1::LicenseCodes::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.LicenseCodes.TestIamPermissions",
          "service": {
            "short_name": "LicenseCodes",
            "full_name": "google.cloud.compute.v1.LicenseCodes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Licenses_Delete_sync",
      "title": "Snippet for the delete call in the Licenses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Licenses::Client#delete. It may require modification in order to execute successfully.",
      "file": "licenses/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::Licenses::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteLicenseRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Licenses::Client",
          "full_name": "::Google::Cloud::Compute::V1::Licenses::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.Licenses.Delete",
          "service": {
            "short_name": "Licenses",
            "full_name": "google.cloud.compute.v1.Licenses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Licenses_Get_sync",
      "title": "Snippet for the get call in the Licenses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Licenses::Client#get. It may require modification in order to execute successfully.",
      "file": "licenses/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Licenses::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetLicenseRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::License",
        "client": {
          "short_name": "Licenses::Client",
          "full_name": "::Google::Cloud::Compute::V1::Licenses::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Licenses.Get",
          "service": {
            "short_name": "Licenses",
            "full_name": "google.cloud.compute.v1.Licenses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Licenses_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the Licenses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Licenses::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "licenses/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::Licenses::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyLicenseRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "Licenses::Client",
          "full_name": "::Google::Cloud::Compute::V1::Licenses::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.Licenses.GetIamPolicy",
          "service": {
            "short_name": "Licenses",
            "full_name": "google.cloud.compute.v1.Licenses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Licenses_Insert_sync",
      "title": "Snippet for the insert call in the Licenses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Licenses::Client#insert. It may require modification in order to execute successfully.",
      "file": "licenses/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::Licenses::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertLicenseRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Licenses::Client",
          "full_name": "::Google::Cloud::Compute::V1::Licenses::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.Licenses.Insert",
          "service": {
            "short_name": "Licenses",
            "full_name": "google.cloud.compute.v1.Licenses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Licenses_List_sync",
      "title": "Snippet for the list call in the Licenses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Licenses::Client#list. It may require modification in order to execute successfully.",
      "file": "licenses/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Licenses::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListLicensesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::LicensesListResponse",
        "client": {
          "short_name": "Licenses::Client",
          "full_name": "::Google::Cloud::Compute::V1::Licenses::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Licenses.List",
          "service": {
            "short_name": "Licenses",
            "full_name": "google.cloud.compute.v1.Licenses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Licenses_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the Licenses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Licenses::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "licenses/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::Licenses::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyLicenseRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "Licenses::Client",
          "full_name": "::Google::Cloud::Compute::V1::Licenses::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.Licenses.SetIamPolicy",
          "service": {
            "short_name": "Licenses",
            "full_name": "google.cloud.compute.v1.Licenses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Licenses_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the Licenses service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Licenses::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "licenses/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::Licenses::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsLicenseRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "Licenses::Client",
          "full_name": "::Google::Cloud::Compute::V1::Licenses::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.Licenses.TestIamPermissions",
          "service": {
            "short_name": "Licenses",
            "full_name": "google.cloud.compute.v1.Licenses"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_MachineImages_Delete_sync",
      "title": "Snippet for the delete call in the MachineImages service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::MachineImages::Client#delete. It may require modification in order to execute successfully.",
      "file": "machine_images/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::MachineImages::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteMachineImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "MachineImages::Client",
          "full_name": "::Google::Cloud::Compute::V1::MachineImages::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.MachineImages.Delete",
          "service": {
            "short_name": "MachineImages",
            "full_name": "google.cloud.compute.v1.MachineImages"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_MachineImages_Get_sync",
      "title": "Snippet for the get call in the MachineImages service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::MachineImages::Client#get. It may require modification in order to execute successfully.",
      "file": "machine_images/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::MachineImages::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetMachineImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::MachineImage",
        "client": {
          "short_name": "MachineImages::Client",
          "full_name": "::Google::Cloud::Compute::V1::MachineImages::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.MachineImages.Get",
          "service": {
            "short_name": "MachineImages",
            "full_name": "google.cloud.compute.v1.MachineImages"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_MachineImages_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the MachineImages service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::MachineImages::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "machine_images/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::MachineImages::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyMachineImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "MachineImages::Client",
          "full_name": "::Google::Cloud::Compute::V1::MachineImages::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.MachineImages.GetIamPolicy",
          "service": {
            "short_name": "MachineImages",
            "full_name": "google.cloud.compute.v1.MachineImages"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_MachineImages_Insert_sync",
      "title": "Snippet for the insert call in the MachineImages service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::MachineImages::Client#insert. It may require modification in order to execute successfully.",
      "file": "machine_images/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::MachineImages::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertMachineImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "MachineImages::Client",
          "full_name": "::Google::Cloud::Compute::V1::MachineImages::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.MachineImages.Insert",
          "service": {
            "short_name": "MachineImages",
            "full_name": "google.cloud.compute.v1.MachineImages"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_MachineImages_List_sync",
      "title": "Snippet for the list call in the MachineImages service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::MachineImages::Client#list. It may require modification in order to execute successfully.",
      "file": "machine_images/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::MachineImages::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListMachineImagesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::MachineImageList",
        "client": {
          "short_name": "MachineImages::Client",
          "full_name": "::Google::Cloud::Compute::V1::MachineImages::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.MachineImages.List",
          "service": {
            "short_name": "MachineImages",
            "full_name": "google.cloud.compute.v1.MachineImages"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_MachineImages_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the MachineImages service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::MachineImages::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "machine_images/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::MachineImages::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyMachineImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "MachineImages::Client",
          "full_name": "::Google::Cloud::Compute::V1::MachineImages::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.MachineImages.SetIamPolicy",
          "service": {
            "short_name": "MachineImages",
            "full_name": "google.cloud.compute.v1.MachineImages"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_MachineImages_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the MachineImages service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::MachineImages::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "machine_images/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::MachineImages::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsMachineImageRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "MachineImages::Client",
          "full_name": "::Google::Cloud::Compute::V1::MachineImages::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.MachineImages.TestIamPermissions",
          "service": {
            "short_name": "MachineImages",
            "full_name": "google.cloud.compute.v1.MachineImages"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_MachineTypes_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the MachineTypes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::MachineTypes::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "machine_types/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::MachineTypes::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListMachineTypesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::MachineTypeAggregatedList",
        "client": {
          "short_name": "MachineTypes::Client",
          "full_name": "::Google::Cloud::Compute::V1::MachineTypes::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.MachineTypes.AggregatedList",
          "service": {
            "short_name": "MachineTypes",
            "full_name": "google.cloud.compute.v1.MachineTypes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_MachineTypes_Get_sync",
      "title": "Snippet for the get call in the MachineTypes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::MachineTypes::Client#get. It may require modification in order to execute successfully.",
      "file": "machine_types/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::MachineTypes::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetMachineTypeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::MachineType",
        "client": {
          "short_name": "MachineTypes::Client",
          "full_name": "::Google::Cloud::Compute::V1::MachineTypes::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.MachineTypes.Get",
          "service": {
            "short_name": "MachineTypes",
            "full_name": "google.cloud.compute.v1.MachineTypes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_MachineTypes_List_sync",
      "title": "Snippet for the list call in the MachineTypes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::MachineTypes::Client#list. It may require modification in order to execute successfully.",
      "file": "machine_types/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::MachineTypes::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListMachineTypesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::MachineTypeList",
        "client": {
          "short_name": "MachineTypes::Client",
          "full_name": "::Google::Cloud::Compute::V1::MachineTypes::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.MachineTypes.List",
          "service": {
            "short_name": "MachineTypes",
            "full_name": "google.cloud.compute.v1.MachineTypes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkAttachments_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the NetworkAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkAttachments::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "network_attachments/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListNetworkAttachmentsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworkAttachmentAggregatedList",
        "client": {
          "short_name": "NetworkAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.NetworkAttachments.AggregatedList",
          "service": {
            "short_name": "NetworkAttachments",
            "full_name": "google.cloud.compute.v1.NetworkAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkAttachments_Delete_sync",
      "title": "Snippet for the delete call in the NetworkAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkAttachments::Client#delete. It may require modification in order to execute successfully.",
      "file": "network_attachments/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteNetworkAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.NetworkAttachments.Delete",
          "service": {
            "short_name": "NetworkAttachments",
            "full_name": "google.cloud.compute.v1.NetworkAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkAttachments_Get_sync",
      "title": "Snippet for the get call in the NetworkAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkAttachments::Client#get. It may require modification in order to execute successfully.",
      "file": "network_attachments/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetNetworkAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworkAttachment",
        "client": {
          "short_name": "NetworkAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.NetworkAttachments.Get",
          "service": {
            "short_name": "NetworkAttachments",
            "full_name": "google.cloud.compute.v1.NetworkAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkAttachments_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the NetworkAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkAttachments::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "network_attachments/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyNetworkAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "NetworkAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.NetworkAttachments.GetIamPolicy",
          "service": {
            "short_name": "NetworkAttachments",
            "full_name": "google.cloud.compute.v1.NetworkAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkAttachments_Insert_sync",
      "title": "Snippet for the insert call in the NetworkAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkAttachments::Client#insert. It may require modification in order to execute successfully.",
      "file": "network_attachments/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertNetworkAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.NetworkAttachments.Insert",
          "service": {
            "short_name": "NetworkAttachments",
            "full_name": "google.cloud.compute.v1.NetworkAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkAttachments_List_sync",
      "title": "Snippet for the list call in the NetworkAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkAttachments::Client#list. It may require modification in order to execute successfully.",
      "file": "network_attachments/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListNetworkAttachmentsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworkAttachmentList",
        "client": {
          "short_name": "NetworkAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.NetworkAttachments.List",
          "service": {
            "short_name": "NetworkAttachments",
            "full_name": "google.cloud.compute.v1.NetworkAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkAttachments_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the NetworkAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkAttachments::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "network_attachments/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyNetworkAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "NetworkAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.NetworkAttachments.SetIamPolicy",
          "service": {
            "short_name": "NetworkAttachments",
            "full_name": "google.cloud.compute.v1.NetworkAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkAttachments_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the NetworkAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkAttachments::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "network_attachments/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsNetworkAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "NetworkAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkAttachments::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.NetworkAttachments.TestIamPermissions",
          "service": {
            "short_name": "NetworkAttachments",
            "full_name": "google.cloud.compute.v1.NetworkAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkEdgeSecurityServices_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the NetworkEdgeSecurityServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkEdgeSecurityServices::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "network_edge_security_services/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::NetworkEdgeSecurityServices::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListNetworkEdgeSecurityServicesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworkEdgeSecurityServiceAggregatedList",
        "client": {
          "short_name": "NetworkEdgeSecurityServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkEdgeSecurityServices::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.NetworkEdgeSecurityServices.AggregatedList",
          "service": {
            "short_name": "NetworkEdgeSecurityServices",
            "full_name": "google.cloud.compute.v1.NetworkEdgeSecurityServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkEdgeSecurityServices_Delete_sync",
      "title": "Snippet for the delete call in the NetworkEdgeSecurityServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkEdgeSecurityServices::Client#delete. It may require modification in order to execute successfully.",
      "file": "network_edge_security_services/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::NetworkEdgeSecurityServices::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteNetworkEdgeSecurityServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkEdgeSecurityServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkEdgeSecurityServices::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.NetworkEdgeSecurityServices.Delete",
          "service": {
            "short_name": "NetworkEdgeSecurityServices",
            "full_name": "google.cloud.compute.v1.NetworkEdgeSecurityServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkEdgeSecurityServices_Get_sync",
      "title": "Snippet for the get call in the NetworkEdgeSecurityServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkEdgeSecurityServices::Client#get. It may require modification in order to execute successfully.",
      "file": "network_edge_security_services/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::NetworkEdgeSecurityServices::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetNetworkEdgeSecurityServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworkEdgeSecurityService",
        "client": {
          "short_name": "NetworkEdgeSecurityServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkEdgeSecurityServices::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.NetworkEdgeSecurityServices.Get",
          "service": {
            "short_name": "NetworkEdgeSecurityServices",
            "full_name": "google.cloud.compute.v1.NetworkEdgeSecurityServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkEdgeSecurityServices_Insert_sync",
      "title": "Snippet for the insert call in the NetworkEdgeSecurityServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkEdgeSecurityServices::Client#insert. It may require modification in order to execute successfully.",
      "file": "network_edge_security_services/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::NetworkEdgeSecurityServices::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertNetworkEdgeSecurityServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkEdgeSecurityServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkEdgeSecurityServices::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.NetworkEdgeSecurityServices.Insert",
          "service": {
            "short_name": "NetworkEdgeSecurityServices",
            "full_name": "google.cloud.compute.v1.NetworkEdgeSecurityServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkEdgeSecurityServices_Patch_sync",
      "title": "Snippet for the patch call in the NetworkEdgeSecurityServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkEdgeSecurityServices::Client#patch. It may require modification in order to execute successfully.",
      "file": "network_edge_security_services/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::NetworkEdgeSecurityServices::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchNetworkEdgeSecurityServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkEdgeSecurityServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkEdgeSecurityServices::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.NetworkEdgeSecurityServices.Patch",
          "service": {
            "short_name": "NetworkEdgeSecurityServices",
            "full_name": "google.cloud.compute.v1.NetworkEdgeSecurityServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkEndpointGroups_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the NetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "network_endpoint_groups/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListNetworkEndpointGroupsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworkEndpointGroupAggregatedList",
        "client": {
          "short_name": "NetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.NetworkEndpointGroups.AggregatedList",
          "service": {
            "short_name": "NetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.NetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkEndpointGroups_AttachNetworkEndpoints_sync",
      "title": "Snippet for the attach_network_endpoints call in the NetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#attach_network_endpoints. It may require modification in order to execute successfully.",
      "file": "network_endpoint_groups/attach_network_endpoints.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "attach_network_endpoints",
        "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#attach_network_endpoints",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AttachNetworkEndpointsNetworkEndpointGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "AttachNetworkEndpoints",
          "full_name": "google.cloud.compute.v1.NetworkEndpointGroups.AttachNetworkEndpoints",
          "service": {
            "short_name": "NetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.NetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkEndpointGroups_Delete_sync",
      "title": "Snippet for the delete call in the NetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#delete. It may require modification in order to execute successfully.",
      "file": "network_endpoint_groups/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteNetworkEndpointGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.NetworkEndpointGroups.Delete",
          "service": {
            "short_name": "NetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.NetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkEndpointGroups_DetachNetworkEndpoints_sync",
      "title": "Snippet for the detach_network_endpoints call in the NetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#detach_network_endpoints. It may require modification in order to execute successfully.",
      "file": "network_endpoint_groups/detach_network_endpoints.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "detach_network_endpoints",
        "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#detach_network_endpoints",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DetachNetworkEndpointsNetworkEndpointGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "DetachNetworkEndpoints",
          "full_name": "google.cloud.compute.v1.NetworkEndpointGroups.DetachNetworkEndpoints",
          "service": {
            "short_name": "NetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.NetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkEndpointGroups_Get_sync",
      "title": "Snippet for the get call in the NetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#get. It may require modification in order to execute successfully.",
      "file": "network_endpoint_groups/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetNetworkEndpointGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworkEndpointGroup",
        "client": {
          "short_name": "NetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.NetworkEndpointGroups.Get",
          "service": {
            "short_name": "NetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.NetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkEndpointGroups_Insert_sync",
      "title": "Snippet for the insert call in the NetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#insert. It may require modification in order to execute successfully.",
      "file": "network_endpoint_groups/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertNetworkEndpointGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.NetworkEndpointGroups.Insert",
          "service": {
            "short_name": "NetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.NetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkEndpointGroups_List_sync",
      "title": "Snippet for the list call in the NetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#list. It may require modification in order to execute successfully.",
      "file": "network_endpoint_groups/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListNetworkEndpointGroupsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworkEndpointGroupList",
        "client": {
          "short_name": "NetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.NetworkEndpointGroups.List",
          "service": {
            "short_name": "NetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.NetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkEndpointGroups_ListNetworkEndpoints_sync",
      "title": "Snippet for the list_network_endpoints call in the NetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#list_network_endpoints. It may require modification in order to execute successfully.",
      "file": "network_endpoint_groups/list_network_endpoints.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_network_endpoints",
        "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#list_network_endpoints",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListNetworkEndpointsNetworkEndpointGroupsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworkEndpointGroupsListNetworkEndpoints",
        "client": {
          "short_name": "NetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "ListNetworkEndpoints",
          "full_name": "google.cloud.compute.v1.NetworkEndpointGroups.ListNetworkEndpoints",
          "service": {
            "short_name": "NetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.NetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkEndpointGroups_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the NetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "network_endpoint_groups/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsNetworkEndpointGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "NetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.NetworkEndpointGroups.TestIamPermissions",
          "service": {
            "short_name": "NetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.NetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_AddAssociation_sync",
      "title": "Snippet for the add_association call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#add_association. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/add_association.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_association",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#add_association",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddAssociationNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "AddAssociation",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.AddAssociation",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_AddRule_sync",
      "title": "Snippet for the add_rule call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#add_rule. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/add_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_rule",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#add_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddRuleNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "AddRule",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.AddRule",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_CloneRules_sync",
      "title": "Snippet for the clone_rules call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#clone_rules. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/clone_rules.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "clone_rules",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#clone_rules",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::CloneRulesNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "CloneRules",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.CloneRules",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_Delete_sync",
      "title": "Snippet for the delete call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#delete. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.Delete",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_Get_sync",
      "title": "Snippet for the get call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#get. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::FirewallPolicy",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.Get",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_GetAssociation_sync",
      "title": "Snippet for the get_association call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#get_association. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/get_association.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_association",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#get_association",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetAssociationNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::FirewallPolicyAssociation",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "GetAssociation",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.GetAssociation",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.GetIamPolicy",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_GetRule_sync",
      "title": "Snippet for the get_rule call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#get_rule. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/get_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_rule",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#get_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRuleNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::FirewallPolicyRule",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "GetRule",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.GetRule",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_Insert_sync",
      "title": "Snippet for the insert call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#insert. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.Insert",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_List_sync",
      "title": "Snippet for the list call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#list. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListNetworkFirewallPoliciesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::FirewallPolicyList",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.List",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_Patch_sync",
      "title": "Snippet for the patch call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#patch. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.Patch",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_PatchRule_sync",
      "title": "Snippet for the patch_rule call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#patch_rule. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/patch_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch_rule",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#patch_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchRuleNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "PatchRule",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.PatchRule",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_RemoveAssociation_sync",
      "title": "Snippet for the remove_association call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#remove_association. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/remove_association.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "remove_association",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#remove_association",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RemoveAssociationNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "RemoveAssociation",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.RemoveAssociation",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_RemoveRule_sync",
      "title": "Snippet for the remove_rule call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#remove_rule. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/remove_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "remove_rule",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#remove_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RemoveRuleNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "RemoveRule",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.RemoveRule",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.SetIamPolicy",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NetworkFirewallPolicies_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the NetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "network_firewall_policies/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "NetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::NetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies.TestIamPermissions",
          "service": {
            "short_name": "NetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.NetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Networks_AddPeering_sync",
      "title": "Snippet for the add_peering call in the Networks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Networks::Client#add_peering. It may require modification in order to execute successfully.",
      "file": "networks/add_peering.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_peering",
        "full_name": "::Google::Cloud::Compute::V1::Networks::Client#add_peering",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddPeeringNetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Networks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Networks::Client"
        },
        "method": {
          "short_name": "AddPeering",
          "full_name": "google.cloud.compute.v1.Networks.AddPeering",
          "service": {
            "short_name": "Networks",
            "full_name": "google.cloud.compute.v1.Networks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Networks_Delete_sync",
      "title": "Snippet for the delete call in the Networks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Networks::Client#delete. It may require modification in order to execute successfully.",
      "file": "networks/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::Networks::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteNetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Networks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Networks::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.Networks.Delete",
          "service": {
            "short_name": "Networks",
            "full_name": "google.cloud.compute.v1.Networks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Networks_Get_sync",
      "title": "Snippet for the get call in the Networks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Networks::Client#get. It may require modification in order to execute successfully.",
      "file": "networks/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Networks::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetNetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Network",
        "client": {
          "short_name": "Networks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Networks::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Networks.Get",
          "service": {
            "short_name": "Networks",
            "full_name": "google.cloud.compute.v1.Networks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Networks_GetEffectiveFirewalls_sync",
      "title": "Snippet for the get_effective_firewalls call in the Networks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Networks::Client#get_effective_firewalls. It may require modification in order to execute successfully.",
      "file": "networks/get_effective_firewalls.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_effective_firewalls",
        "full_name": "::Google::Cloud::Compute::V1::Networks::Client#get_effective_firewalls",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetEffectiveFirewallsNetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworksGetEffectiveFirewallsResponse",
        "client": {
          "short_name": "Networks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Networks::Client"
        },
        "method": {
          "short_name": "GetEffectiveFirewalls",
          "full_name": "google.cloud.compute.v1.Networks.GetEffectiveFirewalls",
          "service": {
            "short_name": "Networks",
            "full_name": "google.cloud.compute.v1.Networks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Networks_Insert_sync",
      "title": "Snippet for the insert call in the Networks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Networks::Client#insert. It may require modification in order to execute successfully.",
      "file": "networks/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::Networks::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertNetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Networks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Networks::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.Networks.Insert",
          "service": {
            "short_name": "Networks",
            "full_name": "google.cloud.compute.v1.Networks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Networks_List_sync",
      "title": "Snippet for the list call in the Networks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Networks::Client#list. It may require modification in order to execute successfully.",
      "file": "networks/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Networks::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListNetworksRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworkList",
        "client": {
          "short_name": "Networks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Networks::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Networks.List",
          "service": {
            "short_name": "Networks",
            "full_name": "google.cloud.compute.v1.Networks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Networks_ListPeeringRoutes_sync",
      "title": "Snippet for the list_peering_routes call in the Networks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Networks::Client#list_peering_routes. It may require modification in order to execute successfully.",
      "file": "networks/list_peering_routes.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_peering_routes",
        "full_name": "::Google::Cloud::Compute::V1::Networks::Client#list_peering_routes",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListPeeringRoutesNetworksRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ExchangedPeeringRoutesList",
        "client": {
          "short_name": "Networks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Networks::Client"
        },
        "method": {
          "short_name": "ListPeeringRoutes",
          "full_name": "google.cloud.compute.v1.Networks.ListPeeringRoutes",
          "service": {
            "short_name": "Networks",
            "full_name": "google.cloud.compute.v1.Networks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Networks_Patch_sync",
      "title": "Snippet for the patch call in the Networks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Networks::Client#patch. It may require modification in order to execute successfully.",
      "file": "networks/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::Networks::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchNetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Networks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Networks::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.Networks.Patch",
          "service": {
            "short_name": "Networks",
            "full_name": "google.cloud.compute.v1.Networks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Networks_RemovePeering_sync",
      "title": "Snippet for the remove_peering call in the Networks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Networks::Client#remove_peering. It may require modification in order to execute successfully.",
      "file": "networks/remove_peering.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "remove_peering",
        "full_name": "::Google::Cloud::Compute::V1::Networks::Client#remove_peering",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RemovePeeringNetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Networks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Networks::Client"
        },
        "method": {
          "short_name": "RemovePeering",
          "full_name": "google.cloud.compute.v1.Networks.RemovePeering",
          "service": {
            "short_name": "Networks",
            "full_name": "google.cloud.compute.v1.Networks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Networks_SwitchToCustomMode_sync",
      "title": "Snippet for the switch_to_custom_mode call in the Networks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Networks::Client#switch_to_custom_mode. It may require modification in order to execute successfully.",
      "file": "networks/switch_to_custom_mode.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "switch_to_custom_mode",
        "full_name": "::Google::Cloud::Compute::V1::Networks::Client#switch_to_custom_mode",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SwitchToCustomModeNetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Networks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Networks::Client"
        },
        "method": {
          "short_name": "SwitchToCustomMode",
          "full_name": "google.cloud.compute.v1.Networks.SwitchToCustomMode",
          "service": {
            "short_name": "Networks",
            "full_name": "google.cloud.compute.v1.Networks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Networks_UpdatePeering_sync",
      "title": "Snippet for the update_peering call in the Networks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Networks::Client#update_peering. It may require modification in order to execute successfully.",
      "file": "networks/update_peering.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update_peering",
        "full_name": "::Google::Cloud::Compute::V1::Networks::Client#update_peering",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdatePeeringNetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Networks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Networks::Client"
        },
        "method": {
          "short_name": "UpdatePeering",
          "full_name": "google.cloud.compute.v1.Networks.UpdatePeering",
          "service": {
            "short_name": "Networks",
            "full_name": "google.cloud.compute.v1.Networks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeGroups_AddNodes_sync",
      "title": "Snippet for the add_nodes call in the NodeGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeGroups::Client#add_nodes. It may require modification in order to execute successfully.",
      "file": "node_groups/add_nodes.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_nodes",
        "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client#add_nodes",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddNodesNodeGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NodeGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client"
        },
        "method": {
          "short_name": "AddNodes",
          "full_name": "google.cloud.compute.v1.NodeGroups.AddNodes",
          "service": {
            "short_name": "NodeGroups",
            "full_name": "google.cloud.compute.v1.NodeGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeGroups_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the NodeGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeGroups::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "node_groups/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListNodeGroupsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NodeGroupAggregatedList",
        "client": {
          "short_name": "NodeGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.NodeGroups.AggregatedList",
          "service": {
            "short_name": "NodeGroups",
            "full_name": "google.cloud.compute.v1.NodeGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeGroups_Delete_sync",
      "title": "Snippet for the delete call in the NodeGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeGroups::Client#delete. It may require modification in order to execute successfully.",
      "file": "node_groups/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteNodeGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NodeGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.NodeGroups.Delete",
          "service": {
            "short_name": "NodeGroups",
            "full_name": "google.cloud.compute.v1.NodeGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeGroups_DeleteNodes_sync",
      "title": "Snippet for the delete_nodes call in the NodeGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeGroups::Client#delete_nodes. It may require modification in order to execute successfully.",
      "file": "node_groups/delete_nodes.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete_nodes",
        "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client#delete_nodes",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteNodesNodeGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NodeGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client"
        },
        "method": {
          "short_name": "DeleteNodes",
          "full_name": "google.cloud.compute.v1.NodeGroups.DeleteNodes",
          "service": {
            "short_name": "NodeGroups",
            "full_name": "google.cloud.compute.v1.NodeGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeGroups_Get_sync",
      "title": "Snippet for the get call in the NodeGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeGroups::Client#get. It may require modification in order to execute successfully.",
      "file": "node_groups/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetNodeGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NodeGroup",
        "client": {
          "short_name": "NodeGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.NodeGroups.Get",
          "service": {
            "short_name": "NodeGroups",
            "full_name": "google.cloud.compute.v1.NodeGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeGroups_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the NodeGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeGroups::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "node_groups/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyNodeGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "NodeGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.NodeGroups.GetIamPolicy",
          "service": {
            "short_name": "NodeGroups",
            "full_name": "google.cloud.compute.v1.NodeGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeGroups_Insert_sync",
      "title": "Snippet for the insert call in the NodeGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeGroups::Client#insert. It may require modification in order to execute successfully.",
      "file": "node_groups/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertNodeGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NodeGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.NodeGroups.Insert",
          "service": {
            "short_name": "NodeGroups",
            "full_name": "google.cloud.compute.v1.NodeGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeGroups_List_sync",
      "title": "Snippet for the list call in the NodeGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeGroups::Client#list. It may require modification in order to execute successfully.",
      "file": "node_groups/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListNodeGroupsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NodeGroupList",
        "client": {
          "short_name": "NodeGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.NodeGroups.List",
          "service": {
            "short_name": "NodeGroups",
            "full_name": "google.cloud.compute.v1.NodeGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeGroups_ListNodes_sync",
      "title": "Snippet for the list_nodes call in the NodeGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeGroups::Client#list_nodes. It may require modification in order to execute successfully.",
      "file": "node_groups/list_nodes.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_nodes",
        "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client#list_nodes",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListNodesNodeGroupsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NodeGroupsListNodes",
        "client": {
          "short_name": "NodeGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client"
        },
        "method": {
          "short_name": "ListNodes",
          "full_name": "google.cloud.compute.v1.NodeGroups.ListNodes",
          "service": {
            "short_name": "NodeGroups",
            "full_name": "google.cloud.compute.v1.NodeGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeGroups_Patch_sync",
      "title": "Snippet for the patch call in the NodeGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeGroups::Client#patch. It may require modification in order to execute successfully.",
      "file": "node_groups/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchNodeGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NodeGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.NodeGroups.Patch",
          "service": {
            "short_name": "NodeGroups",
            "full_name": "google.cloud.compute.v1.NodeGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeGroups_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the NodeGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeGroups::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "node_groups/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyNodeGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "NodeGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.NodeGroups.SetIamPolicy",
          "service": {
            "short_name": "NodeGroups",
            "full_name": "google.cloud.compute.v1.NodeGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeGroups_SetNodeTemplate_sync",
      "title": "Snippet for the set_node_template call in the NodeGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeGroups::Client#set_node_template. It may require modification in order to execute successfully.",
      "file": "node_groups/set_node_template.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_node_template",
        "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client#set_node_template",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetNodeTemplateNodeGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NodeGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client"
        },
        "method": {
          "short_name": "SetNodeTemplate",
          "full_name": "google.cloud.compute.v1.NodeGroups.SetNodeTemplate",
          "service": {
            "short_name": "NodeGroups",
            "full_name": "google.cloud.compute.v1.NodeGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeGroups_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the NodeGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeGroups::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "node_groups/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsNodeGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "NodeGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeGroups::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.NodeGroups.TestIamPermissions",
          "service": {
            "short_name": "NodeGroups",
            "full_name": "google.cloud.compute.v1.NodeGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeTemplates_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the NodeTemplates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeTemplates::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "node_templates/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListNodeTemplatesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NodeTemplateAggregatedList",
        "client": {
          "short_name": "NodeTemplates::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.NodeTemplates.AggregatedList",
          "service": {
            "short_name": "NodeTemplates",
            "full_name": "google.cloud.compute.v1.NodeTemplates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeTemplates_Delete_sync",
      "title": "Snippet for the delete call in the NodeTemplates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeTemplates::Client#delete. It may require modification in order to execute successfully.",
      "file": "node_templates/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteNodeTemplateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NodeTemplates::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.NodeTemplates.Delete",
          "service": {
            "short_name": "NodeTemplates",
            "full_name": "google.cloud.compute.v1.NodeTemplates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeTemplates_Get_sync",
      "title": "Snippet for the get call in the NodeTemplates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeTemplates::Client#get. It may require modification in order to execute successfully.",
      "file": "node_templates/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetNodeTemplateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NodeTemplate",
        "client": {
          "short_name": "NodeTemplates::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.NodeTemplates.Get",
          "service": {
            "short_name": "NodeTemplates",
            "full_name": "google.cloud.compute.v1.NodeTemplates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeTemplates_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the NodeTemplates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeTemplates::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "node_templates/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyNodeTemplateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "NodeTemplates::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.NodeTemplates.GetIamPolicy",
          "service": {
            "short_name": "NodeTemplates",
            "full_name": "google.cloud.compute.v1.NodeTemplates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeTemplates_Insert_sync",
      "title": "Snippet for the insert call in the NodeTemplates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeTemplates::Client#insert. It may require modification in order to execute successfully.",
      "file": "node_templates/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertNodeTemplateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "NodeTemplates::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.NodeTemplates.Insert",
          "service": {
            "short_name": "NodeTemplates",
            "full_name": "google.cloud.compute.v1.NodeTemplates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeTemplates_List_sync",
      "title": "Snippet for the list call in the NodeTemplates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeTemplates::Client#list. It may require modification in order to execute successfully.",
      "file": "node_templates/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListNodeTemplatesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NodeTemplateList",
        "client": {
          "short_name": "NodeTemplates::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.NodeTemplates.List",
          "service": {
            "short_name": "NodeTemplates",
            "full_name": "google.cloud.compute.v1.NodeTemplates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeTemplates_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the NodeTemplates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeTemplates::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "node_templates/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyNodeTemplateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "NodeTemplates::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.NodeTemplates.SetIamPolicy",
          "service": {
            "short_name": "NodeTemplates",
            "full_name": "google.cloud.compute.v1.NodeTemplates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeTemplates_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the NodeTemplates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeTemplates::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "node_templates/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsNodeTemplateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "NodeTemplates::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeTemplates::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.NodeTemplates.TestIamPermissions",
          "service": {
            "short_name": "NodeTemplates",
            "full_name": "google.cloud.compute.v1.NodeTemplates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeTypes_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the NodeTypes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeTypes::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "node_types/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::NodeTypes::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListNodeTypesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NodeTypeAggregatedList",
        "client": {
          "short_name": "NodeTypes::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeTypes::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.NodeTypes.AggregatedList",
          "service": {
            "short_name": "NodeTypes",
            "full_name": "google.cloud.compute.v1.NodeTypes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeTypes_Get_sync",
      "title": "Snippet for the get call in the NodeTypes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeTypes::Client#get. It may require modification in order to execute successfully.",
      "file": "node_types/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::NodeTypes::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetNodeTypeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NodeType",
        "client": {
          "short_name": "NodeTypes::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeTypes::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.NodeTypes.Get",
          "service": {
            "short_name": "NodeTypes",
            "full_name": "google.cloud.compute.v1.NodeTypes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_NodeTypes_List_sync",
      "title": "Snippet for the list call in the NodeTypes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::NodeTypes::Client#list. It may require modification in order to execute successfully.",
      "file": "node_types/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::NodeTypes::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListNodeTypesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NodeTypeList",
        "client": {
          "short_name": "NodeTypes::Client",
          "full_name": "::Google::Cloud::Compute::V1::NodeTypes::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.NodeTypes.List",
          "service": {
            "short_name": "NodeTypes",
            "full_name": "google.cloud.compute.v1.NodeTypes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PacketMirrorings_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the PacketMirrorings service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PacketMirrorings::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "packet_mirrorings/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::PacketMirrorings::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListPacketMirroringsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::PacketMirroringAggregatedList",
        "client": {
          "short_name": "PacketMirrorings::Client",
          "full_name": "::Google::Cloud::Compute::V1::PacketMirrorings::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.PacketMirrorings.AggregatedList",
          "service": {
            "short_name": "PacketMirrorings",
            "full_name": "google.cloud.compute.v1.PacketMirrorings"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PacketMirrorings_Delete_sync",
      "title": "Snippet for the delete call in the PacketMirrorings service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PacketMirrorings::Client#delete. It may require modification in order to execute successfully.",
      "file": "packet_mirrorings/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::PacketMirrorings::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeletePacketMirroringRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "PacketMirrorings::Client",
          "full_name": "::Google::Cloud::Compute::V1::PacketMirrorings::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.PacketMirrorings.Delete",
          "service": {
            "short_name": "PacketMirrorings",
            "full_name": "google.cloud.compute.v1.PacketMirrorings"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PacketMirrorings_Get_sync",
      "title": "Snippet for the get call in the PacketMirrorings service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PacketMirrorings::Client#get. It may require modification in order to execute successfully.",
      "file": "packet_mirrorings/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::PacketMirrorings::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetPacketMirroringRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::PacketMirroring",
        "client": {
          "short_name": "PacketMirrorings::Client",
          "full_name": "::Google::Cloud::Compute::V1::PacketMirrorings::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.PacketMirrorings.Get",
          "service": {
            "short_name": "PacketMirrorings",
            "full_name": "google.cloud.compute.v1.PacketMirrorings"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PacketMirrorings_Insert_sync",
      "title": "Snippet for the insert call in the PacketMirrorings service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PacketMirrorings::Client#insert. It may require modification in order to execute successfully.",
      "file": "packet_mirrorings/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::PacketMirrorings::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertPacketMirroringRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "PacketMirrorings::Client",
          "full_name": "::Google::Cloud::Compute::V1::PacketMirrorings::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.PacketMirrorings.Insert",
          "service": {
            "short_name": "PacketMirrorings",
            "full_name": "google.cloud.compute.v1.PacketMirrorings"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PacketMirrorings_List_sync",
      "title": "Snippet for the list call in the PacketMirrorings service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PacketMirrorings::Client#list. It may require modification in order to execute successfully.",
      "file": "packet_mirrorings/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::PacketMirrorings::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListPacketMirroringsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::PacketMirroringList",
        "client": {
          "short_name": "PacketMirrorings::Client",
          "full_name": "::Google::Cloud::Compute::V1::PacketMirrorings::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.PacketMirrorings.List",
          "service": {
            "short_name": "PacketMirrorings",
            "full_name": "google.cloud.compute.v1.PacketMirrorings"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PacketMirrorings_Patch_sync",
      "title": "Snippet for the patch call in the PacketMirrorings service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PacketMirrorings::Client#patch. It may require modification in order to execute successfully.",
      "file": "packet_mirrorings/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::PacketMirrorings::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchPacketMirroringRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "PacketMirrorings::Client",
          "full_name": "::Google::Cloud::Compute::V1::PacketMirrorings::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.PacketMirrorings.Patch",
          "service": {
            "short_name": "PacketMirrorings",
            "full_name": "google.cloud.compute.v1.PacketMirrorings"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PacketMirrorings_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the PacketMirrorings service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PacketMirrorings::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "packet_mirrorings/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::PacketMirrorings::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsPacketMirroringRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "PacketMirrorings::Client",
          "full_name": "::Google::Cloud::Compute::V1::PacketMirrorings::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.PacketMirrorings.TestIamPermissions",
          "service": {
            "short_name": "PacketMirrorings",
            "full_name": "google.cloud.compute.v1.PacketMirrorings"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Projects_DisableXpnHost_sync",
      "title": "Snippet for the disable_xpn_host call in the Projects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Projects::Client#disable_xpn_host. It may require modification in order to execute successfully.",
      "file": "projects/disable_xpn_host.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "disable_xpn_host",
        "full_name": "::Google::Cloud::Compute::V1::Projects::Client#disable_xpn_host",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DisableXpnHostProjectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Projects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Projects::Client"
        },
        "method": {
          "short_name": "DisableXpnHost",
          "full_name": "google.cloud.compute.v1.Projects.DisableXpnHost",
          "service": {
            "short_name": "Projects",
            "full_name": "google.cloud.compute.v1.Projects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Projects_DisableXpnResource_sync",
      "title": "Snippet for the disable_xpn_resource call in the Projects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Projects::Client#disable_xpn_resource. It may require modification in order to execute successfully.",
      "file": "projects/disable_xpn_resource.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "disable_xpn_resource",
        "full_name": "::Google::Cloud::Compute::V1::Projects::Client#disable_xpn_resource",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DisableXpnResourceProjectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Projects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Projects::Client"
        },
        "method": {
          "short_name": "DisableXpnResource",
          "full_name": "google.cloud.compute.v1.Projects.DisableXpnResource",
          "service": {
            "short_name": "Projects",
            "full_name": "google.cloud.compute.v1.Projects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Projects_EnableXpnHost_sync",
      "title": "Snippet for the enable_xpn_host call in the Projects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Projects::Client#enable_xpn_host. It may require modification in order to execute successfully.",
      "file": "projects/enable_xpn_host.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "enable_xpn_host",
        "full_name": "::Google::Cloud::Compute::V1::Projects::Client#enable_xpn_host",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::EnableXpnHostProjectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Projects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Projects::Client"
        },
        "method": {
          "short_name": "EnableXpnHost",
          "full_name": "google.cloud.compute.v1.Projects.EnableXpnHost",
          "service": {
            "short_name": "Projects",
            "full_name": "google.cloud.compute.v1.Projects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Projects_EnableXpnResource_sync",
      "title": "Snippet for the enable_xpn_resource call in the Projects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Projects::Client#enable_xpn_resource. It may require modification in order to execute successfully.",
      "file": "projects/enable_xpn_resource.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "enable_xpn_resource",
        "full_name": "::Google::Cloud::Compute::V1::Projects::Client#enable_xpn_resource",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::EnableXpnResourceProjectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Projects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Projects::Client"
        },
        "method": {
          "short_name": "EnableXpnResource",
          "full_name": "google.cloud.compute.v1.Projects.EnableXpnResource",
          "service": {
            "short_name": "Projects",
            "full_name": "google.cloud.compute.v1.Projects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Projects_Get_sync",
      "title": "Snippet for the get call in the Projects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Projects::Client#get. It may require modification in order to execute successfully.",
      "file": "projects/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Projects::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetProjectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Project",
        "client": {
          "short_name": "Projects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Projects::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Projects.Get",
          "service": {
            "short_name": "Projects",
            "full_name": "google.cloud.compute.v1.Projects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Projects_GetXpnHost_sync",
      "title": "Snippet for the get_xpn_host call in the Projects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Projects::Client#get_xpn_host. It may require modification in order to execute successfully.",
      "file": "projects/get_xpn_host.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_xpn_host",
        "full_name": "::Google::Cloud::Compute::V1::Projects::Client#get_xpn_host",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetXpnHostProjectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Project",
        "client": {
          "short_name": "Projects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Projects::Client"
        },
        "method": {
          "short_name": "GetXpnHost",
          "full_name": "google.cloud.compute.v1.Projects.GetXpnHost",
          "service": {
            "short_name": "Projects",
            "full_name": "google.cloud.compute.v1.Projects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Projects_GetXpnResources_sync",
      "title": "Snippet for the get_xpn_resources call in the Projects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Projects::Client#get_xpn_resources. It may require modification in order to execute successfully.",
      "file": "projects/get_xpn_resources.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_xpn_resources",
        "full_name": "::Google::Cloud::Compute::V1::Projects::Client#get_xpn_resources",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetXpnResourcesProjectsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ProjectsGetXpnResources",
        "client": {
          "short_name": "Projects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Projects::Client"
        },
        "method": {
          "short_name": "GetXpnResources",
          "full_name": "google.cloud.compute.v1.Projects.GetXpnResources",
          "service": {
            "short_name": "Projects",
            "full_name": "google.cloud.compute.v1.Projects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Projects_ListXpnHosts_sync",
      "title": "Snippet for the list_xpn_hosts call in the Projects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Projects::Client#list_xpn_hosts. It may require modification in order to execute successfully.",
      "file": "projects/list_xpn_hosts.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_xpn_hosts",
        "full_name": "::Google::Cloud::Compute::V1::Projects::Client#list_xpn_hosts",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListXpnHostsProjectsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::XpnHostList",
        "client": {
          "short_name": "Projects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Projects::Client"
        },
        "method": {
          "short_name": "ListXpnHosts",
          "full_name": "google.cloud.compute.v1.Projects.ListXpnHosts",
          "service": {
            "short_name": "Projects",
            "full_name": "google.cloud.compute.v1.Projects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Projects_MoveDisk_sync",
      "title": "Snippet for the move_disk call in the Projects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Projects::Client#move_disk. It may require modification in order to execute successfully.",
      "file": "projects/move_disk.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "move_disk",
        "full_name": "::Google::Cloud::Compute::V1::Projects::Client#move_disk",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::MoveDiskProjectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Projects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Projects::Client"
        },
        "method": {
          "short_name": "MoveDisk",
          "full_name": "google.cloud.compute.v1.Projects.MoveDisk",
          "service": {
            "short_name": "Projects",
            "full_name": "google.cloud.compute.v1.Projects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Projects_MoveInstance_sync",
      "title": "Snippet for the move_instance call in the Projects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Projects::Client#move_instance. It may require modification in order to execute successfully.",
      "file": "projects/move_instance.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "move_instance",
        "full_name": "::Google::Cloud::Compute::V1::Projects::Client#move_instance",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::MoveInstanceProjectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Projects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Projects::Client"
        },
        "method": {
          "short_name": "MoveInstance",
          "full_name": "google.cloud.compute.v1.Projects.MoveInstance",
          "service": {
            "short_name": "Projects",
            "full_name": "google.cloud.compute.v1.Projects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Projects_SetCommonInstanceMetadata_sync",
      "title": "Snippet for the set_common_instance_metadata call in the Projects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Projects::Client#set_common_instance_metadata. It may require modification in order to execute successfully.",
      "file": "projects/set_common_instance_metadata.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_common_instance_metadata",
        "full_name": "::Google::Cloud::Compute::V1::Projects::Client#set_common_instance_metadata",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetCommonInstanceMetadataProjectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Projects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Projects::Client"
        },
        "method": {
          "short_name": "SetCommonInstanceMetadata",
          "full_name": "google.cloud.compute.v1.Projects.SetCommonInstanceMetadata",
          "service": {
            "short_name": "Projects",
            "full_name": "google.cloud.compute.v1.Projects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Projects_SetDefaultNetworkTier_sync",
      "title": "Snippet for the set_default_network_tier call in the Projects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Projects::Client#set_default_network_tier. It may require modification in order to execute successfully.",
      "file": "projects/set_default_network_tier.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_default_network_tier",
        "full_name": "::Google::Cloud::Compute::V1::Projects::Client#set_default_network_tier",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetDefaultNetworkTierProjectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Projects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Projects::Client"
        },
        "method": {
          "short_name": "SetDefaultNetworkTier",
          "full_name": "google.cloud.compute.v1.Projects.SetDefaultNetworkTier",
          "service": {
            "short_name": "Projects",
            "full_name": "google.cloud.compute.v1.Projects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Projects_SetUsageExportBucket_sync",
      "title": "Snippet for the set_usage_export_bucket call in the Projects service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Projects::Client#set_usage_export_bucket. It may require modification in order to execute successfully.",
      "file": "projects/set_usage_export_bucket.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_usage_export_bucket",
        "full_name": "::Google::Cloud::Compute::V1::Projects::Client#set_usage_export_bucket",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetUsageExportBucketProjectRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Projects::Client",
          "full_name": "::Google::Cloud::Compute::V1::Projects::Client"
        },
        "method": {
          "short_name": "SetUsageExportBucket",
          "full_name": "google.cloud.compute.v1.Projects.SetUsageExportBucket",
          "service": {
            "short_name": "Projects",
            "full_name": "google.cloud.compute.v1.Projects"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PublicAdvertisedPrefixes_Delete_sync",
      "title": "Snippet for the delete call in the PublicAdvertisedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PublicAdvertisedPrefixes::Client#delete. It may require modification in order to execute successfully.",
      "file": "public_advertised_prefixes/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::PublicAdvertisedPrefixes::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeletePublicAdvertisedPrefixeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "PublicAdvertisedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::PublicAdvertisedPrefixes::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.PublicAdvertisedPrefixes.Delete",
          "service": {
            "short_name": "PublicAdvertisedPrefixes",
            "full_name": "google.cloud.compute.v1.PublicAdvertisedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PublicAdvertisedPrefixes_Get_sync",
      "title": "Snippet for the get call in the PublicAdvertisedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PublicAdvertisedPrefixes::Client#get. It may require modification in order to execute successfully.",
      "file": "public_advertised_prefixes/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::PublicAdvertisedPrefixes::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetPublicAdvertisedPrefixeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::PublicAdvertisedPrefix",
        "client": {
          "short_name": "PublicAdvertisedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::PublicAdvertisedPrefixes::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.PublicAdvertisedPrefixes.Get",
          "service": {
            "short_name": "PublicAdvertisedPrefixes",
            "full_name": "google.cloud.compute.v1.PublicAdvertisedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PublicAdvertisedPrefixes_Insert_sync",
      "title": "Snippet for the insert call in the PublicAdvertisedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PublicAdvertisedPrefixes::Client#insert. It may require modification in order to execute successfully.",
      "file": "public_advertised_prefixes/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::PublicAdvertisedPrefixes::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertPublicAdvertisedPrefixeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "PublicAdvertisedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::PublicAdvertisedPrefixes::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.PublicAdvertisedPrefixes.Insert",
          "service": {
            "short_name": "PublicAdvertisedPrefixes",
            "full_name": "google.cloud.compute.v1.PublicAdvertisedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PublicAdvertisedPrefixes_List_sync",
      "title": "Snippet for the list call in the PublicAdvertisedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PublicAdvertisedPrefixes::Client#list. It may require modification in order to execute successfully.",
      "file": "public_advertised_prefixes/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::PublicAdvertisedPrefixes::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListPublicAdvertisedPrefixesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::PublicAdvertisedPrefixList",
        "client": {
          "short_name": "PublicAdvertisedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::PublicAdvertisedPrefixes::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.PublicAdvertisedPrefixes.List",
          "service": {
            "short_name": "PublicAdvertisedPrefixes",
            "full_name": "google.cloud.compute.v1.PublicAdvertisedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PublicAdvertisedPrefixes_Patch_sync",
      "title": "Snippet for the patch call in the PublicAdvertisedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PublicAdvertisedPrefixes::Client#patch. It may require modification in order to execute successfully.",
      "file": "public_advertised_prefixes/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::PublicAdvertisedPrefixes::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchPublicAdvertisedPrefixeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "PublicAdvertisedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::PublicAdvertisedPrefixes::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.PublicAdvertisedPrefixes.Patch",
          "service": {
            "short_name": "PublicAdvertisedPrefixes",
            "full_name": "google.cloud.compute.v1.PublicAdvertisedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PublicDelegatedPrefixes_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the PublicDelegatedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "public_delegated_prefixes/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListPublicDelegatedPrefixesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::PublicDelegatedPrefixAggregatedList",
        "client": {
          "short_name": "PublicDelegatedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.PublicDelegatedPrefixes.AggregatedList",
          "service": {
            "short_name": "PublicDelegatedPrefixes",
            "full_name": "google.cloud.compute.v1.PublicDelegatedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PublicDelegatedPrefixes_Delete_sync",
      "title": "Snippet for the delete call in the PublicDelegatedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client#delete. It may require modification in order to execute successfully.",
      "file": "public_delegated_prefixes/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeletePublicDelegatedPrefixeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "PublicDelegatedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.PublicDelegatedPrefixes.Delete",
          "service": {
            "short_name": "PublicDelegatedPrefixes",
            "full_name": "google.cloud.compute.v1.PublicDelegatedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PublicDelegatedPrefixes_Get_sync",
      "title": "Snippet for the get call in the PublicDelegatedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client#get. It may require modification in order to execute successfully.",
      "file": "public_delegated_prefixes/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetPublicDelegatedPrefixeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::PublicDelegatedPrefix",
        "client": {
          "short_name": "PublicDelegatedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.PublicDelegatedPrefixes.Get",
          "service": {
            "short_name": "PublicDelegatedPrefixes",
            "full_name": "google.cloud.compute.v1.PublicDelegatedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PublicDelegatedPrefixes_Insert_sync",
      "title": "Snippet for the insert call in the PublicDelegatedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client#insert. It may require modification in order to execute successfully.",
      "file": "public_delegated_prefixes/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertPublicDelegatedPrefixeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "PublicDelegatedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.PublicDelegatedPrefixes.Insert",
          "service": {
            "short_name": "PublicDelegatedPrefixes",
            "full_name": "google.cloud.compute.v1.PublicDelegatedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PublicDelegatedPrefixes_List_sync",
      "title": "Snippet for the list call in the PublicDelegatedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client#list. It may require modification in order to execute successfully.",
      "file": "public_delegated_prefixes/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListPublicDelegatedPrefixesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::PublicDelegatedPrefixList",
        "client": {
          "short_name": "PublicDelegatedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.PublicDelegatedPrefixes.List",
          "service": {
            "short_name": "PublicDelegatedPrefixes",
            "full_name": "google.cloud.compute.v1.PublicDelegatedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_PublicDelegatedPrefixes_Patch_sync",
      "title": "Snippet for the patch call in the PublicDelegatedPrefixes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client#patch. It may require modification in order to execute successfully.",
      "file": "public_delegated_prefixes/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchPublicDelegatedPrefixeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "PublicDelegatedPrefixes::Client",
          "full_name": "::Google::Cloud::Compute::V1::PublicDelegatedPrefixes::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.PublicDelegatedPrefixes.Patch",
          "service": {
            "short_name": "PublicDelegatedPrefixes",
            "full_name": "google.cloud.compute.v1.PublicDelegatedPrefixes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionAutoscalers_Delete_sync",
      "title": "Snippet for the delete call in the RegionAutoscalers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionAutoscalers::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_autoscalers/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionAutoscalers::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionAutoscalerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionAutoscalers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionAutoscalers::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionAutoscalers.Delete",
          "service": {
            "short_name": "RegionAutoscalers",
            "full_name": "google.cloud.compute.v1.RegionAutoscalers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionAutoscalers_Get_sync",
      "title": "Snippet for the get call in the RegionAutoscalers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionAutoscalers::Client#get. It may require modification in order to execute successfully.",
      "file": "region_autoscalers/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionAutoscalers::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionAutoscalerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Autoscaler",
        "client": {
          "short_name": "RegionAutoscalers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionAutoscalers::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionAutoscalers.Get",
          "service": {
            "short_name": "RegionAutoscalers",
            "full_name": "google.cloud.compute.v1.RegionAutoscalers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionAutoscalers_Insert_sync",
      "title": "Snippet for the insert call in the RegionAutoscalers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionAutoscalers::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_autoscalers/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionAutoscalers::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionAutoscalerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionAutoscalers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionAutoscalers::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionAutoscalers.Insert",
          "service": {
            "short_name": "RegionAutoscalers",
            "full_name": "google.cloud.compute.v1.RegionAutoscalers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionAutoscalers_List_sync",
      "title": "Snippet for the list call in the RegionAutoscalers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionAutoscalers::Client#list. It may require modification in order to execute successfully.",
      "file": "region_autoscalers/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionAutoscalers::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionAutoscalersRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::RegionAutoscalerList",
        "client": {
          "short_name": "RegionAutoscalers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionAutoscalers::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionAutoscalers.List",
          "service": {
            "short_name": "RegionAutoscalers",
            "full_name": "google.cloud.compute.v1.RegionAutoscalers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionAutoscalers_Patch_sync",
      "title": "Snippet for the patch call in the RegionAutoscalers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionAutoscalers::Client#patch. It may require modification in order to execute successfully.",
      "file": "region_autoscalers/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::RegionAutoscalers::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchRegionAutoscalerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionAutoscalers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionAutoscalers::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.RegionAutoscalers.Patch",
          "service": {
            "short_name": "RegionAutoscalers",
            "full_name": "google.cloud.compute.v1.RegionAutoscalers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionAutoscalers_Update_sync",
      "title": "Snippet for the update call in the RegionAutoscalers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionAutoscalers::Client#update. It may require modification in order to execute successfully.",
      "file": "region_autoscalers/update.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update",
        "full_name": "::Google::Cloud::Compute::V1::RegionAutoscalers::Client#update",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateRegionAutoscalerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionAutoscalers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionAutoscalers::Client"
        },
        "method": {
          "short_name": "Update",
          "full_name": "google.cloud.compute.v1.RegionAutoscalers.Update",
          "service": {
            "short_name": "RegionAutoscalers",
            "full_name": "google.cloud.compute.v1.RegionAutoscalers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionBackendServices_Delete_sync",
      "title": "Snippet for the delete call in the RegionBackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionBackendServices::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_backend_services/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionBackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionBackendServices.Delete",
          "service": {
            "short_name": "RegionBackendServices",
            "full_name": "google.cloud.compute.v1.RegionBackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionBackendServices_Get_sync",
      "title": "Snippet for the get call in the RegionBackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionBackendServices::Client#get. It may require modification in order to execute successfully.",
      "file": "region_backend_services/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::BackendService",
        "client": {
          "short_name": "RegionBackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionBackendServices.Get",
          "service": {
            "short_name": "RegionBackendServices",
            "full_name": "google.cloud.compute.v1.RegionBackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionBackendServices_GetHealth_sync",
      "title": "Snippet for the get_health call in the RegionBackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionBackendServices::Client#get_health. It may require modification in order to execute successfully.",
      "file": "region_backend_services/get_health.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_health",
        "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client#get_health",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetHealthRegionBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::BackendServiceGroupHealth",
        "client": {
          "short_name": "RegionBackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client"
        },
        "method": {
          "short_name": "GetHealth",
          "full_name": "google.cloud.compute.v1.RegionBackendServices.GetHealth",
          "service": {
            "short_name": "RegionBackendServices",
            "full_name": "google.cloud.compute.v1.RegionBackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionBackendServices_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the RegionBackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionBackendServices::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "region_backend_services/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyRegionBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "RegionBackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.RegionBackendServices.GetIamPolicy",
          "service": {
            "short_name": "RegionBackendServices",
            "full_name": "google.cloud.compute.v1.RegionBackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionBackendServices_Insert_sync",
      "title": "Snippet for the insert call in the RegionBackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionBackendServices::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_backend_services/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionBackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionBackendServices.Insert",
          "service": {
            "short_name": "RegionBackendServices",
            "full_name": "google.cloud.compute.v1.RegionBackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionBackendServices_List_sync",
      "title": "Snippet for the list call in the RegionBackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionBackendServices::Client#list. It may require modification in order to execute successfully.",
      "file": "region_backend_services/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionBackendServicesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::BackendServiceList",
        "client": {
          "short_name": "RegionBackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionBackendServices.List",
          "service": {
            "short_name": "RegionBackendServices",
            "full_name": "google.cloud.compute.v1.RegionBackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionBackendServices_Patch_sync",
      "title": "Snippet for the patch call in the RegionBackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionBackendServices::Client#patch. It may require modification in order to execute successfully.",
      "file": "region_backend_services/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchRegionBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionBackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.RegionBackendServices.Patch",
          "service": {
            "short_name": "RegionBackendServices",
            "full_name": "google.cloud.compute.v1.RegionBackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionBackendServices_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the RegionBackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionBackendServices::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "region_backend_services/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyRegionBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "RegionBackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.RegionBackendServices.SetIamPolicy",
          "service": {
            "short_name": "RegionBackendServices",
            "full_name": "google.cloud.compute.v1.RegionBackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionBackendServices_Update_sync",
      "title": "Snippet for the update call in the RegionBackendServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionBackendServices::Client#update. It may require modification in order to execute successfully.",
      "file": "region_backend_services/update.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update",
        "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client#update",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateRegionBackendServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionBackendServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionBackendServices::Client"
        },
        "method": {
          "short_name": "Update",
          "full_name": "google.cloud.compute.v1.RegionBackendServices.Update",
          "service": {
            "short_name": "RegionBackendServices",
            "full_name": "google.cloud.compute.v1.RegionBackendServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionCommitments_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the RegionCommitments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionCommitments::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "region_commitments/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::RegionCommitments::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListRegionCommitmentsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::CommitmentAggregatedList",
        "client": {
          "short_name": "RegionCommitments::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionCommitments::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.RegionCommitments.AggregatedList",
          "service": {
            "short_name": "RegionCommitments",
            "full_name": "google.cloud.compute.v1.RegionCommitments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionCommitments_Get_sync",
      "title": "Snippet for the get call in the RegionCommitments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionCommitments::Client#get. It may require modification in order to execute successfully.",
      "file": "region_commitments/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionCommitments::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionCommitmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Commitment",
        "client": {
          "short_name": "RegionCommitments::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionCommitments::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionCommitments.Get",
          "service": {
            "short_name": "RegionCommitments",
            "full_name": "google.cloud.compute.v1.RegionCommitments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionCommitments_Insert_sync",
      "title": "Snippet for the insert call in the RegionCommitments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionCommitments::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_commitments/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionCommitments::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionCommitmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionCommitments::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionCommitments::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionCommitments.Insert",
          "service": {
            "short_name": "RegionCommitments",
            "full_name": "google.cloud.compute.v1.RegionCommitments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionCommitments_List_sync",
      "title": "Snippet for the list call in the RegionCommitments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionCommitments::Client#list. It may require modification in order to execute successfully.",
      "file": "region_commitments/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionCommitments::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionCommitmentsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::CommitmentList",
        "client": {
          "short_name": "RegionCommitments::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionCommitments::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionCommitments.List",
          "service": {
            "short_name": "RegionCommitments",
            "full_name": "google.cloud.compute.v1.RegionCommitments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionCommitments_Update_sync",
      "title": "Snippet for the update call in the RegionCommitments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionCommitments::Client#update. It may require modification in order to execute successfully.",
      "file": "region_commitments/update.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update",
        "full_name": "::Google::Cloud::Compute::V1::RegionCommitments::Client#update",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateRegionCommitmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionCommitments::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionCommitments::Client"
        },
        "method": {
          "short_name": "Update",
          "full_name": "google.cloud.compute.v1.RegionCommitments.Update",
          "service": {
            "short_name": "RegionCommitments",
            "full_name": "google.cloud.compute.v1.RegionCommitments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionDiskTypes_Get_sync",
      "title": "Snippet for the get call in the RegionDiskTypes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionDiskTypes::Client#get. It may require modification in order to execute successfully.",
      "file": "region_disk_types/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionDiskTypes::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionDiskTypeRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::DiskType",
        "client": {
          "short_name": "RegionDiskTypes::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionDiskTypes::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionDiskTypes.Get",
          "service": {
            "short_name": "RegionDiskTypes",
            "full_name": "google.cloud.compute.v1.RegionDiskTypes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionDiskTypes_List_sync",
      "title": "Snippet for the list call in the RegionDiskTypes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionDiskTypes::Client#list. It may require modification in order to execute successfully.",
      "file": "region_disk_types/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionDiskTypes::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionDiskTypesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::RegionDiskTypeList",
        "client": {
          "short_name": "RegionDiskTypes::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionDiskTypes::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionDiskTypes.List",
          "service": {
            "short_name": "RegionDiskTypes",
            "full_name": "google.cloud.compute.v1.RegionDiskTypes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionDisks_AddResourcePolicies_sync",
      "title": "Snippet for the add_resource_policies call in the RegionDisks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionDisks::Client#add_resource_policies. It may require modification in order to execute successfully.",
      "file": "region_disks/add_resource_policies.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_resource_policies",
        "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client#add_resource_policies",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddResourcePoliciesRegionDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionDisks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client"
        },
        "method": {
          "short_name": "AddResourcePolicies",
          "full_name": "google.cloud.compute.v1.RegionDisks.AddResourcePolicies",
          "service": {
            "short_name": "RegionDisks",
            "full_name": "google.cloud.compute.v1.RegionDisks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionDisks_CreateSnapshot_sync",
      "title": "Snippet for the create_snapshot call in the RegionDisks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionDisks::Client#create_snapshot. It may require modification in order to execute successfully.",
      "file": "region_disks/create_snapshot.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "create_snapshot",
        "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client#create_snapshot",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::CreateSnapshotRegionDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionDisks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client"
        },
        "method": {
          "short_name": "CreateSnapshot",
          "full_name": "google.cloud.compute.v1.RegionDisks.CreateSnapshot",
          "service": {
            "short_name": "RegionDisks",
            "full_name": "google.cloud.compute.v1.RegionDisks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionDisks_Delete_sync",
      "title": "Snippet for the delete call in the RegionDisks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionDisks::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_disks/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionDisks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionDisks.Delete",
          "service": {
            "short_name": "RegionDisks",
            "full_name": "google.cloud.compute.v1.RegionDisks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionDisks_Get_sync",
      "title": "Snippet for the get call in the RegionDisks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionDisks::Client#get. It may require modification in order to execute successfully.",
      "file": "region_disks/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Disk",
        "client": {
          "short_name": "RegionDisks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionDisks.Get",
          "service": {
            "short_name": "RegionDisks",
            "full_name": "google.cloud.compute.v1.RegionDisks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionDisks_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the RegionDisks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionDisks::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "region_disks/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyRegionDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "RegionDisks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.RegionDisks.GetIamPolicy",
          "service": {
            "short_name": "RegionDisks",
            "full_name": "google.cloud.compute.v1.RegionDisks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionDisks_Insert_sync",
      "title": "Snippet for the insert call in the RegionDisks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionDisks::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_disks/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionDisks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionDisks.Insert",
          "service": {
            "short_name": "RegionDisks",
            "full_name": "google.cloud.compute.v1.RegionDisks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionDisks_List_sync",
      "title": "Snippet for the list call in the RegionDisks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionDisks::Client#list. It may require modification in order to execute successfully.",
      "file": "region_disks/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionDisksRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::DiskList",
        "client": {
          "short_name": "RegionDisks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionDisks.List",
          "service": {
            "short_name": "RegionDisks",
            "full_name": "google.cloud.compute.v1.RegionDisks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionDisks_RemoveResourcePolicies_sync",
      "title": "Snippet for the remove_resource_policies call in the RegionDisks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionDisks::Client#remove_resource_policies. It may require modification in order to execute successfully.",
      "file": "region_disks/remove_resource_policies.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "remove_resource_policies",
        "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client#remove_resource_policies",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RemoveResourcePoliciesRegionDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionDisks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client"
        },
        "method": {
          "short_name": "RemoveResourcePolicies",
          "full_name": "google.cloud.compute.v1.RegionDisks.RemoveResourcePolicies",
          "service": {
            "short_name": "RegionDisks",
            "full_name": "google.cloud.compute.v1.RegionDisks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionDisks_Resize_sync",
      "title": "Snippet for the resize call in the RegionDisks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionDisks::Client#resize. It may require modification in order to execute successfully.",
      "file": "region_disks/resize.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "resize",
        "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client#resize",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ResizeRegionDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionDisks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client"
        },
        "method": {
          "short_name": "Resize",
          "full_name": "google.cloud.compute.v1.RegionDisks.Resize",
          "service": {
            "short_name": "RegionDisks",
            "full_name": "google.cloud.compute.v1.RegionDisks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionDisks_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the RegionDisks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionDisks::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "region_disks/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyRegionDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "RegionDisks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.RegionDisks.SetIamPolicy",
          "service": {
            "short_name": "RegionDisks",
            "full_name": "google.cloud.compute.v1.RegionDisks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionDisks_SetLabels_sync",
      "title": "Snippet for the set_labels call in the RegionDisks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionDisks::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "region_disks/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsRegionDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionDisks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.RegionDisks.SetLabels",
          "service": {
            "short_name": "RegionDisks",
            "full_name": "google.cloud.compute.v1.RegionDisks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionDisks_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the RegionDisks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionDisks::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "region_disks/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsRegionDiskRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "RegionDisks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionDisks::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.RegionDisks.TestIamPermissions",
          "service": {
            "short_name": "RegionDisks",
            "full_name": "google.cloud.compute.v1.RegionDisks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionHealthCheckServices_Delete_sync",
      "title": "Snippet for the delete call in the RegionHealthCheckServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionHealthCheckServices::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_health_check_services/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionHealthCheckServices::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionHealthCheckServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionHealthCheckServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionHealthCheckServices::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionHealthCheckServices.Delete",
          "service": {
            "short_name": "RegionHealthCheckServices",
            "full_name": "google.cloud.compute.v1.RegionHealthCheckServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionHealthCheckServices_Get_sync",
      "title": "Snippet for the get call in the RegionHealthCheckServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionHealthCheckServices::Client#get. It may require modification in order to execute successfully.",
      "file": "region_health_check_services/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionHealthCheckServices::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionHealthCheckServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::HealthCheckService",
        "client": {
          "short_name": "RegionHealthCheckServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionHealthCheckServices::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionHealthCheckServices.Get",
          "service": {
            "short_name": "RegionHealthCheckServices",
            "full_name": "google.cloud.compute.v1.RegionHealthCheckServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionHealthCheckServices_Insert_sync",
      "title": "Snippet for the insert call in the RegionHealthCheckServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionHealthCheckServices::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_health_check_services/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionHealthCheckServices::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionHealthCheckServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionHealthCheckServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionHealthCheckServices::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionHealthCheckServices.Insert",
          "service": {
            "short_name": "RegionHealthCheckServices",
            "full_name": "google.cloud.compute.v1.RegionHealthCheckServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionHealthCheckServices_List_sync",
      "title": "Snippet for the list call in the RegionHealthCheckServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionHealthCheckServices::Client#list. It may require modification in order to execute successfully.",
      "file": "region_health_check_services/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionHealthCheckServices::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionHealthCheckServicesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::HealthCheckServicesList",
        "client": {
          "short_name": "RegionHealthCheckServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionHealthCheckServices::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionHealthCheckServices.List",
          "service": {
            "short_name": "RegionHealthCheckServices",
            "full_name": "google.cloud.compute.v1.RegionHealthCheckServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionHealthCheckServices_Patch_sync",
      "title": "Snippet for the patch call in the RegionHealthCheckServices service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionHealthCheckServices::Client#patch. It may require modification in order to execute successfully.",
      "file": "region_health_check_services/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::RegionHealthCheckServices::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchRegionHealthCheckServiceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionHealthCheckServices::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionHealthCheckServices::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.RegionHealthCheckServices.Patch",
          "service": {
            "short_name": "RegionHealthCheckServices",
            "full_name": "google.cloud.compute.v1.RegionHealthCheckServices"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionHealthChecks_Delete_sync",
      "title": "Snippet for the delete call in the RegionHealthChecks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionHealthChecks::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_health_checks/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionHealthChecks::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionHealthCheckRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionHealthChecks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionHealthChecks::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionHealthChecks.Delete",
          "service": {
            "short_name": "RegionHealthChecks",
            "full_name": "google.cloud.compute.v1.RegionHealthChecks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionHealthChecks_Get_sync",
      "title": "Snippet for the get call in the RegionHealthChecks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionHealthChecks::Client#get. It may require modification in order to execute successfully.",
      "file": "region_health_checks/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionHealthChecks::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionHealthCheckRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::HealthCheck",
        "client": {
          "short_name": "RegionHealthChecks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionHealthChecks::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionHealthChecks.Get",
          "service": {
            "short_name": "RegionHealthChecks",
            "full_name": "google.cloud.compute.v1.RegionHealthChecks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionHealthChecks_Insert_sync",
      "title": "Snippet for the insert call in the RegionHealthChecks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionHealthChecks::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_health_checks/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionHealthChecks::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionHealthCheckRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionHealthChecks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionHealthChecks::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionHealthChecks.Insert",
          "service": {
            "short_name": "RegionHealthChecks",
            "full_name": "google.cloud.compute.v1.RegionHealthChecks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionHealthChecks_List_sync",
      "title": "Snippet for the list call in the RegionHealthChecks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionHealthChecks::Client#list. It may require modification in order to execute successfully.",
      "file": "region_health_checks/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionHealthChecks::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionHealthChecksRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::HealthCheckList",
        "client": {
          "short_name": "RegionHealthChecks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionHealthChecks::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionHealthChecks.List",
          "service": {
            "short_name": "RegionHealthChecks",
            "full_name": "google.cloud.compute.v1.RegionHealthChecks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionHealthChecks_Patch_sync",
      "title": "Snippet for the patch call in the RegionHealthChecks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionHealthChecks::Client#patch. It may require modification in order to execute successfully.",
      "file": "region_health_checks/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::RegionHealthChecks::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchRegionHealthCheckRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionHealthChecks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionHealthChecks::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.RegionHealthChecks.Patch",
          "service": {
            "short_name": "RegionHealthChecks",
            "full_name": "google.cloud.compute.v1.RegionHealthChecks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionHealthChecks_Update_sync",
      "title": "Snippet for the update call in the RegionHealthChecks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionHealthChecks::Client#update. It may require modification in order to execute successfully.",
      "file": "region_health_checks/update.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update",
        "full_name": "::Google::Cloud::Compute::V1::RegionHealthChecks::Client#update",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateRegionHealthCheckRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionHealthChecks::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionHealthChecks::Client"
        },
        "method": {
          "short_name": "Update",
          "full_name": "google.cloud.compute.v1.RegionHealthChecks.Update",
          "service": {
            "short_name": "RegionHealthChecks",
            "full_name": "google.cloud.compute.v1.RegionHealthChecks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_AbandonInstances_sync",
      "title": "Snippet for the abandon_instances call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#abandon_instances. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/abandon_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "abandon_instances",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#abandon_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AbandonInstancesRegionInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "AbandonInstances",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.AbandonInstances",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_ApplyUpdatesToInstances_sync",
      "title": "Snippet for the apply_updates_to_instances call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#apply_updates_to_instances. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/apply_updates_to_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "apply_updates_to_instances",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#apply_updates_to_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ApplyUpdatesToInstancesRegionInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "ApplyUpdatesToInstances",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.ApplyUpdatesToInstances",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_CreateInstances_sync",
      "title": "Snippet for the create_instances call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#create_instances. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/create_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "create_instances",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#create_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::CreateInstancesRegionInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "CreateInstances",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.CreateInstances",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_Delete_sync",
      "title": "Snippet for the delete call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.Delete",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_DeleteInstances_sync",
      "title": "Snippet for the delete_instances call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#delete_instances. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/delete_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete_instances",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#delete_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteInstancesRegionInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "DeleteInstances",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.DeleteInstances",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_DeletePerInstanceConfigs_sync",
      "title": "Snippet for the delete_per_instance_configs call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#delete_per_instance_configs. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/delete_per_instance_configs.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete_per_instance_configs",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#delete_per_instance_configs",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeletePerInstanceConfigsRegionInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "DeletePerInstanceConfigs",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.DeletePerInstanceConfigs",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_Get_sync",
      "title": "Snippet for the get call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#get. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceGroupManager",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.Get",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_Insert_sync",
      "title": "Snippet for the insert call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.Insert",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_List_sync",
      "title": "Snippet for the list call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#list. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionInstanceGroupManagersRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagerList",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.List",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_ListErrors_sync",
      "title": "Snippet for the list_errors call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#list_errors. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/list_errors.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_errors",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#list_errors",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListErrorsRegionInstanceGroupManagersRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagersListErrorsResponse",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "ListErrors",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.ListErrors",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_ListManagedInstances_sync",
      "title": "Snippet for the list_managed_instances call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#list_managed_instances. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/list_managed_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_managed_instances",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#list_managed_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListManagedInstancesRegionInstanceGroupManagersRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagersListInstancesResponse",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "ListManagedInstances",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.ListManagedInstances",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_ListPerInstanceConfigs_sync",
      "title": "Snippet for the list_per_instance_configs call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#list_per_instance_configs. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/list_per_instance_configs.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_per_instance_configs",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#list_per_instance_configs",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListPerInstanceConfigsRegionInstanceGroupManagersRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagersListInstanceConfigsResp",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "ListPerInstanceConfigs",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.ListPerInstanceConfigs",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_Patch_sync",
      "title": "Snippet for the patch call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#patch. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchRegionInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.Patch",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_PatchPerInstanceConfigs_sync",
      "title": "Snippet for the patch_per_instance_configs call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#patch_per_instance_configs. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/patch_per_instance_configs.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch_per_instance_configs",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#patch_per_instance_configs",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchPerInstanceConfigsRegionInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "PatchPerInstanceConfigs",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.PatchPerInstanceConfigs",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_RecreateInstances_sync",
      "title": "Snippet for the recreate_instances call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#recreate_instances. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/recreate_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "recreate_instances",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#recreate_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RecreateInstancesRegionInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "RecreateInstances",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.RecreateInstances",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_Resize_sync",
      "title": "Snippet for the resize call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#resize. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/resize.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "resize",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#resize",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ResizeRegionInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "Resize",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.Resize",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_SetInstanceTemplate_sync",
      "title": "Snippet for the set_instance_template call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#set_instance_template. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/set_instance_template.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_instance_template",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#set_instance_template",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetInstanceTemplateRegionInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "SetInstanceTemplate",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.SetInstanceTemplate",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_SetTargetPools_sync",
      "title": "Snippet for the set_target_pools call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#set_target_pools. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/set_target_pools.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_target_pools",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#set_target_pools",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetTargetPoolsRegionInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "SetTargetPools",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.SetTargetPools",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroupManagers_UpdatePerInstanceConfigs_sync",
      "title": "Snippet for the update_per_instance_configs call in the RegionInstanceGroupManagers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#update_per_instance_configs. It may require modification in order to execute successfully.",
      "file": "region_instance_group_managers/update_per_instance_configs.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update_per_instance_configs",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client#update_per_instance_configs",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdatePerInstanceConfigsRegionInstanceGroupManagerRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstanceGroupManagers::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroupManagers::Client"
        },
        "method": {
          "short_name": "UpdatePerInstanceConfigs",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers.UpdatePerInstanceConfigs",
          "service": {
            "short_name": "RegionInstanceGroupManagers",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroupManagers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroups_Get_sync",
      "title": "Snippet for the get call in the RegionInstanceGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroups::Client#get. It may require modification in order to execute successfully.",
      "file": "region_instance_groups/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroups::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionInstanceGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::InstanceGroup",
        "client": {
          "short_name": "RegionInstanceGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroups::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroups.Get",
          "service": {
            "short_name": "RegionInstanceGroups",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroups_List_sync",
      "title": "Snippet for the list call in the RegionInstanceGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroups::Client#list. It may require modification in order to execute successfully.",
      "file": "region_instance_groups/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroups::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionInstanceGroupsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::RegionInstanceGroupList",
        "client": {
          "short_name": "RegionInstanceGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroups::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroups.List",
          "service": {
            "short_name": "RegionInstanceGroups",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroups_ListInstances_sync",
      "title": "Snippet for the list_instances call in the RegionInstanceGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroups::Client#list_instances. It may require modification in order to execute successfully.",
      "file": "region_instance_groups/list_instances.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_instances",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroups::Client#list_instances",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListInstancesRegionInstanceGroupsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::RegionInstanceGroupsListInstances",
        "client": {
          "short_name": "RegionInstanceGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroups::Client"
        },
        "method": {
          "short_name": "ListInstances",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroups.ListInstances",
          "service": {
            "short_name": "RegionInstanceGroups",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstanceGroups_SetNamedPorts_sync",
      "title": "Snippet for the set_named_ports call in the RegionInstanceGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstanceGroups::Client#set_named_ports. It may require modification in order to execute successfully.",
      "file": "region_instance_groups/set_named_ports.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_named_ports",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroups::Client#set_named_ports",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetNamedPortsRegionInstanceGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstanceGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstanceGroups::Client"
        },
        "method": {
          "short_name": "SetNamedPorts",
          "full_name": "google.cloud.compute.v1.RegionInstanceGroups.SetNamedPorts",
          "service": {
            "short_name": "RegionInstanceGroups",
            "full_name": "google.cloud.compute.v1.RegionInstanceGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionInstances_BulkInsert_sync",
      "title": "Snippet for the bulk_insert call in the RegionInstances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionInstances::Client#bulk_insert. It may require modification in order to execute successfully.",
      "file": "region_instances/bulk_insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "bulk_insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionInstances::Client#bulk_insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::BulkInsertRegionInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionInstances::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionInstances::Client"
        },
        "method": {
          "short_name": "BulkInsert",
          "full_name": "google.cloud.compute.v1.RegionInstances.BulkInsert",
          "service": {
            "short_name": "RegionInstances",
            "full_name": "google.cloud.compute.v1.RegionInstances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkEndpointGroups_Delete_sync",
      "title": "Snippet for the delete call in the RegionNetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkEndpointGroups::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_network_endpoint_groups/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkEndpointGroups::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionNetworkEndpointGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionNetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionNetworkEndpointGroups.Delete",
          "service": {
            "short_name": "RegionNetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.RegionNetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkEndpointGroups_Get_sync",
      "title": "Snippet for the get call in the RegionNetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkEndpointGroups::Client#get. It may require modification in order to execute successfully.",
      "file": "region_network_endpoint_groups/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkEndpointGroups::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionNetworkEndpointGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworkEndpointGroup",
        "client": {
          "short_name": "RegionNetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionNetworkEndpointGroups.Get",
          "service": {
            "short_name": "RegionNetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.RegionNetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkEndpointGroups_Insert_sync",
      "title": "Snippet for the insert call in the RegionNetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkEndpointGroups::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_network_endpoint_groups/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkEndpointGroups::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionNetworkEndpointGroupRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionNetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionNetworkEndpointGroups.Insert",
          "service": {
            "short_name": "RegionNetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.RegionNetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkEndpointGroups_List_sync",
      "title": "Snippet for the list call in the RegionNetworkEndpointGroups service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkEndpointGroups::Client#list. It may require modification in order to execute successfully.",
      "file": "region_network_endpoint_groups/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkEndpointGroups::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionNetworkEndpointGroupsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NetworkEndpointGroupList",
        "client": {
          "short_name": "RegionNetworkEndpointGroups::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkEndpointGroups::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionNetworkEndpointGroups.List",
          "service": {
            "short_name": "RegionNetworkEndpointGroups",
            "full_name": "google.cloud.compute.v1.RegionNetworkEndpointGroups"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_AddAssociation_sync",
      "title": "Snippet for the add_association call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#add_association. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/add_association.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_association",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#add_association",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddAssociationRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "AddAssociation",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.AddAssociation",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_AddRule_sync",
      "title": "Snippet for the add_rule call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#add_rule. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/add_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_rule",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#add_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddRuleRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "AddRule",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.AddRule",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_CloneRules_sync",
      "title": "Snippet for the clone_rules call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#clone_rules. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/clone_rules.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "clone_rules",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#clone_rules",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::CloneRulesRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "CloneRules",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.CloneRules",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_Delete_sync",
      "title": "Snippet for the delete call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.Delete",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_Get_sync",
      "title": "Snippet for the get call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#get. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::FirewallPolicy",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.Get",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_GetAssociation_sync",
      "title": "Snippet for the get_association call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#get_association. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/get_association.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_association",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#get_association",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetAssociationRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::FirewallPolicyAssociation",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "GetAssociation",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.GetAssociation",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_GetEffectiveFirewalls_sync",
      "title": "Snippet for the get_effective_firewalls call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#get_effective_firewalls. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/get_effective_firewalls.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_effective_firewalls",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#get_effective_firewalls",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetEffectiveFirewallsRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponse",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "GetEffectiveFirewalls",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.GetEffectiveFirewalls",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.GetIamPolicy",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_GetRule_sync",
      "title": "Snippet for the get_rule call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#get_rule. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/get_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_rule",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#get_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRuleRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::FirewallPolicyRule",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "GetRule",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.GetRule",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_Insert_sync",
      "title": "Snippet for the insert call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.Insert",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_List_sync",
      "title": "Snippet for the list call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#list. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionNetworkFirewallPoliciesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::FirewallPolicyList",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.List",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_Patch_sync",
      "title": "Snippet for the patch call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#patch. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.Patch",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_PatchRule_sync",
      "title": "Snippet for the patch_rule call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#patch_rule. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/patch_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch_rule",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#patch_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchRuleRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "PatchRule",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.PatchRule",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_RemoveAssociation_sync",
      "title": "Snippet for the remove_association call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#remove_association. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/remove_association.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "remove_association",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#remove_association",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RemoveAssociationRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "RemoveAssociation",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.RemoveAssociation",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_RemoveRule_sync",
      "title": "Snippet for the remove_rule call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#remove_rule. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/remove_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "remove_rule",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#remove_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RemoveRuleRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "RemoveRule",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.RemoveRule",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.SetIamPolicy",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNetworkFirewallPolicies_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the RegionNetworkFirewallPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "region_network_firewall_policies/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsRegionNetworkFirewallPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "RegionNetworkFirewallPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNetworkFirewallPolicies::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies.TestIamPermissions",
          "service": {
            "short_name": "RegionNetworkFirewallPolicies",
            "full_name": "google.cloud.compute.v1.RegionNetworkFirewallPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNotificationEndpoints_Delete_sync",
      "title": "Snippet for the delete call in the RegionNotificationEndpoints service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNotificationEndpoints::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_notification_endpoints/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionNotificationEndpoints::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionNotificationEndpointRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionNotificationEndpoints::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNotificationEndpoints::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionNotificationEndpoints.Delete",
          "service": {
            "short_name": "RegionNotificationEndpoints",
            "full_name": "google.cloud.compute.v1.RegionNotificationEndpoints"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNotificationEndpoints_Get_sync",
      "title": "Snippet for the get call in the RegionNotificationEndpoints service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNotificationEndpoints::Client#get. It may require modification in order to execute successfully.",
      "file": "region_notification_endpoints/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionNotificationEndpoints::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionNotificationEndpointRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NotificationEndpoint",
        "client": {
          "short_name": "RegionNotificationEndpoints::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNotificationEndpoints::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionNotificationEndpoints.Get",
          "service": {
            "short_name": "RegionNotificationEndpoints",
            "full_name": "google.cloud.compute.v1.RegionNotificationEndpoints"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNotificationEndpoints_Insert_sync",
      "title": "Snippet for the insert call in the RegionNotificationEndpoints service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNotificationEndpoints::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_notification_endpoints/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionNotificationEndpoints::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionNotificationEndpointRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionNotificationEndpoints::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNotificationEndpoints::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionNotificationEndpoints.Insert",
          "service": {
            "short_name": "RegionNotificationEndpoints",
            "full_name": "google.cloud.compute.v1.RegionNotificationEndpoints"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionNotificationEndpoints_List_sync",
      "title": "Snippet for the list call in the RegionNotificationEndpoints service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionNotificationEndpoints::Client#list. It may require modification in order to execute successfully.",
      "file": "region_notification_endpoints/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionNotificationEndpoints::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionNotificationEndpointsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::NotificationEndpointList",
        "client": {
          "short_name": "RegionNotificationEndpoints::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionNotificationEndpoints::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionNotificationEndpoints.List",
          "service": {
            "short_name": "RegionNotificationEndpoints",
            "full_name": "google.cloud.compute.v1.RegionNotificationEndpoints"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionOperations_Delete_sync",
      "title": "Snippet for the delete call in the RegionOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionOperations::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_operations/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionOperations::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionOperationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::DeleteRegionOperationResponse",
        "client": {
          "short_name": "RegionOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionOperations::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionOperations.Delete",
          "service": {
            "short_name": "RegionOperations",
            "full_name": "google.cloud.compute.v1.RegionOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionOperations_Get_sync",
      "title": "Snippet for the get call in the RegionOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionOperations::Client#get. It may require modification in order to execute successfully.",
      "file": "region_operations/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionOperations::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionOperationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionOperations::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionOperations.Get",
          "service": {
            "short_name": "RegionOperations",
            "full_name": "google.cloud.compute.v1.RegionOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionOperations_List_sync",
      "title": "Snippet for the list call in the RegionOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionOperations::Client#list. It may require modification in order to execute successfully.",
      "file": "region_operations/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionOperations::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionOperationsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::OperationList",
        "client": {
          "short_name": "RegionOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionOperations::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionOperations.List",
          "service": {
            "short_name": "RegionOperations",
            "full_name": "google.cloud.compute.v1.RegionOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionOperations_Wait_sync",
      "title": "Snippet for the wait call in the RegionOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionOperations::Client#wait. It may require modification in order to execute successfully.",
      "file": "region_operations/wait.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "wait",
        "full_name": "::Google::Cloud::Compute::V1::RegionOperations::Client#wait",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::WaitRegionOperationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionOperations::Client"
        },
        "method": {
          "short_name": "Wait",
          "full_name": "google.cloud.compute.v1.RegionOperations.Wait",
          "service": {
            "short_name": "RegionOperations",
            "full_name": "google.cloud.compute.v1.RegionOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionSecurityPolicies_Delete_sync",
      "title": "Snippet for the delete call in the RegionSecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionSecurityPolicies::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_security_policies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionSecurityPolicies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionSecurityPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionSecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionSecurityPolicies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionSecurityPolicies.Delete",
          "service": {
            "short_name": "RegionSecurityPolicies",
            "full_name": "google.cloud.compute.v1.RegionSecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionSecurityPolicies_Get_sync",
      "title": "Snippet for the get call in the RegionSecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionSecurityPolicies::Client#get. It may require modification in order to execute successfully.",
      "file": "region_security_policies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionSecurityPolicies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionSecurityPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SecurityPolicy",
        "client": {
          "short_name": "RegionSecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionSecurityPolicies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionSecurityPolicies.Get",
          "service": {
            "short_name": "RegionSecurityPolicies",
            "full_name": "google.cloud.compute.v1.RegionSecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionSecurityPolicies_Insert_sync",
      "title": "Snippet for the insert call in the RegionSecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionSecurityPolicies::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_security_policies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionSecurityPolicies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionSecurityPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionSecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionSecurityPolicies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionSecurityPolicies.Insert",
          "service": {
            "short_name": "RegionSecurityPolicies",
            "full_name": "google.cloud.compute.v1.RegionSecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionSecurityPolicies_List_sync",
      "title": "Snippet for the list call in the RegionSecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionSecurityPolicies::Client#list. It may require modification in order to execute successfully.",
      "file": "region_security_policies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionSecurityPolicies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionSecurityPoliciesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SecurityPolicyList",
        "client": {
          "short_name": "RegionSecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionSecurityPolicies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionSecurityPolicies.List",
          "service": {
            "short_name": "RegionSecurityPolicies",
            "full_name": "google.cloud.compute.v1.RegionSecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionSecurityPolicies_Patch_sync",
      "title": "Snippet for the patch call in the RegionSecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionSecurityPolicies::Client#patch. It may require modification in order to execute successfully.",
      "file": "region_security_policies/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::RegionSecurityPolicies::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchRegionSecurityPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionSecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionSecurityPolicies::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.RegionSecurityPolicies.Patch",
          "service": {
            "short_name": "RegionSecurityPolicies",
            "full_name": "google.cloud.compute.v1.RegionSecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionSslCertificates_Delete_sync",
      "title": "Snippet for the delete call in the RegionSslCertificates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionSslCertificates::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_ssl_certificates/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionSslCertificates::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionSslCertificateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionSslCertificates::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionSslCertificates::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionSslCertificates.Delete",
          "service": {
            "short_name": "RegionSslCertificates",
            "full_name": "google.cloud.compute.v1.RegionSslCertificates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionSslCertificates_Get_sync",
      "title": "Snippet for the get call in the RegionSslCertificates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionSslCertificates::Client#get. It may require modification in order to execute successfully.",
      "file": "region_ssl_certificates/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionSslCertificates::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionSslCertificateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SslCertificate",
        "client": {
          "short_name": "RegionSslCertificates::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionSslCertificates::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionSslCertificates.Get",
          "service": {
            "short_name": "RegionSslCertificates",
            "full_name": "google.cloud.compute.v1.RegionSslCertificates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionSslCertificates_Insert_sync",
      "title": "Snippet for the insert call in the RegionSslCertificates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionSslCertificates::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_ssl_certificates/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionSslCertificates::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionSslCertificateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionSslCertificates::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionSslCertificates::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionSslCertificates.Insert",
          "service": {
            "short_name": "RegionSslCertificates",
            "full_name": "google.cloud.compute.v1.RegionSslCertificates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionSslCertificates_List_sync",
      "title": "Snippet for the list call in the RegionSslCertificates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionSslCertificates::Client#list. It may require modification in order to execute successfully.",
      "file": "region_ssl_certificates/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionSslCertificates::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionSslCertificatesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SslCertificateList",
        "client": {
          "short_name": "RegionSslCertificates::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionSslCertificates::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionSslCertificates.List",
          "service": {
            "short_name": "RegionSslCertificates",
            "full_name": "google.cloud.compute.v1.RegionSslCertificates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionSslPolicies_Delete_sync",
      "title": "Snippet for the delete call in the RegionSslPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionSslPolicies::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_ssl_policies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionSslPolicies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionSslPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionSslPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionSslPolicies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionSslPolicies.Delete",
          "service": {
            "short_name": "RegionSslPolicies",
            "full_name": "google.cloud.compute.v1.RegionSslPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionSslPolicies_Get_sync",
      "title": "Snippet for the get call in the RegionSslPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionSslPolicies::Client#get. It may require modification in order to execute successfully.",
      "file": "region_ssl_policies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionSslPolicies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionSslPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SslPolicy",
        "client": {
          "short_name": "RegionSslPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionSslPolicies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionSslPolicies.Get",
          "service": {
            "short_name": "RegionSslPolicies",
            "full_name": "google.cloud.compute.v1.RegionSslPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionSslPolicies_Insert_sync",
      "title": "Snippet for the insert call in the RegionSslPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionSslPolicies::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_ssl_policies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionSslPolicies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionSslPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionSslPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionSslPolicies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionSslPolicies.Insert",
          "service": {
            "short_name": "RegionSslPolicies",
            "full_name": "google.cloud.compute.v1.RegionSslPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionSslPolicies_List_sync",
      "title": "Snippet for the list call in the RegionSslPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionSslPolicies::Client#list. It may require modification in order to execute successfully.",
      "file": "region_ssl_policies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionSslPolicies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionSslPoliciesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SslPoliciesList",
        "client": {
          "short_name": "RegionSslPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionSslPolicies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionSslPolicies.List",
          "service": {
            "short_name": "RegionSslPolicies",
            "full_name": "google.cloud.compute.v1.RegionSslPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionSslPolicies_ListAvailableFeatures_sync",
      "title": "Snippet for the list_available_features call in the RegionSslPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionSslPolicies::Client#list_available_features. It may require modification in order to execute successfully.",
      "file": "region_ssl_policies/list_available_features.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_available_features",
        "full_name": "::Google::Cloud::Compute::V1::RegionSslPolicies::Client#list_available_features",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListAvailableFeaturesRegionSslPoliciesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SslPoliciesListAvailableFeaturesResponse",
        "client": {
          "short_name": "RegionSslPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionSslPolicies::Client"
        },
        "method": {
          "short_name": "ListAvailableFeatures",
          "full_name": "google.cloud.compute.v1.RegionSslPolicies.ListAvailableFeatures",
          "service": {
            "short_name": "RegionSslPolicies",
            "full_name": "google.cloud.compute.v1.RegionSslPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionSslPolicies_Patch_sync",
      "title": "Snippet for the patch call in the RegionSslPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionSslPolicies::Client#patch. It may require modification in order to execute successfully.",
      "file": "region_ssl_policies/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::RegionSslPolicies::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchRegionSslPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionSslPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionSslPolicies::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.RegionSslPolicies.Patch",
          "service": {
            "short_name": "RegionSslPolicies",
            "full_name": "google.cloud.compute.v1.RegionSslPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetHttpProxies_Delete_sync",
      "title": "Snippet for the delete call in the RegionTargetHttpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetHttpProxies::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_target_http_proxies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpProxies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionTargetHttpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionTargetHttpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpProxies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionTargetHttpProxies.Delete",
          "service": {
            "short_name": "RegionTargetHttpProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetHttpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetHttpProxies_Get_sync",
      "title": "Snippet for the get call in the RegionTargetHttpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetHttpProxies::Client#get. It may require modification in order to execute successfully.",
      "file": "region_target_http_proxies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpProxies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionTargetHttpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetHttpProxy",
        "client": {
          "short_name": "RegionTargetHttpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpProxies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionTargetHttpProxies.Get",
          "service": {
            "short_name": "RegionTargetHttpProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetHttpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetHttpProxies_Insert_sync",
      "title": "Snippet for the insert call in the RegionTargetHttpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetHttpProxies::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_target_http_proxies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpProxies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionTargetHttpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionTargetHttpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpProxies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionTargetHttpProxies.Insert",
          "service": {
            "short_name": "RegionTargetHttpProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetHttpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetHttpProxies_List_sync",
      "title": "Snippet for the list call in the RegionTargetHttpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetHttpProxies::Client#list. It may require modification in order to execute successfully.",
      "file": "region_target_http_proxies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpProxies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionTargetHttpProxiesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetHttpProxyList",
        "client": {
          "short_name": "RegionTargetHttpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpProxies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionTargetHttpProxies.List",
          "service": {
            "short_name": "RegionTargetHttpProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetHttpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetHttpProxies_SetUrlMap_sync",
      "title": "Snippet for the set_url_map call in the RegionTargetHttpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetHttpProxies::Client#set_url_map. It may require modification in order to execute successfully.",
      "file": "region_target_http_proxies/set_url_map.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_url_map",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpProxies::Client#set_url_map",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetUrlMapRegionTargetHttpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionTargetHttpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpProxies::Client"
        },
        "method": {
          "short_name": "SetUrlMap",
          "full_name": "google.cloud.compute.v1.RegionTargetHttpProxies.SetUrlMap",
          "service": {
            "short_name": "RegionTargetHttpProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetHttpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetHttpsProxies_Delete_sync",
      "title": "Snippet for the delete call in the RegionTargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_target_https_proxies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionTargetHttpsProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionTargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionTargetHttpsProxies.Delete",
          "service": {
            "short_name": "RegionTargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetHttpsProxies_Get_sync",
      "title": "Snippet for the get call in the RegionTargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client#get. It may require modification in order to execute successfully.",
      "file": "region_target_https_proxies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionTargetHttpsProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetHttpsProxy",
        "client": {
          "short_name": "RegionTargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionTargetHttpsProxies.Get",
          "service": {
            "short_name": "RegionTargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetHttpsProxies_Insert_sync",
      "title": "Snippet for the insert call in the RegionTargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_target_https_proxies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionTargetHttpsProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionTargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionTargetHttpsProxies.Insert",
          "service": {
            "short_name": "RegionTargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetHttpsProxies_List_sync",
      "title": "Snippet for the list call in the RegionTargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client#list. It may require modification in order to execute successfully.",
      "file": "region_target_https_proxies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionTargetHttpsProxiesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetHttpsProxyList",
        "client": {
          "short_name": "RegionTargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionTargetHttpsProxies.List",
          "service": {
            "short_name": "RegionTargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetHttpsProxies_Patch_sync",
      "title": "Snippet for the patch call in the RegionTargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client#patch. It may require modification in order to execute successfully.",
      "file": "region_target_https_proxies/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchRegionTargetHttpsProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionTargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.RegionTargetHttpsProxies.Patch",
          "service": {
            "short_name": "RegionTargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetHttpsProxies_SetSslCertificates_sync",
      "title": "Snippet for the set_ssl_certificates call in the RegionTargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client#set_ssl_certificates. It may require modification in order to execute successfully.",
      "file": "region_target_https_proxies/set_ssl_certificates.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_ssl_certificates",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client#set_ssl_certificates",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetSslCertificatesRegionTargetHttpsProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionTargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "SetSslCertificates",
          "full_name": "google.cloud.compute.v1.RegionTargetHttpsProxies.SetSslCertificates",
          "service": {
            "short_name": "RegionTargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetHttpsProxies_SetUrlMap_sync",
      "title": "Snippet for the set_url_map call in the RegionTargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client#set_url_map. It may require modification in order to execute successfully.",
      "file": "region_target_https_proxies/set_url_map.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_url_map",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client#set_url_map",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetUrlMapRegionTargetHttpsProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionTargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "SetUrlMap",
          "full_name": "google.cloud.compute.v1.RegionTargetHttpsProxies.SetUrlMap",
          "service": {
            "short_name": "RegionTargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetTcpProxies_Delete_sync",
      "title": "Snippet for the delete call in the RegionTargetTcpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetTcpProxies::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_target_tcp_proxies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetTcpProxies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionTargetTcpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionTargetTcpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetTcpProxies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionTargetTcpProxies.Delete",
          "service": {
            "short_name": "RegionTargetTcpProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetTcpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetTcpProxies_Get_sync",
      "title": "Snippet for the get call in the RegionTargetTcpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetTcpProxies::Client#get. It may require modification in order to execute successfully.",
      "file": "region_target_tcp_proxies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetTcpProxies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionTargetTcpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetTcpProxy",
        "client": {
          "short_name": "RegionTargetTcpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetTcpProxies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionTargetTcpProxies.Get",
          "service": {
            "short_name": "RegionTargetTcpProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetTcpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetTcpProxies_Insert_sync",
      "title": "Snippet for the insert call in the RegionTargetTcpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetTcpProxies::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_target_tcp_proxies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetTcpProxies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionTargetTcpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionTargetTcpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetTcpProxies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionTargetTcpProxies.Insert",
          "service": {
            "short_name": "RegionTargetTcpProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetTcpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionTargetTcpProxies_List_sync",
      "title": "Snippet for the list call in the RegionTargetTcpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionTargetTcpProxies::Client#list. It may require modification in order to execute successfully.",
      "file": "region_target_tcp_proxies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionTargetTcpProxies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionTargetTcpProxiesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetTcpProxyList",
        "client": {
          "short_name": "RegionTargetTcpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionTargetTcpProxies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionTargetTcpProxies.List",
          "service": {
            "short_name": "RegionTargetTcpProxies",
            "full_name": "google.cloud.compute.v1.RegionTargetTcpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionUrlMaps_Delete_sync",
      "title": "Snippet for the delete call in the RegionUrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionUrlMaps::Client#delete. It may require modification in order to execute successfully.",
      "file": "region_url_maps/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::RegionUrlMaps::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRegionUrlMapRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionUrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionUrlMaps::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.RegionUrlMaps.Delete",
          "service": {
            "short_name": "RegionUrlMaps",
            "full_name": "google.cloud.compute.v1.RegionUrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionUrlMaps_Get_sync",
      "title": "Snippet for the get call in the RegionUrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionUrlMaps::Client#get. It may require modification in order to execute successfully.",
      "file": "region_url_maps/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::RegionUrlMaps::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionUrlMapRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::UrlMap",
        "client": {
          "short_name": "RegionUrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionUrlMaps::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.RegionUrlMaps.Get",
          "service": {
            "short_name": "RegionUrlMaps",
            "full_name": "google.cloud.compute.v1.RegionUrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionUrlMaps_Insert_sync",
      "title": "Snippet for the insert call in the RegionUrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionUrlMaps::Client#insert. It may require modification in order to execute successfully.",
      "file": "region_url_maps/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::RegionUrlMaps::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRegionUrlMapRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionUrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionUrlMaps::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.RegionUrlMaps.Insert",
          "service": {
            "short_name": "RegionUrlMaps",
            "full_name": "google.cloud.compute.v1.RegionUrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionUrlMaps_List_sync",
      "title": "Snippet for the list call in the RegionUrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionUrlMaps::Client#list. It may require modification in order to execute successfully.",
      "file": "region_url_maps/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::RegionUrlMaps::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionUrlMapsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::UrlMapList",
        "client": {
          "short_name": "RegionUrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionUrlMaps::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.RegionUrlMaps.List",
          "service": {
            "short_name": "RegionUrlMaps",
            "full_name": "google.cloud.compute.v1.RegionUrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionUrlMaps_Patch_sync",
      "title": "Snippet for the patch call in the RegionUrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionUrlMaps::Client#patch. It may require modification in order to execute successfully.",
      "file": "region_url_maps/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::RegionUrlMaps::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchRegionUrlMapRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionUrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionUrlMaps::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.RegionUrlMaps.Patch",
          "service": {
            "short_name": "RegionUrlMaps",
            "full_name": "google.cloud.compute.v1.RegionUrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionUrlMaps_Update_sync",
      "title": "Snippet for the update call in the RegionUrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionUrlMaps::Client#update. It may require modification in order to execute successfully.",
      "file": "region_url_maps/update.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update",
        "full_name": "::Google::Cloud::Compute::V1::RegionUrlMaps::Client#update",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateRegionUrlMapRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "RegionUrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionUrlMaps::Client"
        },
        "method": {
          "short_name": "Update",
          "full_name": "google.cloud.compute.v1.RegionUrlMaps.Update",
          "service": {
            "short_name": "RegionUrlMaps",
            "full_name": "google.cloud.compute.v1.RegionUrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_RegionUrlMaps_Validate_sync",
      "title": "Snippet for the validate call in the RegionUrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::RegionUrlMaps::Client#validate. It may require modification in order to execute successfully.",
      "file": "region_url_maps/validate.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "validate",
        "full_name": "::Google::Cloud::Compute::V1::RegionUrlMaps::Client#validate",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ValidateRegionUrlMapRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::UrlMapsValidateResponse",
        "client": {
          "short_name": "RegionUrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::RegionUrlMaps::Client"
        },
        "method": {
          "short_name": "Validate",
          "full_name": "google.cloud.compute.v1.RegionUrlMaps.Validate",
          "service": {
            "short_name": "RegionUrlMaps",
            "full_name": "google.cloud.compute.v1.RegionUrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Regions_Get_sync",
      "title": "Snippet for the get call in the Regions service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Regions::Client#get. It may require modification in order to execute successfully.",
      "file": "regions/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Regions::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRegionRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Region",
        "client": {
          "short_name": "Regions::Client",
          "full_name": "::Google::Cloud::Compute::V1::Regions::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Regions.Get",
          "service": {
            "short_name": "Regions",
            "full_name": "google.cloud.compute.v1.Regions"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Regions_List_sync",
      "title": "Snippet for the list call in the Regions service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Regions::Client#list. It may require modification in order to execute successfully.",
      "file": "regions/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Regions::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRegionsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::RegionList",
        "client": {
          "short_name": "Regions::Client",
          "full_name": "::Google::Cloud::Compute::V1::Regions::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Regions.List",
          "service": {
            "short_name": "Regions",
            "full_name": "google.cloud.compute.v1.Regions"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Reservations_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the Reservations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Reservations::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "reservations/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::Reservations::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListReservationsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ReservationAggregatedList",
        "client": {
          "short_name": "Reservations::Client",
          "full_name": "::Google::Cloud::Compute::V1::Reservations::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.Reservations.AggregatedList",
          "service": {
            "short_name": "Reservations",
            "full_name": "google.cloud.compute.v1.Reservations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Reservations_Delete_sync",
      "title": "Snippet for the delete call in the Reservations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Reservations::Client#delete. It may require modification in order to execute successfully.",
      "file": "reservations/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::Reservations::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteReservationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Reservations::Client",
          "full_name": "::Google::Cloud::Compute::V1::Reservations::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.Reservations.Delete",
          "service": {
            "short_name": "Reservations",
            "full_name": "google.cloud.compute.v1.Reservations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Reservations_Get_sync",
      "title": "Snippet for the get call in the Reservations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Reservations::Client#get. It may require modification in order to execute successfully.",
      "file": "reservations/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Reservations::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetReservationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Reservation",
        "client": {
          "short_name": "Reservations::Client",
          "full_name": "::Google::Cloud::Compute::V1::Reservations::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Reservations.Get",
          "service": {
            "short_name": "Reservations",
            "full_name": "google.cloud.compute.v1.Reservations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Reservations_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the Reservations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Reservations::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "reservations/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::Reservations::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyReservationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "Reservations::Client",
          "full_name": "::Google::Cloud::Compute::V1::Reservations::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.Reservations.GetIamPolicy",
          "service": {
            "short_name": "Reservations",
            "full_name": "google.cloud.compute.v1.Reservations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Reservations_Insert_sync",
      "title": "Snippet for the insert call in the Reservations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Reservations::Client#insert. It may require modification in order to execute successfully.",
      "file": "reservations/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::Reservations::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertReservationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Reservations::Client",
          "full_name": "::Google::Cloud::Compute::V1::Reservations::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.Reservations.Insert",
          "service": {
            "short_name": "Reservations",
            "full_name": "google.cloud.compute.v1.Reservations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Reservations_List_sync",
      "title": "Snippet for the list call in the Reservations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Reservations::Client#list. It may require modification in order to execute successfully.",
      "file": "reservations/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Reservations::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListReservationsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ReservationList",
        "client": {
          "short_name": "Reservations::Client",
          "full_name": "::Google::Cloud::Compute::V1::Reservations::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Reservations.List",
          "service": {
            "short_name": "Reservations",
            "full_name": "google.cloud.compute.v1.Reservations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Reservations_Resize_sync",
      "title": "Snippet for the resize call in the Reservations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Reservations::Client#resize. It may require modification in order to execute successfully.",
      "file": "reservations/resize.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "resize",
        "full_name": "::Google::Cloud::Compute::V1::Reservations::Client#resize",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ResizeReservationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Reservations::Client",
          "full_name": "::Google::Cloud::Compute::V1::Reservations::Client"
        },
        "method": {
          "short_name": "Resize",
          "full_name": "google.cloud.compute.v1.Reservations.Resize",
          "service": {
            "short_name": "Reservations",
            "full_name": "google.cloud.compute.v1.Reservations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Reservations_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the Reservations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Reservations::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "reservations/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::Reservations::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyReservationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "Reservations::Client",
          "full_name": "::Google::Cloud::Compute::V1::Reservations::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.Reservations.SetIamPolicy",
          "service": {
            "short_name": "Reservations",
            "full_name": "google.cloud.compute.v1.Reservations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Reservations_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the Reservations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Reservations::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "reservations/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::Reservations::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsReservationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "Reservations::Client",
          "full_name": "::Google::Cloud::Compute::V1::Reservations::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.Reservations.TestIamPermissions",
          "service": {
            "short_name": "Reservations",
            "full_name": "google.cloud.compute.v1.Reservations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Reservations_Update_sync",
      "title": "Snippet for the update call in the Reservations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Reservations::Client#update. It may require modification in order to execute successfully.",
      "file": "reservations/update.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update",
        "full_name": "::Google::Cloud::Compute::V1::Reservations::Client#update",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateReservationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Reservations::Client",
          "full_name": "::Google::Cloud::Compute::V1::Reservations::Client"
        },
        "method": {
          "short_name": "Update",
          "full_name": "google.cloud.compute.v1.Reservations.Update",
          "service": {
            "short_name": "Reservations",
            "full_name": "google.cloud.compute.v1.Reservations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ResourcePolicies_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the ResourcePolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ResourcePolicies::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "resource_policies/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListResourcePoliciesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ResourcePolicyAggregatedList",
        "client": {
          "short_name": "ResourcePolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.ResourcePolicies.AggregatedList",
          "service": {
            "short_name": "ResourcePolicies",
            "full_name": "google.cloud.compute.v1.ResourcePolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ResourcePolicies_Delete_sync",
      "title": "Snippet for the delete call in the ResourcePolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ResourcePolicies::Client#delete. It may require modification in order to execute successfully.",
      "file": "resource_policies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteResourcePolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "ResourcePolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.ResourcePolicies.Delete",
          "service": {
            "short_name": "ResourcePolicies",
            "full_name": "google.cloud.compute.v1.ResourcePolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ResourcePolicies_Get_sync",
      "title": "Snippet for the get call in the ResourcePolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ResourcePolicies::Client#get. It may require modification in order to execute successfully.",
      "file": "resource_policies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetResourcePolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ResourcePolicy",
        "client": {
          "short_name": "ResourcePolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.ResourcePolicies.Get",
          "service": {
            "short_name": "ResourcePolicies",
            "full_name": "google.cloud.compute.v1.ResourcePolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ResourcePolicies_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the ResourcePolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ResourcePolicies::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "resource_policies/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyResourcePolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "ResourcePolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.ResourcePolicies.GetIamPolicy",
          "service": {
            "short_name": "ResourcePolicies",
            "full_name": "google.cloud.compute.v1.ResourcePolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ResourcePolicies_Insert_sync",
      "title": "Snippet for the insert call in the ResourcePolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ResourcePolicies::Client#insert. It may require modification in order to execute successfully.",
      "file": "resource_policies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertResourcePolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "ResourcePolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.ResourcePolicies.Insert",
          "service": {
            "short_name": "ResourcePolicies",
            "full_name": "google.cloud.compute.v1.ResourcePolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ResourcePolicies_List_sync",
      "title": "Snippet for the list call in the ResourcePolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ResourcePolicies::Client#list. It may require modification in order to execute successfully.",
      "file": "resource_policies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListResourcePoliciesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ResourcePolicyList",
        "client": {
          "short_name": "ResourcePolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.ResourcePolicies.List",
          "service": {
            "short_name": "ResourcePolicies",
            "full_name": "google.cloud.compute.v1.ResourcePolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ResourcePolicies_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the ResourcePolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ResourcePolicies::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "resource_policies/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyResourcePolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "ResourcePolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.ResourcePolicies.SetIamPolicy",
          "service": {
            "short_name": "ResourcePolicies",
            "full_name": "google.cloud.compute.v1.ResourcePolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ResourcePolicies_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the ResourcePolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ResourcePolicies::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "resource_policies/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsResourcePolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "ResourcePolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::ResourcePolicies::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.ResourcePolicies.TestIamPermissions",
          "service": {
            "short_name": "ResourcePolicies",
            "full_name": "google.cloud.compute.v1.ResourcePolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Routers_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the Routers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Routers::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "routers/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::Routers::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListRoutersRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::RouterAggregatedList",
        "client": {
          "short_name": "Routers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Routers::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.Routers.AggregatedList",
          "service": {
            "short_name": "Routers",
            "full_name": "google.cloud.compute.v1.Routers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Routers_Delete_sync",
      "title": "Snippet for the delete call in the Routers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Routers::Client#delete. It may require modification in order to execute successfully.",
      "file": "routers/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::Routers::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRouterRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Routers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Routers::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.Routers.Delete",
          "service": {
            "short_name": "Routers",
            "full_name": "google.cloud.compute.v1.Routers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Routers_Get_sync",
      "title": "Snippet for the get call in the Routers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Routers::Client#get. It may require modification in order to execute successfully.",
      "file": "routers/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Routers::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRouterRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Router",
        "client": {
          "short_name": "Routers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Routers::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Routers.Get",
          "service": {
            "short_name": "Routers",
            "full_name": "google.cloud.compute.v1.Routers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Routers_GetNatMappingInfo_sync",
      "title": "Snippet for the get_nat_mapping_info call in the Routers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Routers::Client#get_nat_mapping_info. It may require modification in order to execute successfully.",
      "file": "routers/get_nat_mapping_info.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_nat_mapping_info",
        "full_name": "::Google::Cloud::Compute::V1::Routers::Client#get_nat_mapping_info",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetNatMappingInfoRoutersRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::VmEndpointNatMappingsList",
        "client": {
          "short_name": "Routers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Routers::Client"
        },
        "method": {
          "short_name": "GetNatMappingInfo",
          "full_name": "google.cloud.compute.v1.Routers.GetNatMappingInfo",
          "service": {
            "short_name": "Routers",
            "full_name": "google.cloud.compute.v1.Routers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Routers_GetRouterStatus_sync",
      "title": "Snippet for the get_router_status call in the Routers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Routers::Client#get_router_status. It may require modification in order to execute successfully.",
      "file": "routers/get_router_status.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_router_status",
        "full_name": "::Google::Cloud::Compute::V1::Routers::Client#get_router_status",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRouterStatusRouterRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::RouterStatusResponse",
        "client": {
          "short_name": "Routers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Routers::Client"
        },
        "method": {
          "short_name": "GetRouterStatus",
          "full_name": "google.cloud.compute.v1.Routers.GetRouterStatus",
          "service": {
            "short_name": "Routers",
            "full_name": "google.cloud.compute.v1.Routers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Routers_Insert_sync",
      "title": "Snippet for the insert call in the Routers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Routers::Client#insert. It may require modification in order to execute successfully.",
      "file": "routers/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::Routers::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRouterRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Routers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Routers::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.Routers.Insert",
          "service": {
            "short_name": "Routers",
            "full_name": "google.cloud.compute.v1.Routers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Routers_List_sync",
      "title": "Snippet for the list call in the Routers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Routers::Client#list. It may require modification in order to execute successfully.",
      "file": "routers/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Routers::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRoutersRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::RouterList",
        "client": {
          "short_name": "Routers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Routers::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Routers.List",
          "service": {
            "short_name": "Routers",
            "full_name": "google.cloud.compute.v1.Routers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Routers_Patch_sync",
      "title": "Snippet for the patch call in the Routers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Routers::Client#patch. It may require modification in order to execute successfully.",
      "file": "routers/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::Routers::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchRouterRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Routers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Routers::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.Routers.Patch",
          "service": {
            "short_name": "Routers",
            "full_name": "google.cloud.compute.v1.Routers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Routers_Preview_sync",
      "title": "Snippet for the preview call in the Routers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Routers::Client#preview. It may require modification in order to execute successfully.",
      "file": "routers/preview.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "preview",
        "full_name": "::Google::Cloud::Compute::V1::Routers::Client#preview",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PreviewRouterRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::RoutersPreviewResponse",
        "client": {
          "short_name": "Routers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Routers::Client"
        },
        "method": {
          "short_name": "Preview",
          "full_name": "google.cloud.compute.v1.Routers.Preview",
          "service": {
            "short_name": "Routers",
            "full_name": "google.cloud.compute.v1.Routers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Routers_Update_sync",
      "title": "Snippet for the update call in the Routers service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Routers::Client#update. It may require modification in order to execute successfully.",
      "file": "routers/update.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update",
        "full_name": "::Google::Cloud::Compute::V1::Routers::Client#update",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateRouterRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Routers::Client",
          "full_name": "::Google::Cloud::Compute::V1::Routers::Client"
        },
        "method": {
          "short_name": "Update",
          "full_name": "google.cloud.compute.v1.Routers.Update",
          "service": {
            "short_name": "Routers",
            "full_name": "google.cloud.compute.v1.Routers"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Routes_Delete_sync",
      "title": "Snippet for the delete call in the Routes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Routes::Client#delete. It may require modification in order to execute successfully.",
      "file": "routes/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::Routes::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteRouteRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Routes::Client",
          "full_name": "::Google::Cloud::Compute::V1::Routes::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.Routes.Delete",
          "service": {
            "short_name": "Routes",
            "full_name": "google.cloud.compute.v1.Routes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Routes_Get_sync",
      "title": "Snippet for the get call in the Routes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Routes::Client#get. It may require modification in order to execute successfully.",
      "file": "routes/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Routes::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRouteRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Route",
        "client": {
          "short_name": "Routes::Client",
          "full_name": "::Google::Cloud::Compute::V1::Routes::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Routes.Get",
          "service": {
            "short_name": "Routes",
            "full_name": "google.cloud.compute.v1.Routes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Routes_Insert_sync",
      "title": "Snippet for the insert call in the Routes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Routes::Client#insert. It may require modification in order to execute successfully.",
      "file": "routes/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::Routes::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertRouteRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Routes::Client",
          "full_name": "::Google::Cloud::Compute::V1::Routes::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.Routes.Insert",
          "service": {
            "short_name": "Routes",
            "full_name": "google.cloud.compute.v1.Routes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Routes_List_sync",
      "title": "Snippet for the list call in the Routes service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Routes::Client#list. It may require modification in order to execute successfully.",
      "file": "routes/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Routes::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListRoutesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::RouteList",
        "client": {
          "short_name": "Routes::Client",
          "full_name": "::Google::Cloud::Compute::V1::Routes::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Routes.List",
          "service": {
            "short_name": "Routes",
            "full_name": "google.cloud.compute.v1.Routes"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SecurityPolicies_AddRule_sync",
      "title": "Snippet for the add_rule call in the SecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SecurityPolicies::Client#add_rule. It may require modification in order to execute successfully.",
      "file": "security_policies/add_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_rule",
        "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client#add_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddRuleSecurityPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "SecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client"
        },
        "method": {
          "short_name": "AddRule",
          "full_name": "google.cloud.compute.v1.SecurityPolicies.AddRule",
          "service": {
            "short_name": "SecurityPolicies",
            "full_name": "google.cloud.compute.v1.SecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SecurityPolicies_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the SecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SecurityPolicies::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "security_policies/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListSecurityPoliciesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SecurityPoliciesAggregatedList",
        "client": {
          "short_name": "SecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.SecurityPolicies.AggregatedList",
          "service": {
            "short_name": "SecurityPolicies",
            "full_name": "google.cloud.compute.v1.SecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SecurityPolicies_Delete_sync",
      "title": "Snippet for the delete call in the SecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SecurityPolicies::Client#delete. It may require modification in order to execute successfully.",
      "file": "security_policies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteSecurityPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "SecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.SecurityPolicies.Delete",
          "service": {
            "short_name": "SecurityPolicies",
            "full_name": "google.cloud.compute.v1.SecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SecurityPolicies_Get_sync",
      "title": "Snippet for the get call in the SecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SecurityPolicies::Client#get. It may require modification in order to execute successfully.",
      "file": "security_policies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetSecurityPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SecurityPolicy",
        "client": {
          "short_name": "SecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.SecurityPolicies.Get",
          "service": {
            "short_name": "SecurityPolicies",
            "full_name": "google.cloud.compute.v1.SecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SecurityPolicies_GetRule_sync",
      "title": "Snippet for the get_rule call in the SecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SecurityPolicies::Client#get_rule. It may require modification in order to execute successfully.",
      "file": "security_policies/get_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_rule",
        "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client#get_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetRuleSecurityPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SecurityPolicyRule",
        "client": {
          "short_name": "SecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client"
        },
        "method": {
          "short_name": "GetRule",
          "full_name": "google.cloud.compute.v1.SecurityPolicies.GetRule",
          "service": {
            "short_name": "SecurityPolicies",
            "full_name": "google.cloud.compute.v1.SecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SecurityPolicies_Insert_sync",
      "title": "Snippet for the insert call in the SecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SecurityPolicies::Client#insert. It may require modification in order to execute successfully.",
      "file": "security_policies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertSecurityPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "SecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.SecurityPolicies.Insert",
          "service": {
            "short_name": "SecurityPolicies",
            "full_name": "google.cloud.compute.v1.SecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SecurityPolicies_List_sync",
      "title": "Snippet for the list call in the SecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SecurityPolicies::Client#list. It may require modification in order to execute successfully.",
      "file": "security_policies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListSecurityPoliciesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SecurityPolicyList",
        "client": {
          "short_name": "SecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.SecurityPolicies.List",
          "service": {
            "short_name": "SecurityPolicies",
            "full_name": "google.cloud.compute.v1.SecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SecurityPolicies_ListPreconfiguredExpressionSets_sync",
      "title": "Snippet for the list_preconfigured_expression_sets call in the SecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SecurityPolicies::Client#list_preconfigured_expression_sets. It may require modification in order to execute successfully.",
      "file": "security_policies/list_preconfigured_expression_sets.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_preconfigured_expression_sets",
        "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client#list_preconfigured_expression_sets",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListPreconfiguredExpressionSetsSecurityPoliciesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SecurityPoliciesListPreconfiguredExpressionSetsResponse",
        "client": {
          "short_name": "SecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client"
        },
        "method": {
          "short_name": "ListPreconfiguredExpressionSets",
          "full_name": "google.cloud.compute.v1.SecurityPolicies.ListPreconfiguredExpressionSets",
          "service": {
            "short_name": "SecurityPolicies",
            "full_name": "google.cloud.compute.v1.SecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SecurityPolicies_Patch_sync",
      "title": "Snippet for the patch call in the SecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SecurityPolicies::Client#patch. It may require modification in order to execute successfully.",
      "file": "security_policies/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchSecurityPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "SecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.SecurityPolicies.Patch",
          "service": {
            "short_name": "SecurityPolicies",
            "full_name": "google.cloud.compute.v1.SecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SecurityPolicies_PatchRule_sync",
      "title": "Snippet for the patch_rule call in the SecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SecurityPolicies::Client#patch_rule. It may require modification in order to execute successfully.",
      "file": "security_policies/patch_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch_rule",
        "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client#patch_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchRuleSecurityPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "SecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client"
        },
        "method": {
          "short_name": "PatchRule",
          "full_name": "google.cloud.compute.v1.SecurityPolicies.PatchRule",
          "service": {
            "short_name": "SecurityPolicies",
            "full_name": "google.cloud.compute.v1.SecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SecurityPolicies_RemoveRule_sync",
      "title": "Snippet for the remove_rule call in the SecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SecurityPolicies::Client#remove_rule. It may require modification in order to execute successfully.",
      "file": "security_policies/remove_rule.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "remove_rule",
        "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client#remove_rule",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RemoveRuleSecurityPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "SecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client"
        },
        "method": {
          "short_name": "RemoveRule",
          "full_name": "google.cloud.compute.v1.SecurityPolicies.RemoveRule",
          "service": {
            "short_name": "SecurityPolicies",
            "full_name": "google.cloud.compute.v1.SecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SecurityPolicies_SetLabels_sync",
      "title": "Snippet for the set_labels call in the SecurityPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SecurityPolicies::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "security_policies/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsSecurityPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "SecurityPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SecurityPolicies::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.SecurityPolicies.SetLabels",
          "service": {
            "short_name": "SecurityPolicies",
            "full_name": "google.cloud.compute.v1.SecurityPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ServiceAttachments_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the ServiceAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ServiceAttachments::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "service_attachments/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListServiceAttachmentsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ServiceAttachmentAggregatedList",
        "client": {
          "short_name": "ServiceAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.ServiceAttachments.AggregatedList",
          "service": {
            "short_name": "ServiceAttachments",
            "full_name": "google.cloud.compute.v1.ServiceAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ServiceAttachments_Delete_sync",
      "title": "Snippet for the delete call in the ServiceAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ServiceAttachments::Client#delete. It may require modification in order to execute successfully.",
      "file": "service_attachments/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteServiceAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "ServiceAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.ServiceAttachments.Delete",
          "service": {
            "short_name": "ServiceAttachments",
            "full_name": "google.cloud.compute.v1.ServiceAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ServiceAttachments_Get_sync",
      "title": "Snippet for the get call in the ServiceAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ServiceAttachments::Client#get. It may require modification in order to execute successfully.",
      "file": "service_attachments/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetServiceAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ServiceAttachment",
        "client": {
          "short_name": "ServiceAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.ServiceAttachments.Get",
          "service": {
            "short_name": "ServiceAttachments",
            "full_name": "google.cloud.compute.v1.ServiceAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ServiceAttachments_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the ServiceAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ServiceAttachments::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "service_attachments/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicyServiceAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "ServiceAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.ServiceAttachments.GetIamPolicy",
          "service": {
            "short_name": "ServiceAttachments",
            "full_name": "google.cloud.compute.v1.ServiceAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ServiceAttachments_Insert_sync",
      "title": "Snippet for the insert call in the ServiceAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ServiceAttachments::Client#insert. It may require modification in order to execute successfully.",
      "file": "service_attachments/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertServiceAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "ServiceAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.ServiceAttachments.Insert",
          "service": {
            "short_name": "ServiceAttachments",
            "full_name": "google.cloud.compute.v1.ServiceAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ServiceAttachments_List_sync",
      "title": "Snippet for the list call in the ServiceAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ServiceAttachments::Client#list. It may require modification in order to execute successfully.",
      "file": "service_attachments/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListServiceAttachmentsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ServiceAttachmentList",
        "client": {
          "short_name": "ServiceAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.ServiceAttachments.List",
          "service": {
            "short_name": "ServiceAttachments",
            "full_name": "google.cloud.compute.v1.ServiceAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ServiceAttachments_Patch_sync",
      "title": "Snippet for the patch call in the ServiceAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ServiceAttachments::Client#patch. It may require modification in order to execute successfully.",
      "file": "service_attachments/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchServiceAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "ServiceAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.ServiceAttachments.Patch",
          "service": {
            "short_name": "ServiceAttachments",
            "full_name": "google.cloud.compute.v1.ServiceAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ServiceAttachments_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the ServiceAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ServiceAttachments::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "service_attachments/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicyServiceAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "ServiceAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.ServiceAttachments.SetIamPolicy",
          "service": {
            "short_name": "ServiceAttachments",
            "full_name": "google.cloud.compute.v1.ServiceAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ServiceAttachments_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the ServiceAttachments service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ServiceAttachments::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "service_attachments/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsServiceAttachmentRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "ServiceAttachments::Client",
          "full_name": "::Google::Cloud::Compute::V1::ServiceAttachments::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.ServiceAttachments.TestIamPermissions",
          "service": {
            "short_name": "ServiceAttachments",
            "full_name": "google.cloud.compute.v1.ServiceAttachments"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Snapshots_Delete_sync",
      "title": "Snippet for the delete call in the Snapshots service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Snapshots::Client#delete. It may require modification in order to execute successfully.",
      "file": "snapshots/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteSnapshotRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Snapshots::Client",
          "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.Snapshots.Delete",
          "service": {
            "short_name": "Snapshots",
            "full_name": "google.cloud.compute.v1.Snapshots"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Snapshots_Get_sync",
      "title": "Snippet for the get call in the Snapshots service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Snapshots::Client#get. It may require modification in order to execute successfully.",
      "file": "snapshots/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetSnapshotRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Snapshot",
        "client": {
          "short_name": "Snapshots::Client",
          "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Snapshots.Get",
          "service": {
            "short_name": "Snapshots",
            "full_name": "google.cloud.compute.v1.Snapshots"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Snapshots_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the Snapshots service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Snapshots::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "snapshots/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicySnapshotRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "Snapshots::Client",
          "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.Snapshots.GetIamPolicy",
          "service": {
            "short_name": "Snapshots",
            "full_name": "google.cloud.compute.v1.Snapshots"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Snapshots_Insert_sync",
      "title": "Snippet for the insert call in the Snapshots service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Snapshots::Client#insert. It may require modification in order to execute successfully.",
      "file": "snapshots/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertSnapshotRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Snapshots::Client",
          "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.Snapshots.Insert",
          "service": {
            "short_name": "Snapshots",
            "full_name": "google.cloud.compute.v1.Snapshots"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Snapshots_List_sync",
      "title": "Snippet for the list call in the Snapshots service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Snapshots::Client#list. It may require modification in order to execute successfully.",
      "file": "snapshots/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListSnapshotsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SnapshotList",
        "client": {
          "short_name": "Snapshots::Client",
          "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Snapshots.List",
          "service": {
            "short_name": "Snapshots",
            "full_name": "google.cloud.compute.v1.Snapshots"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Snapshots_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the Snapshots service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Snapshots::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "snapshots/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicySnapshotRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "Snapshots::Client",
          "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.Snapshots.SetIamPolicy",
          "service": {
            "short_name": "Snapshots",
            "full_name": "google.cloud.compute.v1.Snapshots"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Snapshots_SetLabels_sync",
      "title": "Snippet for the set_labels call in the Snapshots service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Snapshots::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "snapshots/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsSnapshotRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Snapshots::Client",
          "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.Snapshots.SetLabels",
          "service": {
            "short_name": "Snapshots",
            "full_name": "google.cloud.compute.v1.Snapshots"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Snapshots_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the Snapshots service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Snapshots::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "snapshots/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsSnapshotRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "Snapshots::Client",
          "full_name": "::Google::Cloud::Compute::V1::Snapshots::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.Snapshots.TestIamPermissions",
          "service": {
            "short_name": "Snapshots",
            "full_name": "google.cloud.compute.v1.Snapshots"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SslCertificates_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the SslCertificates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SslCertificates::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "ssl_certificates/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::SslCertificates::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListSslCertificatesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SslCertificateAggregatedList",
        "client": {
          "short_name": "SslCertificates::Client",
          "full_name": "::Google::Cloud::Compute::V1::SslCertificates::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.SslCertificates.AggregatedList",
          "service": {
            "short_name": "SslCertificates",
            "full_name": "google.cloud.compute.v1.SslCertificates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SslCertificates_Delete_sync",
      "title": "Snippet for the delete call in the SslCertificates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SslCertificates::Client#delete. It may require modification in order to execute successfully.",
      "file": "ssl_certificates/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::SslCertificates::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteSslCertificateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "SslCertificates::Client",
          "full_name": "::Google::Cloud::Compute::V1::SslCertificates::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.SslCertificates.Delete",
          "service": {
            "short_name": "SslCertificates",
            "full_name": "google.cloud.compute.v1.SslCertificates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SslCertificates_Get_sync",
      "title": "Snippet for the get call in the SslCertificates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SslCertificates::Client#get. It may require modification in order to execute successfully.",
      "file": "ssl_certificates/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::SslCertificates::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetSslCertificateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SslCertificate",
        "client": {
          "short_name": "SslCertificates::Client",
          "full_name": "::Google::Cloud::Compute::V1::SslCertificates::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.SslCertificates.Get",
          "service": {
            "short_name": "SslCertificates",
            "full_name": "google.cloud.compute.v1.SslCertificates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SslCertificates_Insert_sync",
      "title": "Snippet for the insert call in the SslCertificates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SslCertificates::Client#insert. It may require modification in order to execute successfully.",
      "file": "ssl_certificates/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::SslCertificates::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertSslCertificateRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "SslCertificates::Client",
          "full_name": "::Google::Cloud::Compute::V1::SslCertificates::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.SslCertificates.Insert",
          "service": {
            "short_name": "SslCertificates",
            "full_name": "google.cloud.compute.v1.SslCertificates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SslCertificates_List_sync",
      "title": "Snippet for the list call in the SslCertificates service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SslCertificates::Client#list. It may require modification in order to execute successfully.",
      "file": "ssl_certificates/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::SslCertificates::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListSslCertificatesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SslCertificateList",
        "client": {
          "short_name": "SslCertificates::Client",
          "full_name": "::Google::Cloud::Compute::V1::SslCertificates::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.SslCertificates.List",
          "service": {
            "short_name": "SslCertificates",
            "full_name": "google.cloud.compute.v1.SslCertificates"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SslPolicies_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the SslPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SslPolicies::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "ssl_policies/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::SslPolicies::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListSslPoliciesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SslPoliciesAggregatedList",
        "client": {
          "short_name": "SslPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SslPolicies::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.SslPolicies.AggregatedList",
          "service": {
            "short_name": "SslPolicies",
            "full_name": "google.cloud.compute.v1.SslPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SslPolicies_Delete_sync",
      "title": "Snippet for the delete call in the SslPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SslPolicies::Client#delete. It may require modification in order to execute successfully.",
      "file": "ssl_policies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::SslPolicies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteSslPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "SslPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SslPolicies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.SslPolicies.Delete",
          "service": {
            "short_name": "SslPolicies",
            "full_name": "google.cloud.compute.v1.SslPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SslPolicies_Get_sync",
      "title": "Snippet for the get call in the SslPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SslPolicies::Client#get. It may require modification in order to execute successfully.",
      "file": "ssl_policies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::SslPolicies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetSslPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SslPolicy",
        "client": {
          "short_name": "SslPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SslPolicies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.SslPolicies.Get",
          "service": {
            "short_name": "SslPolicies",
            "full_name": "google.cloud.compute.v1.SslPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SslPolicies_Insert_sync",
      "title": "Snippet for the insert call in the SslPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SslPolicies::Client#insert. It may require modification in order to execute successfully.",
      "file": "ssl_policies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::SslPolicies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertSslPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "SslPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SslPolicies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.SslPolicies.Insert",
          "service": {
            "short_name": "SslPolicies",
            "full_name": "google.cloud.compute.v1.SslPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SslPolicies_List_sync",
      "title": "Snippet for the list call in the SslPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SslPolicies::Client#list. It may require modification in order to execute successfully.",
      "file": "ssl_policies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::SslPolicies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListSslPoliciesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SslPoliciesList",
        "client": {
          "short_name": "SslPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SslPolicies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.SslPolicies.List",
          "service": {
            "short_name": "SslPolicies",
            "full_name": "google.cloud.compute.v1.SslPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SslPolicies_ListAvailableFeatures_sync",
      "title": "Snippet for the list_available_features call in the SslPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SslPolicies::Client#list_available_features. It may require modification in order to execute successfully.",
      "file": "ssl_policies/list_available_features.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_available_features",
        "full_name": "::Google::Cloud::Compute::V1::SslPolicies::Client#list_available_features",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListAvailableFeaturesSslPoliciesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SslPoliciesListAvailableFeaturesResponse",
        "client": {
          "short_name": "SslPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SslPolicies::Client"
        },
        "method": {
          "short_name": "ListAvailableFeatures",
          "full_name": "google.cloud.compute.v1.SslPolicies.ListAvailableFeatures",
          "service": {
            "short_name": "SslPolicies",
            "full_name": "google.cloud.compute.v1.SslPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_SslPolicies_Patch_sync",
      "title": "Snippet for the patch call in the SslPolicies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::SslPolicies::Client#patch. It may require modification in order to execute successfully.",
      "file": "ssl_policies/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::SslPolicies::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchSslPolicyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "SslPolicies::Client",
          "full_name": "::Google::Cloud::Compute::V1::SslPolicies::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.SslPolicies.Patch",
          "service": {
            "short_name": "SslPolicies",
            "full_name": "google.cloud.compute.v1.SslPolicies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Subnetworks_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the Subnetworks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Subnetworks::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "subnetworks/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListSubnetworksRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SubnetworkAggregatedList",
        "client": {
          "short_name": "Subnetworks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.Subnetworks.AggregatedList",
          "service": {
            "short_name": "Subnetworks",
            "full_name": "google.cloud.compute.v1.Subnetworks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Subnetworks_Delete_sync",
      "title": "Snippet for the delete call in the Subnetworks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Subnetworks::Client#delete. It may require modification in order to execute successfully.",
      "file": "subnetworks/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteSubnetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Subnetworks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.Subnetworks.Delete",
          "service": {
            "short_name": "Subnetworks",
            "full_name": "google.cloud.compute.v1.Subnetworks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Subnetworks_ExpandIpCidrRange_sync",
      "title": "Snippet for the expand_ip_cidr_range call in the Subnetworks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Subnetworks::Client#expand_ip_cidr_range. It may require modification in order to execute successfully.",
      "file": "subnetworks/expand_ip_cidr_range.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "expand_ip_cidr_range",
        "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client#expand_ip_cidr_range",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ExpandIpCidrRangeSubnetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Subnetworks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client"
        },
        "method": {
          "short_name": "ExpandIpCidrRange",
          "full_name": "google.cloud.compute.v1.Subnetworks.ExpandIpCidrRange",
          "service": {
            "short_name": "Subnetworks",
            "full_name": "google.cloud.compute.v1.Subnetworks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Subnetworks_Get_sync",
      "title": "Snippet for the get call in the Subnetworks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Subnetworks::Client#get. It may require modification in order to execute successfully.",
      "file": "subnetworks/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetSubnetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Subnetwork",
        "client": {
          "short_name": "Subnetworks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Subnetworks.Get",
          "service": {
            "short_name": "Subnetworks",
            "full_name": "google.cloud.compute.v1.Subnetworks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Subnetworks_GetIamPolicy_sync",
      "title": "Snippet for the get_iam_policy call in the Subnetworks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Subnetworks::Client#get_iam_policy. It may require modification in order to execute successfully.",
      "file": "subnetworks/get_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client#get_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetIamPolicySubnetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "Subnetworks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client"
        },
        "method": {
          "short_name": "GetIamPolicy",
          "full_name": "google.cloud.compute.v1.Subnetworks.GetIamPolicy",
          "service": {
            "short_name": "Subnetworks",
            "full_name": "google.cloud.compute.v1.Subnetworks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Subnetworks_Insert_sync",
      "title": "Snippet for the insert call in the Subnetworks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Subnetworks::Client#insert. It may require modification in order to execute successfully.",
      "file": "subnetworks/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertSubnetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Subnetworks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.Subnetworks.Insert",
          "service": {
            "short_name": "Subnetworks",
            "full_name": "google.cloud.compute.v1.Subnetworks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Subnetworks_List_sync",
      "title": "Snippet for the list call in the Subnetworks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Subnetworks::Client#list. It may require modification in order to execute successfully.",
      "file": "subnetworks/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListSubnetworksRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::SubnetworkList",
        "client": {
          "short_name": "Subnetworks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Subnetworks.List",
          "service": {
            "short_name": "Subnetworks",
            "full_name": "google.cloud.compute.v1.Subnetworks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Subnetworks_ListUsable_sync",
      "title": "Snippet for the list_usable call in the Subnetworks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Subnetworks::Client#list_usable. It may require modification in order to execute successfully.",
      "file": "subnetworks/list_usable.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list_usable",
        "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client#list_usable",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListUsableSubnetworksRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::UsableSubnetworksAggregatedList",
        "client": {
          "short_name": "Subnetworks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client"
        },
        "method": {
          "short_name": "ListUsable",
          "full_name": "google.cloud.compute.v1.Subnetworks.ListUsable",
          "service": {
            "short_name": "Subnetworks",
            "full_name": "google.cloud.compute.v1.Subnetworks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Subnetworks_Patch_sync",
      "title": "Snippet for the patch call in the Subnetworks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Subnetworks::Client#patch. It may require modification in order to execute successfully.",
      "file": "subnetworks/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchSubnetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Subnetworks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.Subnetworks.Patch",
          "service": {
            "short_name": "Subnetworks",
            "full_name": "google.cloud.compute.v1.Subnetworks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Subnetworks_SetIamPolicy_sync",
      "title": "Snippet for the set_iam_policy call in the Subnetworks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Subnetworks::Client#set_iam_policy. It may require modification in order to execute successfully.",
      "file": "subnetworks/set_iam_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_iam_policy",
        "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client#set_iam_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetIamPolicySubnetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Policy",
        "client": {
          "short_name": "Subnetworks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client"
        },
        "method": {
          "short_name": "SetIamPolicy",
          "full_name": "google.cloud.compute.v1.Subnetworks.SetIamPolicy",
          "service": {
            "short_name": "Subnetworks",
            "full_name": "google.cloud.compute.v1.Subnetworks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Subnetworks_SetPrivateIpGoogleAccess_sync",
      "title": "Snippet for the set_private_ip_google_access call in the Subnetworks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Subnetworks::Client#set_private_ip_google_access. It may require modification in order to execute successfully.",
      "file": "subnetworks/set_private_ip_google_access.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_private_ip_google_access",
        "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client#set_private_ip_google_access",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetPrivateIpGoogleAccessSubnetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "Subnetworks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client"
        },
        "method": {
          "short_name": "SetPrivateIpGoogleAccess",
          "full_name": "google.cloud.compute.v1.Subnetworks.SetPrivateIpGoogleAccess",
          "service": {
            "short_name": "Subnetworks",
            "full_name": "google.cloud.compute.v1.Subnetworks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Subnetworks_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the Subnetworks service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Subnetworks::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "subnetworks/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsSubnetworkRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "Subnetworks::Client",
          "full_name": "::Google::Cloud::Compute::V1::Subnetworks::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.Subnetworks.TestIamPermissions",
          "service": {
            "short_name": "Subnetworks",
            "full_name": "google.cloud.compute.v1.Subnetworks"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetGrpcProxies_Delete_sync",
      "title": "Snippet for the delete call in the TargetGrpcProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetGrpcProxies::Client#delete. It may require modification in order to execute successfully.",
      "file": "target_grpc_proxies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::TargetGrpcProxies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteTargetGrpcProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetGrpcProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetGrpcProxies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.TargetGrpcProxies.Delete",
          "service": {
            "short_name": "TargetGrpcProxies",
            "full_name": "google.cloud.compute.v1.TargetGrpcProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetGrpcProxies_Get_sync",
      "title": "Snippet for the get call in the TargetGrpcProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetGrpcProxies::Client#get. It may require modification in order to execute successfully.",
      "file": "target_grpc_proxies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::TargetGrpcProxies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetTargetGrpcProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetGrpcProxy",
        "client": {
          "short_name": "TargetGrpcProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetGrpcProxies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.TargetGrpcProxies.Get",
          "service": {
            "short_name": "TargetGrpcProxies",
            "full_name": "google.cloud.compute.v1.TargetGrpcProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetGrpcProxies_Insert_sync",
      "title": "Snippet for the insert call in the TargetGrpcProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetGrpcProxies::Client#insert. It may require modification in order to execute successfully.",
      "file": "target_grpc_proxies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::TargetGrpcProxies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertTargetGrpcProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetGrpcProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetGrpcProxies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.TargetGrpcProxies.Insert",
          "service": {
            "short_name": "TargetGrpcProxies",
            "full_name": "google.cloud.compute.v1.TargetGrpcProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetGrpcProxies_List_sync",
      "title": "Snippet for the list call in the TargetGrpcProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetGrpcProxies::Client#list. It may require modification in order to execute successfully.",
      "file": "target_grpc_proxies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::TargetGrpcProxies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListTargetGrpcProxiesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetGrpcProxyList",
        "client": {
          "short_name": "TargetGrpcProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetGrpcProxies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.TargetGrpcProxies.List",
          "service": {
            "short_name": "TargetGrpcProxies",
            "full_name": "google.cloud.compute.v1.TargetGrpcProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetGrpcProxies_Patch_sync",
      "title": "Snippet for the patch call in the TargetGrpcProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetGrpcProxies::Client#patch. It may require modification in order to execute successfully.",
      "file": "target_grpc_proxies/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::TargetGrpcProxies::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchTargetGrpcProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetGrpcProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetGrpcProxies::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.TargetGrpcProxies.Patch",
          "service": {
            "short_name": "TargetGrpcProxies",
            "full_name": "google.cloud.compute.v1.TargetGrpcProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpProxies_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the TargetHttpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpProxies::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "target_http_proxies/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpProxies::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListTargetHttpProxiesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetHttpProxyAggregatedList",
        "client": {
          "short_name": "TargetHttpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpProxies::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.TargetHttpProxies.AggregatedList",
          "service": {
            "short_name": "TargetHttpProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpProxies_Delete_sync",
      "title": "Snippet for the delete call in the TargetHttpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpProxies::Client#delete. It may require modification in order to execute successfully.",
      "file": "target_http_proxies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpProxies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteTargetHttpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetHttpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpProxies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.TargetHttpProxies.Delete",
          "service": {
            "short_name": "TargetHttpProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpProxies_Get_sync",
      "title": "Snippet for the get call in the TargetHttpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpProxies::Client#get. It may require modification in order to execute successfully.",
      "file": "target_http_proxies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpProxies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetTargetHttpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetHttpProxy",
        "client": {
          "short_name": "TargetHttpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpProxies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.TargetHttpProxies.Get",
          "service": {
            "short_name": "TargetHttpProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpProxies_Insert_sync",
      "title": "Snippet for the insert call in the TargetHttpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpProxies::Client#insert. It may require modification in order to execute successfully.",
      "file": "target_http_proxies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpProxies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertTargetHttpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetHttpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpProxies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.TargetHttpProxies.Insert",
          "service": {
            "short_name": "TargetHttpProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpProxies_List_sync",
      "title": "Snippet for the list call in the TargetHttpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpProxies::Client#list. It may require modification in order to execute successfully.",
      "file": "target_http_proxies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpProxies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListTargetHttpProxiesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetHttpProxyList",
        "client": {
          "short_name": "TargetHttpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpProxies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.TargetHttpProxies.List",
          "service": {
            "short_name": "TargetHttpProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpProxies_Patch_sync",
      "title": "Snippet for the patch call in the TargetHttpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpProxies::Client#patch. It may require modification in order to execute successfully.",
      "file": "target_http_proxies/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpProxies::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchTargetHttpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetHttpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpProxies::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.TargetHttpProxies.Patch",
          "service": {
            "short_name": "TargetHttpProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpProxies_SetUrlMap_sync",
      "title": "Snippet for the set_url_map call in the TargetHttpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpProxies::Client#set_url_map. It may require modification in order to execute successfully.",
      "file": "target_http_proxies/set_url_map.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_url_map",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpProxies::Client#set_url_map",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetUrlMapTargetHttpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetHttpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpProxies::Client"
        },
        "method": {
          "short_name": "SetUrlMap",
          "full_name": "google.cloud.compute.v1.TargetHttpProxies.SetUrlMap",
          "service": {
            "short_name": "TargetHttpProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpsProxies_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the TargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpsProxies::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "target_https_proxies/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListTargetHttpsProxiesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetHttpsProxyAggregatedList",
        "client": {
          "short_name": "TargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.TargetHttpsProxies.AggregatedList",
          "service": {
            "short_name": "TargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpsProxies_Delete_sync",
      "title": "Snippet for the delete call in the TargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpsProxies::Client#delete. It may require modification in order to execute successfully.",
      "file": "target_https_proxies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteTargetHttpsProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.TargetHttpsProxies.Delete",
          "service": {
            "short_name": "TargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpsProxies_Get_sync",
      "title": "Snippet for the get call in the TargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpsProxies::Client#get. It may require modification in order to execute successfully.",
      "file": "target_https_proxies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetTargetHttpsProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetHttpsProxy",
        "client": {
          "short_name": "TargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.TargetHttpsProxies.Get",
          "service": {
            "short_name": "TargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpsProxies_Insert_sync",
      "title": "Snippet for the insert call in the TargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpsProxies::Client#insert. It may require modification in order to execute successfully.",
      "file": "target_https_proxies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertTargetHttpsProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.TargetHttpsProxies.Insert",
          "service": {
            "short_name": "TargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpsProxies_List_sync",
      "title": "Snippet for the list call in the TargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpsProxies::Client#list. It may require modification in order to execute successfully.",
      "file": "target_https_proxies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListTargetHttpsProxiesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetHttpsProxyList",
        "client": {
          "short_name": "TargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.TargetHttpsProxies.List",
          "service": {
            "short_name": "TargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpsProxies_Patch_sync",
      "title": "Snippet for the patch call in the TargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpsProxies::Client#patch. It may require modification in order to execute successfully.",
      "file": "target_https_proxies/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchTargetHttpsProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.TargetHttpsProxies.Patch",
          "service": {
            "short_name": "TargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpsProxies_SetCertificateMap_sync",
      "title": "Snippet for the set_certificate_map call in the TargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpsProxies::Client#set_certificate_map. It may require modification in order to execute successfully.",
      "file": "target_https_proxies/set_certificate_map.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_certificate_map",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client#set_certificate_map",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetCertificateMapTargetHttpsProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "SetCertificateMap",
          "full_name": "google.cloud.compute.v1.TargetHttpsProxies.SetCertificateMap",
          "service": {
            "short_name": "TargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpsProxies_SetQuicOverride_sync",
      "title": "Snippet for the set_quic_override call in the TargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpsProxies::Client#set_quic_override. It may require modification in order to execute successfully.",
      "file": "target_https_proxies/set_quic_override.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_quic_override",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client#set_quic_override",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetQuicOverrideTargetHttpsProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "SetQuicOverride",
          "full_name": "google.cloud.compute.v1.TargetHttpsProxies.SetQuicOverride",
          "service": {
            "short_name": "TargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpsProxies_SetSslCertificates_sync",
      "title": "Snippet for the set_ssl_certificates call in the TargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpsProxies::Client#set_ssl_certificates. It may require modification in order to execute successfully.",
      "file": "target_https_proxies/set_ssl_certificates.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_ssl_certificates",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client#set_ssl_certificates",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetSslCertificatesTargetHttpsProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "SetSslCertificates",
          "full_name": "google.cloud.compute.v1.TargetHttpsProxies.SetSslCertificates",
          "service": {
            "short_name": "TargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpsProxies_SetSslPolicy_sync",
      "title": "Snippet for the set_ssl_policy call in the TargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpsProxies::Client#set_ssl_policy. It may require modification in order to execute successfully.",
      "file": "target_https_proxies/set_ssl_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_ssl_policy",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client#set_ssl_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetSslPolicyTargetHttpsProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "SetSslPolicy",
          "full_name": "google.cloud.compute.v1.TargetHttpsProxies.SetSslPolicy",
          "service": {
            "short_name": "TargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetHttpsProxies_SetUrlMap_sync",
      "title": "Snippet for the set_url_map call in the TargetHttpsProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetHttpsProxies::Client#set_url_map. It may require modification in order to execute successfully.",
      "file": "target_https_proxies/set_url_map.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_url_map",
        "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client#set_url_map",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetUrlMapTargetHttpsProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetHttpsProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetHttpsProxies::Client"
        },
        "method": {
          "short_name": "SetUrlMap",
          "full_name": "google.cloud.compute.v1.TargetHttpsProxies.SetUrlMap",
          "service": {
            "short_name": "TargetHttpsProxies",
            "full_name": "google.cloud.compute.v1.TargetHttpsProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetInstances_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the TargetInstances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetInstances::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "target_instances/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::TargetInstances::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListTargetInstancesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetInstanceAggregatedList",
        "client": {
          "short_name": "TargetInstances::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetInstances::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.TargetInstances.AggregatedList",
          "service": {
            "short_name": "TargetInstances",
            "full_name": "google.cloud.compute.v1.TargetInstances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetInstances_Delete_sync",
      "title": "Snippet for the delete call in the TargetInstances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetInstances::Client#delete. It may require modification in order to execute successfully.",
      "file": "target_instances/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::TargetInstances::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteTargetInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetInstances::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetInstances::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.TargetInstances.Delete",
          "service": {
            "short_name": "TargetInstances",
            "full_name": "google.cloud.compute.v1.TargetInstances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetInstances_Get_sync",
      "title": "Snippet for the get call in the TargetInstances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetInstances::Client#get. It may require modification in order to execute successfully.",
      "file": "target_instances/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::TargetInstances::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetTargetInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetInstance",
        "client": {
          "short_name": "TargetInstances::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetInstances::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.TargetInstances.Get",
          "service": {
            "short_name": "TargetInstances",
            "full_name": "google.cloud.compute.v1.TargetInstances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetInstances_Insert_sync",
      "title": "Snippet for the insert call in the TargetInstances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetInstances::Client#insert. It may require modification in order to execute successfully.",
      "file": "target_instances/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::TargetInstances::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertTargetInstanceRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetInstances::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetInstances::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.TargetInstances.Insert",
          "service": {
            "short_name": "TargetInstances",
            "full_name": "google.cloud.compute.v1.TargetInstances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetInstances_List_sync",
      "title": "Snippet for the list call in the TargetInstances service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetInstances::Client#list. It may require modification in order to execute successfully.",
      "file": "target_instances/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::TargetInstances::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListTargetInstancesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetInstanceList",
        "client": {
          "short_name": "TargetInstances::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetInstances::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.TargetInstances.List",
          "service": {
            "short_name": "TargetInstances",
            "full_name": "google.cloud.compute.v1.TargetInstances"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetPools_AddHealthCheck_sync",
      "title": "Snippet for the add_health_check call in the TargetPools service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetPools::Client#add_health_check. It may require modification in order to execute successfully.",
      "file": "target_pools/add_health_check.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_health_check",
        "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client#add_health_check",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddHealthCheckTargetPoolRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetPools::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client"
        },
        "method": {
          "short_name": "AddHealthCheck",
          "full_name": "google.cloud.compute.v1.TargetPools.AddHealthCheck",
          "service": {
            "short_name": "TargetPools",
            "full_name": "google.cloud.compute.v1.TargetPools"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetPools_AddInstance_sync",
      "title": "Snippet for the add_instance call in the TargetPools service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetPools::Client#add_instance. It may require modification in order to execute successfully.",
      "file": "target_pools/add_instance.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "add_instance",
        "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client#add_instance",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AddInstanceTargetPoolRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetPools::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client"
        },
        "method": {
          "short_name": "AddInstance",
          "full_name": "google.cloud.compute.v1.TargetPools.AddInstance",
          "service": {
            "short_name": "TargetPools",
            "full_name": "google.cloud.compute.v1.TargetPools"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetPools_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the TargetPools service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetPools::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "target_pools/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListTargetPoolsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetPoolAggregatedList",
        "client": {
          "short_name": "TargetPools::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.TargetPools.AggregatedList",
          "service": {
            "short_name": "TargetPools",
            "full_name": "google.cloud.compute.v1.TargetPools"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetPools_Delete_sync",
      "title": "Snippet for the delete call in the TargetPools service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetPools::Client#delete. It may require modification in order to execute successfully.",
      "file": "target_pools/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteTargetPoolRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetPools::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.TargetPools.Delete",
          "service": {
            "short_name": "TargetPools",
            "full_name": "google.cloud.compute.v1.TargetPools"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetPools_Get_sync",
      "title": "Snippet for the get call in the TargetPools service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetPools::Client#get. It may require modification in order to execute successfully.",
      "file": "target_pools/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetTargetPoolRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetPool",
        "client": {
          "short_name": "TargetPools::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.TargetPools.Get",
          "service": {
            "short_name": "TargetPools",
            "full_name": "google.cloud.compute.v1.TargetPools"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetPools_GetHealth_sync",
      "title": "Snippet for the get_health call in the TargetPools service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetPools::Client#get_health. It may require modification in order to execute successfully.",
      "file": "target_pools/get_health.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_health",
        "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client#get_health",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetHealthTargetPoolRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetPoolInstanceHealth",
        "client": {
          "short_name": "TargetPools::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client"
        },
        "method": {
          "short_name": "GetHealth",
          "full_name": "google.cloud.compute.v1.TargetPools.GetHealth",
          "service": {
            "short_name": "TargetPools",
            "full_name": "google.cloud.compute.v1.TargetPools"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetPools_Insert_sync",
      "title": "Snippet for the insert call in the TargetPools service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetPools::Client#insert. It may require modification in order to execute successfully.",
      "file": "target_pools/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertTargetPoolRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetPools::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.TargetPools.Insert",
          "service": {
            "short_name": "TargetPools",
            "full_name": "google.cloud.compute.v1.TargetPools"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetPools_List_sync",
      "title": "Snippet for the list call in the TargetPools service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetPools::Client#list. It may require modification in order to execute successfully.",
      "file": "target_pools/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListTargetPoolsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetPoolList",
        "client": {
          "short_name": "TargetPools::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.TargetPools.List",
          "service": {
            "short_name": "TargetPools",
            "full_name": "google.cloud.compute.v1.TargetPools"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetPools_RemoveHealthCheck_sync",
      "title": "Snippet for the remove_health_check call in the TargetPools service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetPools::Client#remove_health_check. It may require modification in order to execute successfully.",
      "file": "target_pools/remove_health_check.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "remove_health_check",
        "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client#remove_health_check",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RemoveHealthCheckTargetPoolRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetPools::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client"
        },
        "method": {
          "short_name": "RemoveHealthCheck",
          "full_name": "google.cloud.compute.v1.TargetPools.RemoveHealthCheck",
          "service": {
            "short_name": "TargetPools",
            "full_name": "google.cloud.compute.v1.TargetPools"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetPools_RemoveInstance_sync",
      "title": "Snippet for the remove_instance call in the TargetPools service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetPools::Client#remove_instance. It may require modification in order to execute successfully.",
      "file": "target_pools/remove_instance.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "remove_instance",
        "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client#remove_instance",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::RemoveInstanceTargetPoolRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetPools::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client"
        },
        "method": {
          "short_name": "RemoveInstance",
          "full_name": "google.cloud.compute.v1.TargetPools.RemoveInstance",
          "service": {
            "short_name": "TargetPools",
            "full_name": "google.cloud.compute.v1.TargetPools"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetPools_SetBackup_sync",
      "title": "Snippet for the set_backup call in the TargetPools service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetPools::Client#set_backup. It may require modification in order to execute successfully.",
      "file": "target_pools/set_backup.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_backup",
        "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client#set_backup",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetBackupTargetPoolRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetPools::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetPools::Client"
        },
        "method": {
          "short_name": "SetBackup",
          "full_name": "google.cloud.compute.v1.TargetPools.SetBackup",
          "service": {
            "short_name": "TargetPools",
            "full_name": "google.cloud.compute.v1.TargetPools"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetSslProxies_Delete_sync",
      "title": "Snippet for the delete call in the TargetSslProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetSslProxies::Client#delete. It may require modification in order to execute successfully.",
      "file": "target_ssl_proxies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteTargetSslProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetSslProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.TargetSslProxies.Delete",
          "service": {
            "short_name": "TargetSslProxies",
            "full_name": "google.cloud.compute.v1.TargetSslProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetSslProxies_Get_sync",
      "title": "Snippet for the get call in the TargetSslProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetSslProxies::Client#get. It may require modification in order to execute successfully.",
      "file": "target_ssl_proxies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetTargetSslProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetSslProxy",
        "client": {
          "short_name": "TargetSslProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.TargetSslProxies.Get",
          "service": {
            "short_name": "TargetSslProxies",
            "full_name": "google.cloud.compute.v1.TargetSslProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetSslProxies_Insert_sync",
      "title": "Snippet for the insert call in the TargetSslProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetSslProxies::Client#insert. It may require modification in order to execute successfully.",
      "file": "target_ssl_proxies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertTargetSslProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetSslProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.TargetSslProxies.Insert",
          "service": {
            "short_name": "TargetSslProxies",
            "full_name": "google.cloud.compute.v1.TargetSslProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetSslProxies_List_sync",
      "title": "Snippet for the list call in the TargetSslProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetSslProxies::Client#list. It may require modification in order to execute successfully.",
      "file": "target_ssl_proxies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListTargetSslProxiesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetSslProxyList",
        "client": {
          "short_name": "TargetSslProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.TargetSslProxies.List",
          "service": {
            "short_name": "TargetSslProxies",
            "full_name": "google.cloud.compute.v1.TargetSslProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetSslProxies_SetBackendService_sync",
      "title": "Snippet for the set_backend_service call in the TargetSslProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetSslProxies::Client#set_backend_service. It may require modification in order to execute successfully.",
      "file": "target_ssl_proxies/set_backend_service.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_backend_service",
        "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client#set_backend_service",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetBackendServiceTargetSslProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetSslProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client"
        },
        "method": {
          "short_name": "SetBackendService",
          "full_name": "google.cloud.compute.v1.TargetSslProxies.SetBackendService",
          "service": {
            "short_name": "TargetSslProxies",
            "full_name": "google.cloud.compute.v1.TargetSslProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetSslProxies_SetCertificateMap_sync",
      "title": "Snippet for the set_certificate_map call in the TargetSslProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetSslProxies::Client#set_certificate_map. It may require modification in order to execute successfully.",
      "file": "target_ssl_proxies/set_certificate_map.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_certificate_map",
        "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client#set_certificate_map",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetCertificateMapTargetSslProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetSslProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client"
        },
        "method": {
          "short_name": "SetCertificateMap",
          "full_name": "google.cloud.compute.v1.TargetSslProxies.SetCertificateMap",
          "service": {
            "short_name": "TargetSslProxies",
            "full_name": "google.cloud.compute.v1.TargetSslProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetSslProxies_SetProxyHeader_sync",
      "title": "Snippet for the set_proxy_header call in the TargetSslProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetSslProxies::Client#set_proxy_header. It may require modification in order to execute successfully.",
      "file": "target_ssl_proxies/set_proxy_header.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_proxy_header",
        "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client#set_proxy_header",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetProxyHeaderTargetSslProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetSslProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client"
        },
        "method": {
          "short_name": "SetProxyHeader",
          "full_name": "google.cloud.compute.v1.TargetSslProxies.SetProxyHeader",
          "service": {
            "short_name": "TargetSslProxies",
            "full_name": "google.cloud.compute.v1.TargetSslProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetSslProxies_SetSslCertificates_sync",
      "title": "Snippet for the set_ssl_certificates call in the TargetSslProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetSslProxies::Client#set_ssl_certificates. It may require modification in order to execute successfully.",
      "file": "target_ssl_proxies/set_ssl_certificates.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_ssl_certificates",
        "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client#set_ssl_certificates",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetSslCertificatesTargetSslProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetSslProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client"
        },
        "method": {
          "short_name": "SetSslCertificates",
          "full_name": "google.cloud.compute.v1.TargetSslProxies.SetSslCertificates",
          "service": {
            "short_name": "TargetSslProxies",
            "full_name": "google.cloud.compute.v1.TargetSslProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetSslProxies_SetSslPolicy_sync",
      "title": "Snippet for the set_ssl_policy call in the TargetSslProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetSslProxies::Client#set_ssl_policy. It may require modification in order to execute successfully.",
      "file": "target_ssl_proxies/set_ssl_policy.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_ssl_policy",
        "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client#set_ssl_policy",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetSslPolicyTargetSslProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetSslProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetSslProxies::Client"
        },
        "method": {
          "short_name": "SetSslPolicy",
          "full_name": "google.cloud.compute.v1.TargetSslProxies.SetSslPolicy",
          "service": {
            "short_name": "TargetSslProxies",
            "full_name": "google.cloud.compute.v1.TargetSslProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetTcpProxies_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the TargetTcpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetTcpProxies::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "target_tcp_proxies/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::TargetTcpProxies::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListTargetTcpProxiesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetTcpProxyAggregatedList",
        "client": {
          "short_name": "TargetTcpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetTcpProxies::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.TargetTcpProxies.AggregatedList",
          "service": {
            "short_name": "TargetTcpProxies",
            "full_name": "google.cloud.compute.v1.TargetTcpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetTcpProxies_Delete_sync",
      "title": "Snippet for the delete call in the TargetTcpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetTcpProxies::Client#delete. It may require modification in order to execute successfully.",
      "file": "target_tcp_proxies/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::TargetTcpProxies::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteTargetTcpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetTcpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetTcpProxies::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.TargetTcpProxies.Delete",
          "service": {
            "short_name": "TargetTcpProxies",
            "full_name": "google.cloud.compute.v1.TargetTcpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetTcpProxies_Get_sync",
      "title": "Snippet for the get call in the TargetTcpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetTcpProxies::Client#get. It may require modification in order to execute successfully.",
      "file": "target_tcp_proxies/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::TargetTcpProxies::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetTargetTcpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetTcpProxy",
        "client": {
          "short_name": "TargetTcpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetTcpProxies::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.TargetTcpProxies.Get",
          "service": {
            "short_name": "TargetTcpProxies",
            "full_name": "google.cloud.compute.v1.TargetTcpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetTcpProxies_Insert_sync",
      "title": "Snippet for the insert call in the TargetTcpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetTcpProxies::Client#insert. It may require modification in order to execute successfully.",
      "file": "target_tcp_proxies/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::TargetTcpProxies::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertTargetTcpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetTcpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetTcpProxies::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.TargetTcpProxies.Insert",
          "service": {
            "short_name": "TargetTcpProxies",
            "full_name": "google.cloud.compute.v1.TargetTcpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetTcpProxies_List_sync",
      "title": "Snippet for the list call in the TargetTcpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetTcpProxies::Client#list. It may require modification in order to execute successfully.",
      "file": "target_tcp_proxies/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::TargetTcpProxies::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListTargetTcpProxiesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetTcpProxyList",
        "client": {
          "short_name": "TargetTcpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetTcpProxies::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.TargetTcpProxies.List",
          "service": {
            "short_name": "TargetTcpProxies",
            "full_name": "google.cloud.compute.v1.TargetTcpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetTcpProxies_SetBackendService_sync",
      "title": "Snippet for the set_backend_service call in the TargetTcpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetTcpProxies::Client#set_backend_service. It may require modification in order to execute successfully.",
      "file": "target_tcp_proxies/set_backend_service.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_backend_service",
        "full_name": "::Google::Cloud::Compute::V1::TargetTcpProxies::Client#set_backend_service",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetBackendServiceTargetTcpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetTcpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetTcpProxies::Client"
        },
        "method": {
          "short_name": "SetBackendService",
          "full_name": "google.cloud.compute.v1.TargetTcpProxies.SetBackendService",
          "service": {
            "short_name": "TargetTcpProxies",
            "full_name": "google.cloud.compute.v1.TargetTcpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetTcpProxies_SetProxyHeader_sync",
      "title": "Snippet for the set_proxy_header call in the TargetTcpProxies service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetTcpProxies::Client#set_proxy_header. It may require modification in order to execute successfully.",
      "file": "target_tcp_proxies/set_proxy_header.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_proxy_header",
        "full_name": "::Google::Cloud::Compute::V1::TargetTcpProxies::Client#set_proxy_header",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetProxyHeaderTargetTcpProxyRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetTcpProxies::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetTcpProxies::Client"
        },
        "method": {
          "short_name": "SetProxyHeader",
          "full_name": "google.cloud.compute.v1.TargetTcpProxies.SetProxyHeader",
          "service": {
            "short_name": "TargetTcpProxies",
            "full_name": "google.cloud.compute.v1.TargetTcpProxies"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetVpnGateways_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the TargetVpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetVpnGateways::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "target_vpn_gateways/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::TargetVpnGateways::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListTargetVpnGatewaysRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetVpnGatewayAggregatedList",
        "client": {
          "short_name": "TargetVpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetVpnGateways::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.TargetVpnGateways.AggregatedList",
          "service": {
            "short_name": "TargetVpnGateways",
            "full_name": "google.cloud.compute.v1.TargetVpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetVpnGateways_Delete_sync",
      "title": "Snippet for the delete call in the TargetVpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetVpnGateways::Client#delete. It may require modification in order to execute successfully.",
      "file": "target_vpn_gateways/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::TargetVpnGateways::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteTargetVpnGatewayRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetVpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetVpnGateways::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.TargetVpnGateways.Delete",
          "service": {
            "short_name": "TargetVpnGateways",
            "full_name": "google.cloud.compute.v1.TargetVpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetVpnGateways_Get_sync",
      "title": "Snippet for the get call in the TargetVpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetVpnGateways::Client#get. It may require modification in order to execute successfully.",
      "file": "target_vpn_gateways/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::TargetVpnGateways::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetTargetVpnGatewayRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetVpnGateway",
        "client": {
          "short_name": "TargetVpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetVpnGateways::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.TargetVpnGateways.Get",
          "service": {
            "short_name": "TargetVpnGateways",
            "full_name": "google.cloud.compute.v1.TargetVpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetVpnGateways_Insert_sync",
      "title": "Snippet for the insert call in the TargetVpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetVpnGateways::Client#insert. It may require modification in order to execute successfully.",
      "file": "target_vpn_gateways/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::TargetVpnGateways::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertTargetVpnGatewayRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetVpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetVpnGateways::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.TargetVpnGateways.Insert",
          "service": {
            "short_name": "TargetVpnGateways",
            "full_name": "google.cloud.compute.v1.TargetVpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetVpnGateways_List_sync",
      "title": "Snippet for the list call in the TargetVpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetVpnGateways::Client#list. It may require modification in order to execute successfully.",
      "file": "target_vpn_gateways/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::TargetVpnGateways::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListTargetVpnGatewaysRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TargetVpnGatewayList",
        "client": {
          "short_name": "TargetVpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetVpnGateways::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.TargetVpnGateways.List",
          "service": {
            "short_name": "TargetVpnGateways",
            "full_name": "google.cloud.compute.v1.TargetVpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_TargetVpnGateways_SetLabels_sync",
      "title": "Snippet for the set_labels call in the TargetVpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::TargetVpnGateways::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "target_vpn_gateways/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::TargetVpnGateways::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsTargetVpnGatewayRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "TargetVpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::TargetVpnGateways::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.TargetVpnGateways.SetLabels",
          "service": {
            "short_name": "TargetVpnGateways",
            "full_name": "google.cloud.compute.v1.TargetVpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_UrlMaps_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the UrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::UrlMaps::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "url_maps/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListUrlMapsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::UrlMapsAggregatedList",
        "client": {
          "short_name": "UrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.UrlMaps.AggregatedList",
          "service": {
            "short_name": "UrlMaps",
            "full_name": "google.cloud.compute.v1.UrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_UrlMaps_Delete_sync",
      "title": "Snippet for the delete call in the UrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::UrlMaps::Client#delete. It may require modification in order to execute successfully.",
      "file": "url_maps/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteUrlMapRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "UrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.UrlMaps.Delete",
          "service": {
            "short_name": "UrlMaps",
            "full_name": "google.cloud.compute.v1.UrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_UrlMaps_Get_sync",
      "title": "Snippet for the get call in the UrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::UrlMaps::Client#get. It may require modification in order to execute successfully.",
      "file": "url_maps/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetUrlMapRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::UrlMap",
        "client": {
          "short_name": "UrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.UrlMaps.Get",
          "service": {
            "short_name": "UrlMaps",
            "full_name": "google.cloud.compute.v1.UrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_UrlMaps_Insert_sync",
      "title": "Snippet for the insert call in the UrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::UrlMaps::Client#insert. It may require modification in order to execute successfully.",
      "file": "url_maps/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertUrlMapRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "UrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.UrlMaps.Insert",
          "service": {
            "short_name": "UrlMaps",
            "full_name": "google.cloud.compute.v1.UrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_UrlMaps_InvalidateCache_sync",
      "title": "Snippet for the invalidate_cache call in the UrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::UrlMaps::Client#invalidate_cache. It may require modification in order to execute successfully.",
      "file": "url_maps/invalidate_cache.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "invalidate_cache",
        "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client#invalidate_cache",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InvalidateCacheUrlMapRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "UrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client"
        },
        "method": {
          "short_name": "InvalidateCache",
          "full_name": "google.cloud.compute.v1.UrlMaps.InvalidateCache",
          "service": {
            "short_name": "UrlMaps",
            "full_name": "google.cloud.compute.v1.UrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_UrlMaps_List_sync",
      "title": "Snippet for the list call in the UrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::UrlMaps::Client#list. It may require modification in order to execute successfully.",
      "file": "url_maps/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListUrlMapsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::UrlMapList",
        "client": {
          "short_name": "UrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.UrlMaps.List",
          "service": {
            "short_name": "UrlMaps",
            "full_name": "google.cloud.compute.v1.UrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_UrlMaps_Patch_sync",
      "title": "Snippet for the patch call in the UrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::UrlMaps::Client#patch. It may require modification in order to execute successfully.",
      "file": "url_maps/patch.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "patch",
        "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client#patch",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::PatchUrlMapRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "UrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client"
        },
        "method": {
          "short_name": "Patch",
          "full_name": "google.cloud.compute.v1.UrlMaps.Patch",
          "service": {
            "short_name": "UrlMaps",
            "full_name": "google.cloud.compute.v1.UrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_UrlMaps_Update_sync",
      "title": "Snippet for the update call in the UrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::UrlMaps::Client#update. It may require modification in order to execute successfully.",
      "file": "url_maps/update.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "update",
        "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client#update",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::UpdateUrlMapRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "UrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client"
        },
        "method": {
          "short_name": "Update",
          "full_name": "google.cloud.compute.v1.UrlMaps.Update",
          "service": {
            "short_name": "UrlMaps",
            "full_name": "google.cloud.compute.v1.UrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_UrlMaps_Validate_sync",
      "title": "Snippet for the validate call in the UrlMaps service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::UrlMaps::Client#validate. It may require modification in order to execute successfully.",
      "file": "url_maps/validate.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "validate",
        "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client#validate",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ValidateUrlMapRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::UrlMapsValidateResponse",
        "client": {
          "short_name": "UrlMaps::Client",
          "full_name": "::Google::Cloud::Compute::V1::UrlMaps::Client"
        },
        "method": {
          "short_name": "Validate",
          "full_name": "google.cloud.compute.v1.UrlMaps.Validate",
          "service": {
            "short_name": "UrlMaps",
            "full_name": "google.cloud.compute.v1.UrlMaps"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_VpnGateways_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the VpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::VpnGateways::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "vpn_gateways/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListVpnGatewaysRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::VpnGatewayAggregatedList",
        "client": {
          "short_name": "VpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.VpnGateways.AggregatedList",
          "service": {
            "short_name": "VpnGateways",
            "full_name": "google.cloud.compute.v1.VpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_VpnGateways_Delete_sync",
      "title": "Snippet for the delete call in the VpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::VpnGateways::Client#delete. It may require modification in order to execute successfully.",
      "file": "vpn_gateways/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteVpnGatewayRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "VpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.VpnGateways.Delete",
          "service": {
            "short_name": "VpnGateways",
            "full_name": "google.cloud.compute.v1.VpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_VpnGateways_Get_sync",
      "title": "Snippet for the get call in the VpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::VpnGateways::Client#get. It may require modification in order to execute successfully.",
      "file": "vpn_gateways/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetVpnGatewayRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::VpnGateway",
        "client": {
          "short_name": "VpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.VpnGateways.Get",
          "service": {
            "short_name": "VpnGateways",
            "full_name": "google.cloud.compute.v1.VpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_VpnGateways_GetStatus_sync",
      "title": "Snippet for the get_status call in the VpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::VpnGateways::Client#get_status. It may require modification in order to execute successfully.",
      "file": "vpn_gateways/get_status.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get_status",
        "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client#get_status",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetStatusVpnGatewayRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::VpnGatewaysGetStatusResponse",
        "client": {
          "short_name": "VpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client"
        },
        "method": {
          "short_name": "GetStatus",
          "full_name": "google.cloud.compute.v1.VpnGateways.GetStatus",
          "service": {
            "short_name": "VpnGateways",
            "full_name": "google.cloud.compute.v1.VpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_VpnGateways_Insert_sync",
      "title": "Snippet for the insert call in the VpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::VpnGateways::Client#insert. It may require modification in order to execute successfully.",
      "file": "vpn_gateways/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertVpnGatewayRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "VpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.VpnGateways.Insert",
          "service": {
            "short_name": "VpnGateways",
            "full_name": "google.cloud.compute.v1.VpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_VpnGateways_List_sync",
      "title": "Snippet for the list call in the VpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::VpnGateways::Client#list. It may require modification in order to execute successfully.",
      "file": "vpn_gateways/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListVpnGatewaysRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::VpnGatewayList",
        "client": {
          "short_name": "VpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.VpnGateways.List",
          "service": {
            "short_name": "VpnGateways",
            "full_name": "google.cloud.compute.v1.VpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_VpnGateways_SetLabels_sync",
      "title": "Snippet for the set_labels call in the VpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::VpnGateways::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "vpn_gateways/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsVpnGatewayRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "VpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.VpnGateways.SetLabels",
          "service": {
            "short_name": "VpnGateways",
            "full_name": "google.cloud.compute.v1.VpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_VpnGateways_TestIamPermissions_sync",
      "title": "Snippet for the test_iam_permissions call in the VpnGateways service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::VpnGateways::Client#test_iam_permissions. It may require modification in order to execute successfully.",
      "file": "vpn_gateways/test_iam_permissions.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "test_iam_permissions",
        "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client#test_iam_permissions",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::TestIamPermissionsVpnGatewayRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::TestPermissionsResponse",
        "client": {
          "short_name": "VpnGateways::Client",
          "full_name": "::Google::Cloud::Compute::V1::VpnGateways::Client"
        },
        "method": {
          "short_name": "TestIamPermissions",
          "full_name": "google.cloud.compute.v1.VpnGateways.TestIamPermissions",
          "service": {
            "short_name": "VpnGateways",
            "full_name": "google.cloud.compute.v1.VpnGateways"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_VpnTunnels_AggregatedList_sync",
      "title": "Snippet for the aggregated_list call in the VpnTunnels service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::VpnTunnels::Client#aggregated_list. It may require modification in order to execute successfully.",
      "file": "vpn_tunnels/aggregated_list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "aggregated_list",
        "full_name": "::Google::Cloud::Compute::V1::VpnTunnels::Client#aggregated_list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::AggregatedListVpnTunnelsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::VpnTunnelAggregatedList",
        "client": {
          "short_name": "VpnTunnels::Client",
          "full_name": "::Google::Cloud::Compute::V1::VpnTunnels::Client"
        },
        "method": {
          "short_name": "AggregatedList",
          "full_name": "google.cloud.compute.v1.VpnTunnels.AggregatedList",
          "service": {
            "short_name": "VpnTunnels",
            "full_name": "google.cloud.compute.v1.VpnTunnels"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_VpnTunnels_Delete_sync",
      "title": "Snippet for the delete call in the VpnTunnels service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::VpnTunnels::Client#delete. It may require modification in order to execute successfully.",
      "file": "vpn_tunnels/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::VpnTunnels::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteVpnTunnelRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "VpnTunnels::Client",
          "full_name": "::Google::Cloud::Compute::V1::VpnTunnels::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.VpnTunnels.Delete",
          "service": {
            "short_name": "VpnTunnels",
            "full_name": "google.cloud.compute.v1.VpnTunnels"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_VpnTunnels_Get_sync",
      "title": "Snippet for the get call in the VpnTunnels service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::VpnTunnels::Client#get. It may require modification in order to execute successfully.",
      "file": "vpn_tunnels/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::VpnTunnels::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetVpnTunnelRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::VpnTunnel",
        "client": {
          "short_name": "VpnTunnels::Client",
          "full_name": "::Google::Cloud::Compute::V1::VpnTunnels::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.VpnTunnels.Get",
          "service": {
            "short_name": "VpnTunnels",
            "full_name": "google.cloud.compute.v1.VpnTunnels"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_VpnTunnels_Insert_sync",
      "title": "Snippet for the insert call in the VpnTunnels service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::VpnTunnels::Client#insert. It may require modification in order to execute successfully.",
      "file": "vpn_tunnels/insert.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "insert",
        "full_name": "::Google::Cloud::Compute::V1::VpnTunnels::Client#insert",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::InsertVpnTunnelRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "VpnTunnels::Client",
          "full_name": "::Google::Cloud::Compute::V1::VpnTunnels::Client"
        },
        "method": {
          "short_name": "Insert",
          "full_name": "google.cloud.compute.v1.VpnTunnels.Insert",
          "service": {
            "short_name": "VpnTunnels",
            "full_name": "google.cloud.compute.v1.VpnTunnels"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_VpnTunnels_List_sync",
      "title": "Snippet for the list call in the VpnTunnels service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::VpnTunnels::Client#list. It may require modification in order to execute successfully.",
      "file": "vpn_tunnels/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::VpnTunnels::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListVpnTunnelsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::VpnTunnelList",
        "client": {
          "short_name": "VpnTunnels::Client",
          "full_name": "::Google::Cloud::Compute::V1::VpnTunnels::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.VpnTunnels.List",
          "service": {
            "short_name": "VpnTunnels",
            "full_name": "google.cloud.compute.v1.VpnTunnels"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_VpnTunnels_SetLabels_sync",
      "title": "Snippet for the set_labels call in the VpnTunnels service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::VpnTunnels::Client#set_labels. It may require modification in order to execute successfully.",
      "file": "vpn_tunnels/set_labels.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "set_labels",
        "full_name": "::Google::Cloud::Compute::V1::VpnTunnels::Client#set_labels",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::SetLabelsVpnTunnelRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "VpnTunnels::Client",
          "full_name": "::Google::Cloud::Compute::V1::VpnTunnels::Client"
        },
        "method": {
          "short_name": "SetLabels",
          "full_name": "google.cloud.compute.v1.VpnTunnels.SetLabels",
          "service": {
            "short_name": "VpnTunnels",
            "full_name": "google.cloud.compute.v1.VpnTunnels"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ZoneOperations_Delete_sync",
      "title": "Snippet for the delete call in the ZoneOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ZoneOperations::Client#delete. It may require modification in order to execute successfully.",
      "file": "zone_operations/delete.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "delete",
        "full_name": "::Google::Cloud::Compute::V1::ZoneOperations::Client#delete",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::DeleteZoneOperationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::DeleteZoneOperationResponse",
        "client": {
          "short_name": "ZoneOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::ZoneOperations::Client"
        },
        "method": {
          "short_name": "Delete",
          "full_name": "google.cloud.compute.v1.ZoneOperations.Delete",
          "service": {
            "short_name": "ZoneOperations",
            "full_name": "google.cloud.compute.v1.ZoneOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ZoneOperations_Get_sync",
      "title": "Snippet for the get call in the ZoneOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ZoneOperations::Client#get. It may require modification in order to execute successfully.",
      "file": "zone_operations/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::ZoneOperations::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetZoneOperationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "ZoneOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::ZoneOperations::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.ZoneOperations.Get",
          "service": {
            "short_name": "ZoneOperations",
            "full_name": "google.cloud.compute.v1.ZoneOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ZoneOperations_List_sync",
      "title": "Snippet for the list call in the ZoneOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ZoneOperations::Client#list. It may require modification in order to execute successfully.",
      "file": "zone_operations/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::ZoneOperations::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListZoneOperationsRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::OperationList",
        "client": {
          "short_name": "ZoneOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::ZoneOperations::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.ZoneOperations.List",
          "service": {
            "short_name": "ZoneOperations",
            "full_name": "google.cloud.compute.v1.ZoneOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_ZoneOperations_Wait_sync",
      "title": "Snippet for the wait call in the ZoneOperations service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::ZoneOperations::Client#wait. It may require modification in order to execute successfully.",
      "file": "zone_operations/wait.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "wait",
        "full_name": "::Google::Cloud::Compute::V1::ZoneOperations::Client#wait",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::WaitZoneOperationRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Operation",
        "client": {
          "short_name": "ZoneOperations::Client",
          "full_name": "::Google::Cloud::Compute::V1::ZoneOperations::Client"
        },
        "method": {
          "short_name": "Wait",
          "full_name": "google.cloud.compute.v1.ZoneOperations.Wait",
          "service": {
            "short_name": "ZoneOperations",
            "full_name": "google.cloud.compute.v1.ZoneOperations"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Zones_Get_sync",
      "title": "Snippet for the get call in the Zones service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Zones::Client#get. It may require modification in order to execute successfully.",
      "file": "zones/get.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "get",
        "full_name": "::Google::Cloud::Compute::V1::Zones::Client#get",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::GetZoneRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::Zone",
        "client": {
          "short_name": "Zones::Client",
          "full_name": "::Google::Cloud::Compute::V1::Zones::Client"
        },
        "method": {
          "short_name": "Get",
          "full_name": "google.cloud.compute.v1.Zones.Get",
          "service": {
            "short_name": "Zones",
            "full_name": "google.cloud.compute.v1.Zones"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    },
    {
      "region_tag": "compute_v1_generated_Zones_List_sync",
      "title": "Snippet for the list call in the Zones service",
      "description": "This is an auto-generated example demonstrating basic usage of Google::Cloud::Compute::V1::Zones::Client#list. It may require modification in order to execute successfully.",
      "file": "zones/list.rb",
      "language": "RUBY",
      "client_method": {
        "short_name": "list",
        "full_name": "::Google::Cloud::Compute::V1::Zones::Client#list",
        "async": false,
        "parameters": [
          {
            "type": "::Google::Cloud::Compute::V1::ListZonesRequest",
            "name": "request"
          }
        ],
        "result_type": "::Google::Cloud::Compute::V1::ZoneList",
        "client": {
          "short_name": "Zones::Client",
          "full_name": "::Google::Cloud::Compute::V1::Zones::Client"
        },
        "method": {
          "short_name": "List",
          "full_name": "google.cloud.compute.v1.Zones.List",
          "service": {
            "short_name": "Zones",
            "full_name": "google.cloud.compute.v1.Zones"
          }
        }
      },
      "canonical": true,
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 20,
          "end": 41,
          "type": "FULL"
        }
      ]
    }
  ]
}