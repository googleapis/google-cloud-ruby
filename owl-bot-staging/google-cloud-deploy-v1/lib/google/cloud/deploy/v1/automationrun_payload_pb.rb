# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/deploy/v1/automationrun_payload.proto

require 'google/protobuf'

require 'google/cloud/deploy/v1/log_enums_pb'


descriptor_data = "\n2google/cloud/deploy/v1/automationrun_payload.proto\x12\x16google.cloud.deploy.v1\x1a&google/cloud/deploy/v1/log_enums.proto\"\xc6\x01\n\x12\x41utomationRunEvent\x12\x0f\n\x07message\x18\x01 \x01(\t\x12\x16\n\x0e\x61utomation_run\x18\x02 \x01(\t\x12\x14\n\x0cpipeline_uid\x18\x03 \x01(\t\x12\x15\n\rautomation_id\x18\x04 \x01(\t\x12\x0f\n\x07rule_id\x18\x05 \x01(\t\x12\x1d\n\x15\x64\x65stination_target_id\x18\x06 \x01(\t\x12*\n\x04type\x18\x07 \x01(\x0e\x32\x1c.google.cloud.deploy.v1.TypeBm\n\x1a\x63om.google.cloud.deploy.v1B\x19\x41utomationRunPayloadProtoP\x01Z2cloud.google.com/go/deploy/apiv1/deploypb;deploypbb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module Deploy
      module V1
        AutomationRunEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.deploy.v1.AutomationRunEvent").msgclass
      end
    end
  end
end
