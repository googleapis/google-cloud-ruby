# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/geminidataanalytics/v1beta/datasource.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/cloud/geminidataanalytics/v1beta/credentials_pb'


descriptor_data = "\n8google/cloud/geminidataanalytics/v1beta/datasource.proto\x12\'google.cloud.geminidataanalytics.v1beta\x1a\x1fgoogle/api/field_behavior.proto\x1a\x39google/cloud/geminidataanalytics/v1beta/credentials.proto\"\x9f\x02\n\x14\x44\x61tasourceReferences\x12N\n\x02\x62q\x18\x01 \x01(\x0b\x32@.google.cloud.geminidataanalytics.v1beta.BigQueryTableReferencesH\x00\x12U\n\x06studio\x18\x02 \x01(\x0b\x32\x43.google.cloud.geminidataanalytics.v1beta.StudioDatasourceReferencesH\x00\x12R\n\x06looker\x18\x03 \x01(\x0b\x32@.google.cloud.geminidataanalytics.v1beta.LookerExploreReferencesH\x00\x42\x0c\n\nreferences\"y\n\x17\x42igQueryTableReferences\x12^\n\x10table_references\x18\x01 \x03(\x0b\x32?.google.cloud.geminidataanalytics.v1beta.BigQueryTableReferenceB\x03\xe0\x41\x02\"\xa7\x01\n\x16\x42igQueryTableReference\x12\x17\n\nproject_id\x18\x01 \x01(\tB\x03\xe0\x41\x02\x12\x17\n\ndataset_id\x18\x03 \x01(\tB\x03\xe0\x41\x02\x12\x15\n\x08table_id\x18\x04 \x01(\tB\x03\xe0\x41\x02\x12\x44\n\x06schema\x18\x06 \x01(\x0b\x32/.google.cloud.geminidataanalytics.v1beta.SchemaB\x03\xe0\x41\x01\"{\n\x1aStudioDatasourceReferences\x12]\n\x11studio_references\x18\x02 \x03(\x0b\x32\x42.google.cloud.geminidataanalytics.v1beta.StudioDatasourceReference\"7\n\x19StudioDatasourceReference\x12\x1a\n\rdatasource_id\x18\x01 \x01(\tB\x03\xe0\x41\x02\"\xcb\x01\n\x17LookerExploreReferences\x12`\n\x12\x65xplore_references\x18\x01 \x03(\x0b\x32?.google.cloud.geminidataanalytics.v1beta.LookerExploreReferenceB\x03\xe0\x41\x02\x12N\n\x0b\x63redentials\x18\x02 \x01(\x0b\x32\x34.google.cloud.geminidataanalytics.v1beta.CredentialsB\x03\xe0\x41\x01\"\xa6\x02\n\x16LookerExploreReference\x12\x1d\n\x13looker_instance_uri\x18\t \x01(\tH\x00\x12j\n\x1cprivate_looker_instance_info\x18\n \x01(\x0b\x32\x42.google.cloud.geminidataanalytics.v1beta.PrivateLookerInstanceInfoH\x00\x12\x19\n\x0clookml_model\x18\x04 \x01(\tB\x03\xe0\x41\x02\x12\x14\n\x07\x65xplore\x18\x05 \x01(\tB\x03\xe0\x41\x02\x12\x44\n\x06schema\x18\x08 \x01(\x0b\x32/.google.cloud.geminidataanalytics.v1beta.SchemaB\x03\xe0\x41\x01\x42\n\n\x08instance\"W\n\x19PrivateLookerInstanceInfo\x12\x1a\n\x12looker_instance_id\x18\x01 \x01(\t\x12\x1e\n\x16service_directory_name\x18\x02 \x01(\t\"\xc9\x02\n\nDatasource\x12\x63\n\x18\x62igquery_table_reference\x18\x01 \x01(\x0b\x32?.google.cloud.geminidataanalytics.v1beta.BigQueryTableReferenceH\x00\x12\x1e\n\x14studio_datasource_id\x18\x02 \x01(\tH\x00\x12\x63\n\x18looker_explore_reference\x18\x04 \x01(\x0b\x32?.google.cloud.geminidataanalytics.v1beta.LookerExploreReferenceH\x00\x12\x44\n\x06schema\x18\x07 \x01(\x0b\x32/.google.cloud.geminidataanalytics.v1beta.SchemaB\x03\xe0\x41\x01\x42\x0b\n\treference\"\xf7\x01\n\x06Schema\x12\x43\n\x06\x66ields\x18\x01 \x03(\x0b\x32..google.cloud.geminidataanalytics.v1beta.FieldB\x03\xe0\x41\x01\x12\x18\n\x0b\x64\x65scription\x18\x02 \x01(\tB\x03\xe0\x41\x01\x12\x15\n\x08synonyms\x18\x03 \x03(\tB\x03\xe0\x41\x01\x12\x11\n\x04tags\x18\x04 \x03(\tB\x03\xe0\x41\x01\x12\x19\n\x0c\x64isplay_name\x18\x05 \x01(\tB\x03\xe0\x41\x01\x12I\n\x07\x66ilters\x18\x06 \x03(\x0b\x32\x33.google.cloud.geminidataanalytics.v1beta.DataFilterB\x03\xe0\x41\x01\"\x99\x02\n\x05\x46ield\x12\x11\n\x04name\x18\x01 \x01(\tB\x03\xe0\x41\x01\x12\x11\n\x04type\x18\x02 \x01(\tB\x03\xe0\x41\x01\x12\x18\n\x0b\x64\x65scription\x18\x03 \x01(\tB\x03\xe0\x41\x01\x12\x11\n\x04mode\x18\x04 \x01(\tB\x03\xe0\x41\x01\x12\x15\n\x08synonyms\x18\x06 \x03(\tB\x03\xe0\x41\x01\x12\x11\n\x04tags\x18\x07 \x03(\tB\x03\xe0\x41\x01\x12\x19\n\x0c\x64isplay_name\x18\x08 \x01(\tB\x03\xe0\x41\x01\x12\x46\n\tsubfields\x18\t \x03(\x0b\x32..google.cloud.geminidataanalytics.v1beta.FieldB\x03\xe0\x41\x01\x12\x15\n\x08\x63\x61tegory\x18\n \x01(\tB\x03\xe0\x41\x01\x12\x19\n\x0cvalue_format\x18\x0b \x01(\tB\x03\xe0\x41\x01\"\x80\x01\n\nDataFilter\x12\x12\n\x05\x66ield\x18\x01 \x01(\tB\x03\xe0\x41\x01\x12\x12\n\x05value\x18\x02 \x01(\tB\x03\xe0\x41\x01\x12J\n\x04type\x18\x03 \x01(\x0e\x32\x37.google.cloud.geminidataanalytics.v1beta.DataFilterTypeB\x03\xe0\x41\x01*E\n\x0e\x44\x61taFilterType\x12 \n\x1c\x44\x41TA_FILTER_TYPE_UNSPECIFIED\x10\x00\x12\x11\n\rALWAYS_FILTER\x10\x01\x42\xa0\x02\n+com.google.cloud.geminidataanalytics.v1betaB\x0f\x44\x61tasourceProtoP\x01Z]cloud.google.com/go/geminidataanalytics/apiv1beta/geminidataanalyticspb;geminidataanalyticspb\xaa\x02\'Google.Cloud.GeminiDataAnalytics.V1Beta\xca\x02\'Google\\Cloud\\GeminiDataAnalytics\\V1beta\xea\x02*Google::Cloud::GeminiDataAnalytics::V1betab\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.cloud.geminidataanalytics.v1beta.Credentials", "google/cloud/geminidataanalytics/v1beta/credentials.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module GeminiDataAnalytics
      module V1beta
        DatasourceReferences = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.geminidataanalytics.v1beta.DatasourceReferences").msgclass
        BigQueryTableReferences = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.geminidataanalytics.v1beta.BigQueryTableReferences").msgclass
        BigQueryTableReference = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.geminidataanalytics.v1beta.BigQueryTableReference").msgclass
        StudioDatasourceReferences = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.geminidataanalytics.v1beta.StudioDatasourceReferences").msgclass
        StudioDatasourceReference = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.geminidataanalytics.v1beta.StudioDatasourceReference").msgclass
        LookerExploreReferences = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.geminidataanalytics.v1beta.LookerExploreReferences").msgclass
        LookerExploreReference = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.geminidataanalytics.v1beta.LookerExploreReference").msgclass
        PrivateLookerInstanceInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.geminidataanalytics.v1beta.PrivateLookerInstanceInfo").msgclass
        Datasource = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.geminidataanalytics.v1beta.Datasource").msgclass
        Schema = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.geminidataanalytics.v1beta.Schema").msgclass
        Field = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.geminidataanalytics.v1beta.Field").msgclass
        DataFilter = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.geminidataanalytics.v1beta.DataFilter").msgclass
        DataFilterType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.geminidataanalytics.v1beta.DataFilterType").enummodule
      end
    end
  end
end
