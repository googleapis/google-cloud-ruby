# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/source/v1/source_context.proto

require 'google/protobuf'


descriptor_data = "\n.google/devtools/source/v1/source_context.proto\x12\x19google.devtools.source.v1\"\xb4\x02\n\rSourceContext\x12G\n\ncloud_repo\x18\x01 \x01(\x0b\x32\x31.google.devtools.source.v1.CloudRepoSourceContextH\x00\x12Q\n\x0f\x63loud_workspace\x18\x02 \x01(\x0b\x32\x36.google.devtools.source.v1.CloudWorkspaceSourceContextH\x00\x12@\n\x06gerrit\x18\x03 \x01(\x0b\x32..google.devtools.source.v1.GerritSourceContextH\x00\x12:\n\x03git\x18\x06 \x01(\x0b\x32+.google.devtools.source.v1.GitSourceContextH\x00\x42\t\n\x07\x63ontext\"\xcf\x01\n\x15\x45xtendedSourceContext\x12\x39\n\x07\x63ontext\x18\x01 \x01(\x0b\x32(.google.devtools.source.v1.SourceContext\x12L\n\x06labels\x18\x02 \x03(\x0b\x32<.google.devtools.source.v1.ExtendedSourceContext.LabelsEntry\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x8c\x01\n\x0c\x41liasContext\x12:\n\x04kind\x18\x01 \x01(\x0e\x32,.google.devtools.source.v1.AliasContext.Kind\x12\x0c\n\x04name\x18\x02 \x01(\t\"2\n\x04Kind\x12\x07\n\x03\x41NY\x10\x00\x12\t\n\x05\x46IXED\x10\x01\x12\x0b\n\x07MOVABLE\x10\x02\x12\t\n\x05OTHER\x10\x04\"\xcb\x01\n\x16\x43loudRepoSourceContext\x12\x32\n\x07repo_id\x18\x01 \x01(\x0b\x32!.google.devtools.source.v1.RepoId\x12\x15\n\x0brevision_id\x18\x02 \x01(\tH\x00\x12\x18\n\nalias_name\x18\x03 \x01(\tB\x02\x18\x01H\x00\x12@\n\ralias_context\x18\x04 \x01(\x0b\x32\'.google.devtools.source.v1.AliasContextH\x00\x42\n\n\x08revision\"u\n\x1b\x43loudWorkspaceSourceContext\x12\x41\n\x0cworkspace_id\x18\x01 \x01(\x0b\x32+.google.devtools.source.v1.CloudWorkspaceId\x12\x13\n\x0bsnapshot_id\x18\x02 \x01(\t\"\xbe\x01\n\x13GerritSourceContext\x12\x10\n\x08host_uri\x18\x01 \x01(\t\x12\x16\n\x0egerrit_project\x18\x02 \x01(\t\x12\x15\n\x0brevision_id\x18\x03 \x01(\tH\x00\x12\x18\n\nalias_name\x18\x04 \x01(\tB\x02\x18\x01H\x00\x12@\n\ralias_context\x18\x05 \x01(\x0b\x32\'.google.devtools.source.v1.AliasContextH\x00\x42\n\n\x08revision\"4\n\x10GitSourceContext\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x13\n\x0brevision_id\x18\x02 \x01(\t\"b\n\x06RepoId\x12\x43\n\x0fproject_repo_id\x18\x01 \x01(\x0b\x32(.google.devtools.source.v1.ProjectRepoIdH\x00\x12\r\n\x03uid\x18\x02 \x01(\tH\x00\x42\x04\n\x02id\"6\n\rProjectRepoId\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x11\n\trepo_name\x18\x02 \x01(\t\"T\n\x10\x43loudWorkspaceId\x12\x32\n\x07repo_id\x18\x01 \x01(\x0b\x32!.google.devtools.source.v1.RepoId\x12\x0c\n\x04name\x18\x02 \x01(\tB\xbd\x01\n\x1d\x63om.google.devtools.source.v1B\x12SourceContextProtoP\x01Z?google.golang.org/genproto/googleapis/devtools/source/v1;source\xf8\x01\x01\xaa\x02\x1fGoogle.Cloud.DevTools.Source.V1\xca\x02\x1fGoogle\\Cloud\\DevTools\\Source\\V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Devtools
    module Source
      module V1
        SourceContext = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.devtools.source.v1.SourceContext").msgclass
        ExtendedSourceContext = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.devtools.source.v1.ExtendedSourceContext").msgclass
        AliasContext = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.devtools.source.v1.AliasContext").msgclass
        AliasContext::Kind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.devtools.source.v1.AliasContext.Kind").enummodule
        CloudRepoSourceContext = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.devtools.source.v1.CloudRepoSourceContext").msgclass
        CloudWorkspaceSourceContext = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.devtools.source.v1.CloudWorkspaceSourceContext").msgclass
        GerritSourceContext = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.devtools.source.v1.GerritSourceContext").msgclass
        GitSourceContext = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.devtools.source.v1.GitSourceContext").msgclass
        RepoId = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.devtools.source.v1.RepoId").msgclass
        ProjectRepoId = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.devtools.source.v1.ProjectRepoId").msgclass
        CloudWorkspaceId = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.devtools.source.v1.CloudWorkspaceId").msgclass
      end
    end
  end
end
