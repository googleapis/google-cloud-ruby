# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1/completion.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'


descriptor_data = "\n0google/cloud/discoveryengine/v1/completion.proto\x12\x1fgoogle.cloud.discoveryengine.v1\x1a\x1fgoogle/api/field_behavior.proto\"\xe9\x01\n\x17SuggestionDenyListEntry\x12\x19\n\x0c\x62lock_phrase\x18\x01 \x01(\tB\x03\xe0\x41\x02\x12\x63\n\x0ematch_operator\x18\x02 \x01(\x0e\x32\x46.google.cloud.discoveryengine.v1.SuggestionDenyListEntry.MatchOperatorB\x03\xe0\x41\x02\"N\n\rMatchOperator\x12\x1e\n\x1aMATCH_OPERATOR_UNSPECIFIED\x10\x00\x12\x0f\n\x0b\x45XACT_MATCH\x10\x01\x12\x0c\n\x08\x43ONTAINS\x10\x02\"\xc7\x01\n\x14\x43ompletionSuggestion\x12\x16\n\x0cglobal_score\x18\x02 \x01(\x01H\x00\x12\x13\n\tfrequency\x18\x03 \x01(\x03H\x00\x12\x17\n\nsuggestion\x18\x01 \x01(\tB\x03\xe0\x41\x02\x12\x15\n\rlanguage_code\x18\x04 \x01(\t\x12\x10\n\x08group_id\x18\x05 \x01(\t\x12\x13\n\x0bgroup_score\x18\x06 \x01(\x01\x12\x1b\n\x13\x61lternative_phrases\x18\x07 \x03(\tB\x0e\n\x0cranking_infoB\x82\x02\n#com.google.cloud.discoveryengine.v1B\x0f\x43ompletionProtoP\x01ZMcloud.google.com/go/discoveryengine/apiv1/discoveryenginepb;discoveryenginepb\xa2\x02\x0f\x44ISCOVERYENGINE\xaa\x02\x1fGoogle.Cloud.DiscoveryEngine.V1\xca\x02\x1fGoogle\\Cloud\\DiscoveryEngine\\V1\xea\x02\"Google::Cloud::DiscoveryEngine::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module DiscoveryEngine
      module V1
        SuggestionDenyListEntry = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1.SuggestionDenyListEntry").msgclass
        SuggestionDenyListEntry::MatchOperator = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1.SuggestionDenyListEntry.MatchOperator").enummodule
        CompletionSuggestion = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1.CompletionSuggestion").msgclass
      end
    end
  end
end
