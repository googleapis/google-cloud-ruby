# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1/user_license.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'
require 'google/protobuf/timestamp_pb'


descriptor_data = "\n2google/cloud/discoveryengine/v1/user_license.proto\x12\x1fgoogle.cloud.discoveryengine.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xbb\x04\n\x0bUserLicense\x12\x1e\n\x0euser_principal\x18\x01 \x01(\tB\x06\xe0\x41\x05\xe0\x41\x02\x12\x19\n\x0cuser_profile\x18\x03 \x01(\tB\x03\xe0\x41\x01\x12j\n\x18license_assignment_state\x18\x04 \x01(\x0e\x32\x43.google.cloud.discoveryengine.v1.UserLicense.LicenseAssignmentStateB\x03\xe0\x41\x03\x12L\n\x0elicense_config\x18\x05 \x01(\tB4\xe0\x41\x01\xfa\x41.\n,discoveryengine.googleapis.com/LicenseConfig\x12\x34\n\x0b\x63reate_time\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x34\n\x0bupdate_time\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x38\n\x0flast_login_time\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\"\x90\x01\n\x16LicenseAssignmentState\x12(\n$LICENSE_ASSIGNMENT_STATE_UNSPECIFIED\x10\x00\x12\x0c\n\x08\x41SSIGNED\x10\x01\x12\x0e\n\nUNASSIGNED\x10\x02\x12\x0e\n\nNO_LICENSE\x10\x03\x12\x1e\n\x1aNO_LICENSE_ATTEMPTED_LOGIN\x10\x04\x42\x83\x02\n#com.google.cloud.discoveryengine.v1B\x10UserLicenseProtoP\x01ZMcloud.google.com/go/discoveryengine/apiv1/discoveryenginepb;discoveryenginepb\xa2\x02\x0f\x44ISCOVERYENGINE\xaa\x02\x1fGoogle.Cloud.DiscoveryEngine.V1\xca\x02\x1fGoogle\\Cloud\\DiscoveryEngine\\V1\xea\x02\"Google::Cloud::DiscoveryEngine::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.protobuf.Timestamp", "google/protobuf/timestamp.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module DiscoveryEngine
      module V1
        UserLicense = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1.UserLicense").msgclass
        UserLicense::LicenseAssignmentState = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1.UserLicense.LicenseAssignmentState").enummodule
      end
    end
  end
end
