# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1/user_license_service.proto

require 'google/protobuf'

require 'google/api/annotations_pb'
require 'google/api/client_pb'
require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'
require 'google/cloud/discoveryengine/v1/user_license_pb'
require 'google/longrunning/operations_pb'
require 'google/protobuf/field_mask_pb'
require 'google/protobuf/timestamp_pb'
require 'google/rpc/status_pb'


descriptor_data = "\n:google/cloud/discoveryengine/v1/user_license_service.proto\x12\x1fgoogle.cloud.discoveryengine.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\x32google/cloud/discoveryengine/v1/user_license.proto\x1a#google/longrunning/operations.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17google/rpc/status.proto\"\xa1\x01\n\x17ListUserLicensesRequest\x12@\n\x06parent\x18\x01 \x01(\tB0\xe0\x41\x02\xfa\x41*\n(discoveryengine.googleapis.com/UserStore\x12\x16\n\tpage_size\x18\x02 \x01(\x05\x42\x03\xe0\x41\x01\x12\x17\n\npage_token\x18\x03 \x01(\tB\x03\xe0\x41\x01\x12\x13\n\x06\x66ilter\x18\x04 \x01(\tB\x03\xe0\x41\x01\"x\n\x18ListUserLicensesResponse\x12\x43\n\ruser_licenses\x18\x01 \x03(\x0b\x32,.google.cloud.discoveryengine.v1.UserLicense\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"\x92\x03\n\x1e\x42\x61tchUpdateUserLicensesRequest\x12\x65\n\rinline_source\x18\x02 \x01(\x0b\x32L.google.cloud.discoveryengine.v1.BatchUpdateUserLicensesRequest.InlineSourceH\x00\x12@\n\x06parent\x18\x01 \x01(\tB0\xe0\x41\x02\xfa\x41*\n(discoveryengine.googleapis.com/UserStore\x12,\n\x1f\x64\x65lete_unassigned_user_licenses\x18\x04 \x01(\x08\x42\x03\xe0\x41\x01\x1a\x8e\x01\n\x0cInlineSource\x12H\n\ruser_licenses\x18\x01 \x03(\x0b\x32,.google.cloud.discoveryengine.v1.UserLicenseB\x03\xe0\x41\x02\x12\x34\n\x0bupdate_mask\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.FieldMaskB\x03\xe0\x41\x01\x42\x08\n\x06source\"\xb1\x01\n\x1f\x42\x61tchUpdateUserLicensesMetadata\x12/\n\x0b\x63reate_time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\x0bupdate_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x15\n\rsuccess_count\x18\x03 \x01(\x03\x12\x15\n\rfailure_count\x18\x04 \x01(\x03\"\x91\x01\n\x1f\x42\x61tchUpdateUserLicensesResponse\x12\x43\n\ruser_licenses\x18\x01 \x03(\x0b\x32,.google.cloud.discoveryengine.v1.UserLicense\x12)\n\rerror_samples\x18\x02 \x03(\x0b\x32\x12.google.rpc.Status2\x9a\x05\n\x12UserLicenseService\x12\xd7\x01\n\x10ListUserLicenses\x12\x38.google.cloud.discoveryengine.v1.ListUserLicensesRequest\x1a\x39.google.cloud.discoveryengine.v1.ListUserLicensesResponse\"N\xda\x41\x06parent\x82\xd3\xe4\x93\x02?\x12=/v1/{parent=projects/*/locations/*/userStores/*}/userLicenses\x12\xd5\x02\n\x17\x42\x61tchUpdateUserLicenses\x12?.google.cloud.discoveryengine.v1.BatchUpdateUserLicensesRequest\x1a\x1d.google.longrunning.Operation\"\xd9\x01\xca\x41\x82\x01\n?google.cloud.discoveryengine.v1.BatchUpdateUserLicensesResponse\x12?google.cloud.discoveryengine.v1.BatchUpdateUserLicensesMetadata\x82\xd3\xe4\x93\x02M\"H/v1/{parent=projects/*/locations/*/userStores/*}:batchUpdateUserLicenses:\x01*\x1aR\xca\x41\x1e\x64iscoveryengine.googleapis.com\xd2\x41.https://www.googleapis.com/auth/cloud-platformB\x8a\x02\n#com.google.cloud.discoveryengine.v1B\x17UserLicenseServiceProtoP\x01ZMcloud.google.com/go/discoveryengine/apiv1/discoveryenginepb;discoveryenginepb\xa2\x02\x0f\x44ISCOVERYENGINE\xaa\x02\x1fGoogle.Cloud.DiscoveryEngine.V1\xca\x02\x1fGoogle\\Cloud\\DiscoveryEngine\\V1\xea\x02\"Google::Cloud::DiscoveryEngine::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.cloud.discoveryengine.v1.UserLicense", "google/cloud/discoveryengine/v1/user_license.proto"],
    ["google.protobuf.FieldMask", "google/protobuf/field_mask.proto"],
    ["google.protobuf.Timestamp", "google/protobuf/timestamp.proto"],
    ["google.rpc.Status", "google/rpc/status.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module DiscoveryEngine
      module V1
        ListUserLicensesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1.ListUserLicensesRequest").msgclass
        ListUserLicensesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1.ListUserLicensesResponse").msgclass
        BatchUpdateUserLicensesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1.BatchUpdateUserLicensesRequest").msgclass
        BatchUpdateUserLicensesRequest::InlineSource = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1.BatchUpdateUserLicensesRequest.InlineSource").msgclass
        BatchUpdateUserLicensesMetadata = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1.BatchUpdateUserLicensesMetadata").msgclass
        BatchUpdateUserLicensesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1.BatchUpdateUserLicensesResponse").msgclass
      end
    end
  end
end
