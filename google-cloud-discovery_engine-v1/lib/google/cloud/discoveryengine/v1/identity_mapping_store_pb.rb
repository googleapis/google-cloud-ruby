# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1/identity_mapping_store.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'
require 'google/cloud/discoveryengine/v1/cmek_config_service_pb'


descriptor_data = "\n<google/cloud/discoveryengine/v1/identity_mapping_store.proto\x12\x1fgoogle.cloud.discoveryengine.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\x39google/cloud/discoveryengine/v1/cmek_config_service.proto\"\x9f\x02\n\x14IdentityMappingStore\x12\x11\n\x04name\x18\x01 \x01(\tB\x03\xe0\x41\x05\x12\x19\n\x0ckms_key_name\x18\x03 \x01(\tB\x03\xe0\x41\x04\x12\x45\n\x0b\x63mek_config\x18\x04 \x01(\x0b\x32+.google.cloud.discoveryengine.v1.CmekConfigB\x03\xe0\x41\x03:\x91\x01\xea\x41\x8d\x01\n3discoveryengine.googleapis.com/IdentityMappingStore\x12Vprojects/{project}/locations/{location}/identityMappingStores/{identity_mapping_store}\"u\n\x14IdentityMappingEntry\x12\x11\n\x07user_id\x18\x02 \x01(\tH\x00\x12\x12\n\x08group_id\x18\x03 \x01(\tH\x00\x12\x1e\n\x11\x65xternal_identity\x18\x01 \x01(\tB\x03\xe0\x41\x02\x42\x16\n\x14identity_provider_idB\x8c\x02\n#com.google.cloud.discoveryengine.v1B\x19IdentityMappingStoreProtoP\x01ZMcloud.google.com/go/discoveryengine/apiv1/discoveryenginepb;discoveryenginepb\xa2\x02\x0f\x44ISCOVERYENGINE\xaa\x02\x1fGoogle.Cloud.DiscoveryEngine.V1\xca\x02\x1fGoogle\\Cloud\\DiscoveryEngine\\V1\xea\x02\"Google::Cloud::DiscoveryEngine::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.cloud.discoveryengine.v1.CmekConfig", "google/cloud/discoveryengine/v1/cmek_config_service.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module DiscoveryEngine
      module V1
        IdentityMappingStore = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1.IdentityMappingStore").msgclass
        IdentityMappingEntry = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1.IdentityMappingEntry").msgclass
      end
    end
  end
end
