# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: spanner.proto for package 'spanner_bench'
# Original file comments:
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'spanner_pb'

module SpannerBench
  module SpannerBenchWrapper
    class Service

      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'spanner_bench.SpannerBenchWrapper'

      # Read represents operations like Go's ReadOnlyTransaction.Query, Java's
      # ReadOnlyTransaction.executeQuery, Python's snapshot.read, and Node's
      # Transaction.Read.
      #
      # It will typically be used to read many items.
      rpc :Read, ::SpannerBench::ReadQuery, ::SpannerBench::EmptyResponse
      # Insert represents operations like Go's Client.Apply, Java's
      # DatabaseClient.writeAtLeastOnce, Python's transaction.commit, and Node's
      # Transaction.Commit.
      #
      # It will typically be used to insert many items.
      rpc :Insert, ::SpannerBench::InsertQuery, ::SpannerBench::EmptyResponse
      # Update represents operations like Go's ReadWriteTransaction.BatchUpdate,
      # Java's TransactionRunner.run, Python's Batch.update, and Node's
      # Transaction.BatchUpdate.
      #
      # It will typically be used to update many items.
      rpc :Update, ::SpannerBench::UpdateQuery, ::SpannerBench::EmptyResponse
    end

    Stub = Service.rpc_stub_class
  end
end
