# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/recaptchaenterprise/v1beta1/recaptchaenterprise.proto

require 'google/protobuf'

require 'google/api/annotations_pb'
require 'google/api/client_pb'
require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'
require 'google/protobuf/empty_pb'
require 'google/protobuf/field_mask_pb'
require 'google/protobuf/timestamp_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("google/cloud/recaptchaenterprise/v1beta1/recaptchaenterprise.proto", :syntax => :proto3) do
    add_message "google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest" do
      optional :parent, :string, 1
      optional :assessment, :message, 2, "google.cloud.recaptchaenterprise.v1beta1.Assessment"
    end
    add_message "google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest" do
      optional :name, :string, 1
      optional :annotation, :enum, 2, "google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.Annotation"
    end
    add_enum "google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.Annotation" do
      value :ANNOTATION_UNSPECIFIED, 0
      value :LEGITIMATE, 1
      value :FRAUDULENT, 2
    end
    add_message "google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse" do
    end
    add_message "google.cloud.recaptchaenterprise.v1beta1.Assessment" do
      optional :name, :string, 1
      optional :event, :message, 2, "google.cloud.recaptchaenterprise.v1beta1.Event"
      optional :score, :float, 3
      optional :token_properties, :message, 4, "google.cloud.recaptchaenterprise.v1beta1.TokenProperties"
      repeated :reasons, :enum, 5, "google.cloud.recaptchaenterprise.v1beta1.Assessment.ClassificationReason"
    end
    add_enum "google.cloud.recaptchaenterprise.v1beta1.Assessment.ClassificationReason" do
      value :CLASSIFICATION_REASON_UNSPECIFIED, 0
      value :AUTOMATION, 1
      value :UNEXPECTED_ENVIRONMENT, 2
      value :TOO_MUCH_TRAFFIC, 3
      value :UNEXPECTED_USAGE_PATTERNS, 4
      value :LOW_CONFIDENCE_SCORE, 5
    end
    add_message "google.cloud.recaptchaenterprise.v1beta1.Event" do
      optional :token, :string, 1
      optional :site_key, :string, 2
      optional :user_agent, :string, 3
      optional :user_ip_address, :string, 4
      optional :expected_action, :string, 5
    end
    add_message "google.cloud.recaptchaenterprise.v1beta1.TokenProperties" do
      optional :valid, :bool, 1
      optional :invalid_reason, :enum, 2, "google.cloud.recaptchaenterprise.v1beta1.TokenProperties.InvalidReason"
      optional :create_time, :message, 3, "google.protobuf.Timestamp"
      optional :hostname, :string, 4
      optional :action, :string, 5
    end
    add_enum "google.cloud.recaptchaenterprise.v1beta1.TokenProperties.InvalidReason" do
      value :INVALID_REASON_UNSPECIFIED, 0
      value :UNKNOWN_INVALID_REASON, 1
      value :MALFORMED, 2
      value :EXPIRED, 3
      value :DUPE, 4
      value :SITE_MISMATCH, 5
      value :MISSING, 6
    end
    add_message "google.cloud.recaptchaenterprise.v1beta1.CreateKeyRequest" do
      optional :parent, :string, 1
      optional :key, :message, 2, "google.cloud.recaptchaenterprise.v1beta1.Key"
    end
    add_message "google.cloud.recaptchaenterprise.v1beta1.ListKeysRequest" do
      optional :parent, :string, 1
      optional :page_size, :int32, 2
      optional :page_token, :string, 3
    end
    add_message "google.cloud.recaptchaenterprise.v1beta1.ListKeysResponse" do
      repeated :keys, :message, 1, "google.cloud.recaptchaenterprise.v1beta1.Key"
      optional :next_page_token, :string, 2
    end
    add_message "google.cloud.recaptchaenterprise.v1beta1.GetKeyRequest" do
      optional :name, :string, 1
    end
    add_message "google.cloud.recaptchaenterprise.v1beta1.UpdateKeyRequest" do
      optional :key, :message, 1, "google.cloud.recaptchaenterprise.v1beta1.Key"
      optional :update_mask, :message, 2, "google.protobuf.FieldMask"
    end
    add_message "google.cloud.recaptchaenterprise.v1beta1.DeleteKeyRequest" do
      optional :name, :string, 1
    end
    add_message "google.cloud.recaptchaenterprise.v1beta1.Key" do
      optional :name, :string, 1
      optional :display_name, :string, 2
      oneof :platform_settings do
        optional :web_settings, :message, 3, "google.cloud.recaptchaenterprise.v1beta1.WebKeySettings"
        optional :android_settings, :message, 4, "google.cloud.recaptchaenterprise.v1beta1.AndroidKeySettings"
        optional :ios_settings, :message, 5, "google.cloud.recaptchaenterprise.v1beta1.IOSKeySettings"
      end
    end
    add_message "google.cloud.recaptchaenterprise.v1beta1.WebKeySettings" do
      optional :enforce_allowed_domains, :bool, 3
      repeated :allowed_domains, :string, 1
      optional :allow_amp_traffic, :bool, 2
      optional :integration_type, :enum, 4, "google.cloud.recaptchaenterprise.v1beta1.WebKeySettings.IntegrationType"
      optional :challenge_security_preference, :enum, 5, "google.cloud.recaptchaenterprise.v1beta1.WebKeySettings.ChallengeSecurityPreference"
    end
    add_enum "google.cloud.recaptchaenterprise.v1beta1.WebKeySettings.IntegrationType" do
      value :INTEGRATION_TYPE_UNSPECIFIED, 0
      value :SCORE_ONLY, 1
      value :CHECKBOX_CHALLENGE, 2
      value :INVISIBLE_CHALLENGE, 3
    end
    add_enum "google.cloud.recaptchaenterprise.v1beta1.WebKeySettings.ChallengeSecurityPreference" do
      value :CHALLENGE_SECURITY_PREFERENCE_UNSPECIFIED, 0
      value :USABILITY, 1
      value :BALANCED, 2
      value :SECURITY, 3
    end
    add_message "google.cloud.recaptchaenterprise.v1beta1.AndroidKeySettings" do
      repeated :allowed_package_names, :string, 1
    end
    add_message "google.cloud.recaptchaenterprise.v1beta1.IOSKeySettings" do
      repeated :allowed_bundle_ids, :string, 1
    end
  end
end

module Google
  module Cloud
    module RecaptchaEnterprise
      module V1beta1
        CreateAssessmentRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest").msgclass
        AnnotateAssessmentRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest").msgclass
        AnnotateAssessmentRequest::Annotation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.Annotation").enummodule
        AnnotateAssessmentResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse").msgclass
        Assessment = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.Assessment").msgclass
        Assessment::ClassificationReason = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.Assessment.ClassificationReason").enummodule
        Event = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.Event").msgclass
        TokenProperties = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.TokenProperties").msgclass
        TokenProperties::InvalidReason = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.TokenProperties.InvalidReason").enummodule
        CreateKeyRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.CreateKeyRequest").msgclass
        ListKeysRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.ListKeysRequest").msgclass
        ListKeysResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.ListKeysResponse").msgclass
        GetKeyRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.GetKeyRequest").msgclass
        UpdateKeyRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.UpdateKeyRequest").msgclass
        DeleteKeyRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.DeleteKeyRequest").msgclass
        Key = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.Key").msgclass
        WebKeySettings = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.WebKeySettings").msgclass
        WebKeySettings::IntegrationType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.WebKeySettings.IntegrationType").enummodule
        WebKeySettings::ChallengeSecurityPreference = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.WebKeySettings.ChallengeSecurityPreference").enummodule
        AndroidKeySettings = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.AndroidKeySettings").msgclass
        IOSKeySettings = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.recaptchaenterprise.v1beta1.IOSKeySettings").msgclass
      end
    end
  end
end
