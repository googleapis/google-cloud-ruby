# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/video/stitcher/v1/vod_configs.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'
require 'google/cloud/video/stitcher/v1/fetch_options_pb'


descriptor_data = "\n0google/cloud/video/stitcher/v1/vod_configs.proto\x12\x1egoogle.cloud.video.stitcher.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\x32google/cloud/video/stitcher/v1/fetch_options.proto\"\xe1\x03\n\tVodConfig\x12\x11\n\x04name\x18\x01 \x01(\tB\x03\xe0\x41\x03\x12\x17\n\nsource_uri\x18\x02 \x01(\tB\x03\xe0\x41\x02\x12\x17\n\nad_tag_uri\x18\x03 \x01(\tB\x03\xe0\x41\x02\x12I\n\x0egam_vod_config\x18\x04 \x01(\x0b\x32,.google.cloud.video.stitcher.v1.GamVodConfigB\x03\xe0\x41\x01\x12\x43\n\x05state\x18\x05 \x01(\x0e\x32/.google.cloud.video.stitcher.v1.VodConfig.StateB\x03\xe0\x41\x03\x12J\n\x14source_fetch_options\x18\x08 \x01(\x0b\x32,.google.cloud.video.stitcher.v1.FetchOptions\"E\n\x05State\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\x0c\n\x08\x43REATING\x10\x01\x12\t\n\x05READY\x10\x02\x12\x0c\n\x08\x44\x45LETING\x10\x03:l\xea\x41i\n&videostitcher.googleapis.com/VodConfig\x12?projects/{project}/locations/{location}/vodConfigs/{vod_config}\")\n\x0cGamVodConfig\x12\x19\n\x0cnetwork_code\x18\x01 \x01(\tB\x03\xe0\x41\x02\x42w\n\"com.google.cloud.video.stitcher.v1B\x0fVodConfigsProtoP\x01Z>cloud.google.com/go/video/stitcher/apiv1/stitcherpb;stitcherpbb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.cloud.video.stitcher.v1.FetchOptions", "google/cloud/video/stitcher/v1/fetch_options.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module Video
      module Stitcher
        module V1
          VodConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.video.stitcher.v1.VodConfig").msgclass
          VodConfig::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.video.stitcher.v1.VodConfig.State").enummodule
          GamVodConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.video.stitcher.v1.GamVodConfig").msgclass
        end
      end
    end
  end
end
