# frozen_string_literal: true

# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!

require "google/cloud/dialogflow/cx/v3/pages/rest"
require "google/cloud/dialogflow/cx/v3/flows/rest"
require "google/cloud/dialogflow/cx/v3/agents/rest"
require "google/cloud/dialogflow/cx/v3/changelogs/rest"
require "google/cloud/dialogflow/cx/v3/deployments/rest"
require "google/cloud/dialogflow/cx/v3/entity_types/rest"
require "google/cloud/dialogflow/cx/v3/intents/rest"
require "google/cloud/dialogflow/cx/v3/session_entity_types/rest"
require "google/cloud/dialogflow/cx/v3/sessions/rest"
require "google/cloud/dialogflow/cx/v3/transition_route_groups/rest"
require "google/cloud/dialogflow/cx/v3/test_cases/rest"
require "google/cloud/dialogflow/cx/v3/webhooks/rest"
require "google/cloud/dialogflow/cx/v3/environments/rest"
require "google/cloud/dialogflow/cx/v3/experiments/rest"
require "google/cloud/dialogflow/cx/v3/security_settings_service/rest"
require "google/cloud/dialogflow/cx/v3/versions/rest"
require "google/cloud/dialogflow/cx/v3/bindings_override"
require "google/cloud/dialogflow/cx/v3/version"

module Google
  module Cloud
    module Dialogflow
      module CX
        ##
        # To load just the REST part of this package, including all its services, and instantiate a REST client:
        #
        # @example
        #
        #     require "google/cloud/dialogflow/cx/v3/rest"
        #     client = ::Google::Cloud::Dialogflow::CX::V3::Pages::Rest::Client.new
        #
        module V3
        end
      end
    end
  end
end
