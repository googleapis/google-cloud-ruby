# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/notebook_software_config.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/cloud/aiplatform/v1/env_var_pb'


descriptor_data = "\n9google/cloud/aiplatform/v1/notebook_software_config.proto\x12\x1agoogle.cloud.aiplatform.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a(google/cloud/aiplatform/v1/env_var.proto\"\xec\x02\n\x17PostStartupScriptConfig\x12 \n\x13post_startup_script\x18\x01 \x01(\tB\x03\xe0\x41\x01\x12$\n\x17post_startup_script_url\x18\x02 \x01(\tB\x03\xe0\x41\x01\x12x\n\x1cpost_startup_script_behavior\x18\x03 \x01(\x0e\x32M.google.cloud.aiplatform.v1.PostStartupScriptConfig.PostStartupScriptBehaviorB\x03\xe0\x41\x01\"\x8e\x01\n\x19PostStartupScriptBehavior\x12,\n(POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED\x10\x00\x12\x0c\n\x08RUN_ONCE\x10\x01\x12\x13\n\x0fRUN_EVERY_START\x10\x02\x12 \n\x1c\x44OWNLOAD_AND_RUN_EVERY_START\x10\x03\"\xac\x01\n\x16NotebookSoftwareConfig\x12\x34\n\x03\x65nv\x18\x01 \x03(\x0b\x32\".google.cloud.aiplatform.v1.EnvVarB\x03\xe0\x41\x01\x12\\\n\x1apost_startup_script_config\x18\x02 \x01(\x0b\x32\x33.google.cloud.aiplatform.v1.PostStartupScriptConfigB\x03\xe0\x41\x01\x42\xd9\x01\n\x1e\x63om.google.cloud.aiplatform.v1B\x1bNotebookSoftwareConfigProtoP\x01Z>cloud.google.com/go/aiplatform/apiv1/aiplatformpb;aiplatformpb\xaa\x02\x1aGoogle.Cloud.AIPlatform.V1\xca\x02\x1aGoogle\\Cloud\\AIPlatform\\V1\xea\x02\x1dGoogle::Cloud::AIPlatform::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.cloud.aiplatform.v1.EnvVar", "google/cloud/aiplatform/v1/env_var.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module AIPlatform
      module V1
        PostStartupScriptConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.PostStartupScriptConfig").msgclass
        PostStartupScriptConfig::PostStartupScriptBehavior = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.PostStartupScriptConfig.PostStartupScriptBehavior").enummodule
        NotebookSoftwareConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.aiplatform.v1.NotebookSoftwareConfig").msgclass
      end
    end
  end
end
