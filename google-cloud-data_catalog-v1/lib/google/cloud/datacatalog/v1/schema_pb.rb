# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/datacatalog/v1/schema.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'


descriptor_data = "\n(google/cloud/datacatalog/v1/schema.proto\x12\x1bgoogle.cloud.datacatalog.v1\x1a\x1fgoogle/api/field_behavior.proto\"D\n\x06Schema\x12:\n\x07\x63olumns\x18\x02 \x03(\x0b\x32).google.cloud.datacatalog.v1.ColumnSchema\"\xda\x06\n\x0c\x43olumnSchema\x12\x14\n\x06\x63olumn\x18\x06 \x01(\tB\x04\xe2\x41\x01\x02\x12\x12\n\x04type\x18\x01 \x01(\tB\x04\xe2\x41\x01\x02\x12\x19\n\x0b\x64\x65scription\x18\x02 \x01(\tB\x04\xe2\x41\x01\x01\x12\x12\n\x04mode\x18\x03 \x01(\tB\x04\xe2\x41\x01\x01\x12\x1b\n\rdefault_value\x18\x08 \x01(\tB\x04\xe2\x41\x01\x01\x12\x1e\n\x10ordinal_position\x18\t \x01(\x05\x42\x04\xe2\x41\x01\x01\x12[\n\x15highest_indexing_type\x18\n \x01(\x0e\x32\x36.google.cloud.datacatalog.v1.ColumnSchema.IndexingTypeB\x04\xe2\x41\x01\x01\x12\x43\n\nsubcolumns\x18\x07 \x03(\x0b\x32).google.cloud.datacatalog.v1.ColumnSchemaB\x04\xe2\x41\x01\x01\x12X\n\x12looker_column_spec\x18\x12 \x01(\x0b\x32:.google.cloud.datacatalog.v1.ColumnSchema.LookerColumnSpecH\x00\x12\x15\n\x07gc_rule\x18\x0b \x01(\tB\x04\xe2\x41\x01\x01\x1a\xf2\x01\n\x10LookerColumnSpec\x12Y\n\x04type\x18\x01 \x01(\x0e\x32K.google.cloud.datacatalog.v1.ColumnSchema.LookerColumnSpec.LookerColumnType\"\x82\x01\n\x10LookerColumnType\x12\"\n\x1eLOOKER_COLUMN_TYPE_UNSPECIFIED\x10\x00\x12\r\n\tDIMENSION\x10\x01\x12\x13\n\x0f\x44IMENSION_GROUP\x10\x02\x12\n\n\x06\x46ILTER\x10\x03\x12\x0b\n\x07MEASURE\x10\x04\x12\r\n\tPARAMETER\x10\x05\"\x9c\x01\n\x0cIndexingType\x12\x1d\n\x19INDEXING_TYPE_UNSPECIFIED\x10\x00\x12\x16\n\x12INDEXING_TYPE_NONE\x10\x01\x12\x1c\n\x18INDEXING_TYPE_NON_UNIQUE\x10\x02\x12\x18\n\x14INDEXING_TYPE_UNIQUE\x10\x03\x12\x1d\n\x19INDEXING_TYPE_PRIMARY_KEY\x10\x04\x42\r\n\x0bsystem_specB\xc6\x01\n\x1f\x63om.google.cloud.datacatalog.v1P\x01ZAcloud.google.com/go/datacatalog/apiv1/datacatalogpb;datacatalogpb\xf8\x01\x01\xaa\x02\x1bGoogle.Cloud.DataCatalog.V1\xca\x02\x1bGoogle\\Cloud\\DataCatalog\\V1\xea\x02\x1eGoogle::Cloud::DataCatalog::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module DataCatalog
      module V1
        Schema = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datacatalog.v1.Schema").msgclass
        ColumnSchema = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datacatalog.v1.ColumnSchema").msgclass
        ColumnSchema::LookerColumnSpec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datacatalog.v1.ColumnSchema.LookerColumnSpec").msgclass
        ColumnSchema::LookerColumnSpec::LookerColumnType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datacatalog.v1.ColumnSchema.LookerColumnSpec.LookerColumnType").enummodule
        ColumnSchema::IndexingType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datacatalog.v1.ColumnSchema.IndexingType").enummodule
      end
    end
  end
end
