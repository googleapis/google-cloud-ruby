# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/datacatalog/v1/dataplex_spec.proto

require 'google/protobuf'

require 'google/cloud/datacatalog/v1/common_pb'
require 'google/cloud/datacatalog/v1/physical_schema_pb'


descriptor_data = "\n/google/cloud/datacatalog/v1/dataplex_spec.proto\x12\x1bgoogle.cloud.datacatalog.v1\x1a(google/cloud/datacatalog/v1/common.proto\x1a\x31google/cloud/datacatalog/v1/physical_schema.proto\"\x8f\x01\n\x0c\x44\x61taplexSpec\x12\r\n\x05\x61sset\x18\x01 \x01(\t\x12@\n\x0b\x64\x61ta_format\x18\x02 \x01(\x0b\x32+.google.cloud.datacatalog.v1.PhysicalSchema\x12\x1a\n\x12\x63ompression_format\x18\x03 \x01(\t\x12\x12\n\nproject_id\x18\x04 \x01(\t\"W\n\x13\x44\x61taplexFilesetSpec\x12@\n\rdataplex_spec\x18\x01 \x01(\x0b\x32).google.cloud.datacatalog.v1.DataplexSpec\"\xb8\x01\n\x11\x44\x61taplexTableSpec\x12K\n\x0f\x65xternal_tables\x18\x01 \x03(\x0b\x32\x32.google.cloud.datacatalog.v1.DataplexExternalTable\x12@\n\rdataplex_spec\x18\x02 \x01(\x0b\x32).google.cloud.datacatalog.v1.DataplexSpec\x12\x14\n\x0cuser_managed\x18\x03 \x01(\x08\"\xaf\x01\n\x15\x44\x61taplexExternalTable\x12=\n\x06system\x18\x01 \x01(\x0e\x32-.google.cloud.datacatalog.v1.IntegratedSystem\x12\x1c\n\x14\x66ully_qualified_name\x18\x1c \x01(\t\x12\x1d\n\x15google_cloud_resource\x18\x03 \x01(\t\x12\x1a\n\x12\x64\x61ta_catalog_entry\x18\x04 \x01(\tB\xd9\x01\n\x1f\x63om.google.cloud.datacatalog.v1B\x11\x44\x61taplexSpecProtoP\x01ZAcloud.google.com/go/datacatalog/apiv1/datacatalogpb;datacatalogpb\xf8\x01\x01\xaa\x02\x1bGoogle.Cloud.DataCatalog.V1\xca\x02\x1bGoogle\\Cloud\\DataCatalog\\V1\xea\x02\x1eGoogle::Cloud::DataCatalog::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.cloud.datacatalog.v1.PhysicalSchema", "google/cloud/datacatalog/v1/physical_schema.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module DataCatalog
      module V1
        DataplexSpec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datacatalog.v1.DataplexSpec").msgclass
        DataplexFilesetSpec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datacatalog.v1.DataplexFilesetSpec").msgclass
        DataplexTableSpec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datacatalog.v1.DataplexTableSpec").msgclass
        DataplexExternalTable = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datacatalog.v1.DataplexExternalTable").msgclass
      end
    end
  end
end
