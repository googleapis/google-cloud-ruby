# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/datacatalog/v1/dump_content.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/cloud/datacatalog/v1/datacatalog_pb'
require 'google/cloud/datacatalog/v1/tags_pb'


descriptor_data = "\n.google/cloud/datacatalog/v1/dump_content.proto\x12\x1bgoogle.cloud.datacatalog.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a-google/cloud/datacatalog/v1/datacatalog.proto\x1a&google/cloud/datacatalog/v1/tags.proto\"\xc7\x01\n\x0bTaggedEntry\x12\x36\n\x08v1_entry\x18\x01 \x01(\x0b\x32\".google.cloud.datacatalog.v1.EntryH\x00\x12;\n\x0cpresent_tags\x18\x02 \x03(\x0b\x32 .google.cloud.datacatalog.v1.TagB\x03\xe0\x41\x01\x12:\n\x0b\x61\x62sent_tags\x18\x03 \x03(\x0b\x32 .google.cloud.datacatalog.v1.TagB\x03\xe0\x41\x01\x42\x07\n\x05\x65ntry\"T\n\x08\x44umpItem\x12@\n\x0ctagged_entry\x18\x01 \x01(\x0b\x32(.google.cloud.datacatalog.v1.TaggedEntryH\x00\x42\x06\n\x04itemB\xd8\x01\n\x1f\x63om.google.cloud.datacatalog.v1B\x10\x44umpContentProtoP\x01ZAcloud.google.com/go/datacatalog/apiv1/datacatalogpb;datacatalogpb\xf8\x01\x01\xaa\x02\x1bGoogle.Cloud.DataCatalog.V1\xca\x02\x1bGoogle\\Cloud\\DataCatalog\\V1\xea\x02\x1eGoogle::Cloud::DataCatalog::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.cloud.datacatalog.v1.Entry", "google/cloud/datacatalog/v1/datacatalog.proto"],
    ["google.cloud.datacatalog.v1.Tag", "google/cloud/datacatalog/v1/tags.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module DataCatalog
      module V1
        TaggedEntry = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datacatalog.v1.TaggedEntry").msgclass
        DumpItem = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.datacatalog.v1.DumpItem").msgclass
      end
    end
  end
end
