# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/securitycenter/v2/ip_rules.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'


descriptor_data = "\n-google/cloud/securitycenter/v2/ip_rules.proto\x12\x1egoogle.cloud.securitycenter.v2\x1a\x1fgoogle/api/field_behavior.proto\"\xe2\x02\n\x07IpRules\x12\x44\n\tdirection\x18\x01 \x01(\x0e\x32\x31.google.cloud.securitycenter.v2.IpRules.Direction\x12:\n\x07\x61llowed\x18\x02 \x01(\x0b\x32\'.google.cloud.securitycenter.v2.AllowedH\x00\x12\x38\n\x06\x64\x65nied\x18\x03 \x01(\x0b\x32&.google.cloud.securitycenter.v2.DeniedH\x00\x12\x18\n\x10source_ip_ranges\x18\x04 \x03(\t\x12\x1d\n\x15\x64\x65stination_ip_ranges\x18\x05 \x03(\t\x12\x18\n\x10\x65xposed_services\x18\x06 \x03(\t\"?\n\tDirection\x12\x19\n\x15\x44IRECTION_UNSPECIFIED\x10\x00\x12\x0b\n\x07INGRESS\x10\x01\x12\n\n\x06\x45GRESS\x10\x02\x42\x07\n\x05rules\"\x8d\x01\n\x06IpRule\x12\x10\n\x08protocol\x18\x01 \x01(\t\x12J\n\x0bport_ranges\x18\x02 \x03(\x0b\x32\x30.google.cloud.securitycenter.v2.IpRule.PortRangeB\x03\xe0\x41\x01\x1a%\n\tPortRange\x12\x0b\n\x03min\x18\x01 \x01(\x03\x12\x0b\n\x03max\x18\x02 \x01(\x03\"H\n\x07\x41llowed\x12=\n\x08ip_rules\x18\x01 \x03(\x0b\x32&.google.cloud.securitycenter.v2.IpRuleB\x03\xe0\x41\x01\"G\n\x06\x44\x65nied\x12=\n\x08ip_rules\x18\x01 \x03(\x0b\x32&.google.cloud.securitycenter.v2.IpRuleB\x03\xe0\x41\x01\x42\xe6\x01\n\"com.google.cloud.securitycenter.v2B\x0cIpRulesProtoP\x01ZJcloud.google.com/go/securitycenter/apiv2/securitycenterpb;securitycenterpb\xaa\x02\x1eGoogle.Cloud.SecurityCenter.V2\xca\x02\x1eGoogle\\Cloud\\SecurityCenter\\V2\xea\x02!Google::Cloud::SecurityCenter::V2b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module SecurityCenter
      module V2
        IpRules = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.securitycenter.v2.IpRules").msgclass
        IpRules::Direction = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.securitycenter.v2.IpRules.Direction").enummodule
        IpRule = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.securitycenter.v2.IpRule").msgclass
        IpRule::PortRange = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.securitycenter.v2.IpRule.PortRange").msgclass
        Allowed = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.securitycenter.v2.Allowed").msgclass
        Denied = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.securitycenter.v2.Denied").msgclass
      end
    end
  end
end
