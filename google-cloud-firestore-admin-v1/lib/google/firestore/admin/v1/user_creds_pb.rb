# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/firestore/admin/v1/user_creds.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'
require 'google/protobuf/timestamp_pb'


descriptor_data = "\n*google/firestore/admin/v1/user_creds.proto\x12\x19google.firestore.admin.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb7\x04\n\tUserCreds\x12\x11\n\x04name\x18\x01 \x01(\tB\x03\xe0\x41\x08\x12\x34\n\x0b\x63reate_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x34\n\x0bupdate_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12>\n\x05state\x18\x04 \x01(\x0e\x32*.google.firestore.admin.v1.UserCreds.StateB\x03\xe0\x41\x03\x12\x1c\n\x0fsecure_password\x18\x05 \x01(\tB\x03\xe0\x41\x03\x12R\n\x11resource_identity\x18\x06 \x01(\x0b\x32\x35.google.firestore.admin.v1.UserCreds.ResourceIdentityH\x00\x1a*\n\x10ResourceIdentity\x12\x16\n\tprincipal\x18\x01 \x01(\tB\x03\xe0\x41\x03\"9\n\x05State\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\x0b\n\x07\x45NABLED\x10\x01\x12\x0c\n\x08\x44ISABLED\x10\x02:}\xea\x41z\n\"firestore.googleapis.com/UserCreds\x12>projects/{project}/databases/{database}/userCreds/{user_creds}*\tuserCreds2\tuserCredsB\x13\n\x11UserCredsIdentityB\xdd\x01\n\x1d\x63om.google.firestore.admin.v1B\x0eUserCredsProtoP\x01Z9cloud.google.com/go/firestore/apiv1/admin/adminpb;adminpb\xa2\x02\x04GCFS\xaa\x02\x1fGoogle.Cloud.Firestore.Admin.V1\xca\x02\x1fGoogle\\Cloud\\Firestore\\Admin\\V1\xea\x02#Google::Cloud::Firestore::Admin::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.protobuf.Timestamp", "google/protobuf/timestamp.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module Firestore
      module Admin
        module V1
          UserCreds = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.firestore.admin.v1.UserCreds").msgclass
          UserCreds::ResourceIdentity = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.firestore.admin.v1.UserCreds.ResourceIdentity").msgclass
          UserCreds::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.firestore.admin.v1.UserCreds.State").enummodule
        end
      end
    end
  end
end
