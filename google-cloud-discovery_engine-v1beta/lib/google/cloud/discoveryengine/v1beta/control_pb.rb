# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1beta/control.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/resource_pb'
require 'google/cloud/discoveryengine/v1beta/common_pb'
require 'google/protobuf/timestamp_pb'


descriptor_data = "\n1google/cloud/discoveryengine/v1beta/control.proto\x12#google.cloud.discoveryengine.v1beta\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\x30google/cloud/discoveryengine/v1beta/common.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xca\x02\n\tCondition\x12M\n\x0bquery_terms\x18\x02 \x03(\x0b\x32\x38.google.cloud.discoveryengine.v1beta.Condition.QueryTerm\x12S\n\x11\x61\x63tive_time_range\x18\x03 \x03(\x0b\x32\x38.google.cloud.discoveryengine.v1beta.Condition.TimeRange\x1a.\n\tQueryTerm\x12\r\n\x05value\x18\x01 \x01(\t\x12\x12\n\nfull_match\x18\x02 \x01(\x08\x1ai\n\tTimeRange\x12.\n\nstart_time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08\x65nd_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\xb0\n\n\x07\x43ontrol\x12P\n\x0c\x62oost_action\x18\x06 \x01(\x0b\x32\x38.google.cloud.discoveryengine.v1beta.Control.BoostActionH\x00\x12R\n\rfilter_action\x18\x07 \x01(\x0b\x32\x39.google.cloud.discoveryengine.v1beta.Control.FilterActionH\x00\x12V\n\x0fredirect_action\x18\t \x01(\x0b\x32;.google.cloud.discoveryengine.v1beta.Control.RedirectActionH\x00\x12V\n\x0fsynonyms_action\x18\n \x01(\x0b\x32;.google.cloud.discoveryengine.v1beta.Control.SynonymsActionH\x00\x12\x11\n\x04name\x18\x01 \x01(\tB\x03\xe0\x41\x05\x12\x19\n\x0c\x64isplay_name\x18\x02 \x01(\tB\x03\xe0\x41\x02\x12*\n\x1d\x61ssociated_serving_config_ids\x18\x03 \x03(\tB\x03\xe0\x41\x03\x12P\n\rsolution_type\x18\x04 \x01(\x0e\x32\x31.google.cloud.discoveryengine.v1beta.SolutionTypeB\x06\xe0\x41\x02\xe0\x41\x05\x12\x45\n\tuse_cases\x18\x08 \x03(\x0e\x32\x32.google.cloud.discoveryengine.v1beta.SearchUseCase\x12\x42\n\nconditions\x18\x05 \x03(\x0b\x32..google.cloud.discoveryengine.v1beta.Condition\x1a|\n\x0b\x42oostAction\x12\x12\n\x05\x62oost\x18\x01 \x01(\x02\x42\x03\xe0\x41\x02\x12\x13\n\x06\x66ilter\x18\x02 \x01(\tB\x03\xe0\x41\x02\x12\x44\n\ndata_store\x18\x03 \x01(\tB0\xe0\x41\x02\xfa\x41*\n(discoveryengine.googleapis.com/DataStore\x1ai\n\x0c\x46ilterAction\x12\x13\n\x06\x66ilter\x18\x01 \x01(\tB\x03\xe0\x41\x02\x12\x44\n\ndata_store\x18\x02 \x01(\tB0\xe0\x41\x02\xfa\x41*\n(discoveryengine.googleapis.com/DataStore\x1a+\n\x0eRedirectAction\x12\x19\n\x0credirect_uri\x18\x01 \x01(\tB\x03\xe0\x41\x02\x1a\"\n\x0eSynonymsAction\x12\x10\n\x08synonyms\x18\x01 \x03(\t:\xd3\x02\xea\x41\xcf\x02\n&discoveryengine.googleapis.com/Control\x12Rprojects/{project}/locations/{location}/dataStores/{data_store}/controls/{control}\x12kprojects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/controls/{control}\x12\x64projects/{project}/locations/{location}/collections/{collection}/engines/{engine}/controls/{control}B\x08\n\x06\x61\x63tionB\x93\x02\n\'com.google.cloud.discoveryengine.v1betaB\x0c\x43ontrolProtoP\x01ZQcloud.google.com/go/discoveryengine/apiv1beta/discoveryenginepb;discoveryenginepb\xa2\x02\x0f\x44ISCOVERYENGINE\xaa\x02#Google.Cloud.DiscoveryEngine.V1Beta\xca\x02#Google\\Cloud\\DiscoveryEngine\\V1beta\xea\x02&Google::Cloud::DiscoveryEngine::V1betab\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.protobuf.Timestamp", "google/protobuf/timestamp.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module DiscoveryEngine
      module V1beta
        Condition = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1beta.Condition").msgclass
        Condition::QueryTerm = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1beta.Condition.QueryTerm").msgclass
        Condition::TimeRange = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1beta.Condition.TimeRange").msgclass
        Control = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1beta.Control").msgclass
        Control::BoostAction = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1beta.Control.BoostAction").msgclass
        Control::FilterAction = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1beta.Control.FilterAction").msgclass
        Control::RedirectAction = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1beta.Control.RedirectAction").msgclass
        Control::SynonymsAction = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.discoveryengine.v1beta.Control.SynonymsAction").msgclass
      end
    end
  end
end
