# frozen_string_literal: true

# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!


module Google
  module Cloud
    module Talent
      module V4
        module JobService
          # Path helper methods for the JobService API.
          module Paths
            ##
            # Create a fully-qualified Company resource string.
            #
            # The resource will be in the following format:
            #
            # `projects/{project}/tenants/{tenant}/companies/{company}`
            #
            # @param project [String]
            # @param tenant [String]
            # @param company [String]
            #
            # @return [::String]
            def company_path project:, tenant:, company:
              raise ::ArgumentError, "project cannot contain /" if project.to_s.include? "/"
              raise ::ArgumentError, "tenant cannot contain /" if tenant.to_s.include? "/"

              "projects/#{project}/tenants/#{tenant}/companies/#{company}"
            end

            ##
            # Create a fully-qualified Job resource string.
            #
            # The resource will be in the following format:
            #
            # `projects/{project}/tenants/{tenant}/jobs/{job}`
            #
            # @param project [String]
            # @param tenant [String]
            # @param job [String]
            #
            # @return [::String]
            def job_path project:, tenant:, job:
              raise ::ArgumentError, "project cannot contain /" if project.to_s.include? "/"
              raise ::ArgumentError, "tenant cannot contain /" if tenant.to_s.include? "/"

              "projects/#{project}/tenants/#{tenant}/jobs/#{job}"
            end

            ##
            # Create a fully-qualified Tenant resource string.
            #
            # The resource will be in the following format:
            #
            # `projects/{project}/tenants/{tenant}`
            #
            # @param project [String]
            # @param tenant [String]
            #
            # @return [::String]
            def tenant_path project:, tenant:
              raise ::ArgumentError, "project cannot contain /" if project.to_s.include? "/"

              "projects/#{project}/tenants/#{tenant}"
            end

            extend self
          end
        end
      end
    end
  end
end
