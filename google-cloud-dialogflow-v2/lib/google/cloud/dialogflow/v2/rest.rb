# frozen_string_literal: true

# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!

require "google/cloud/dialogflow/v2/agents/rest"
require "google/cloud/dialogflow/v2/contexts/rest"
require "google/cloud/dialogflow/v2/intents/rest"
require "google/cloud/dialogflow/v2/entity_types/rest"
require "google/cloud/dialogflow/v2/session_entity_types/rest"
require "google/cloud/dialogflow/v2/sessions/rest"
require "google/cloud/dialogflow/v2/participants/rest"
require "google/cloud/dialogflow/v2/answer_records/rest"
require "google/cloud/dialogflow/v2/conversations/rest"
require "google/cloud/dialogflow/v2/conversation_datasets/rest"
require "google/cloud/dialogflow/v2/conversation_models/rest"
require "google/cloud/dialogflow/v2/conversation_profiles/rest"
require "google/cloud/dialogflow/v2/documents/rest"
require "google/cloud/dialogflow/v2/fulfillments/rest"
require "google/cloud/dialogflow/v2/environments/rest"
require "google/cloud/dialogflow/v2/knowledge_bases/rest"
require "google/cloud/dialogflow/v2/versions/rest"
require "google/cloud/dialogflow/v2/bindings_override"
require "google/cloud/dialogflow/v2/version"

module Google
  module Cloud
    module Dialogflow
      ##
      # To load just the REST part of this package, including all its services, and instantiate a REST client:
      #
      # @example
      #
      #     require "google/cloud/dialogflow/v2/rest"
      #     client = ::Google::Cloud::Dialogflow::V2::Agents::Rest::Client.new
      #
      module V2
      end
    end
  end
end
