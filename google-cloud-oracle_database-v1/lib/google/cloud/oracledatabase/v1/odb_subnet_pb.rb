# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/oracledatabase/v1/odb_subnet.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/api/field_info_pb'
require 'google/api/resource_pb'
require 'google/protobuf/timestamp_pb'


descriptor_data = "\n/google/cloud/oracledatabase/v1/odb_subnet.proto\x12\x1egoogle.cloud.oracledatabase.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1bgoogle/api/field_info.proto\x1a\x19google/api/resource.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc0\x05\n\tOdbSubnet\x12\x11\n\x04name\x18\x01 \x01(\tB\x03\xe0\x41\x08\x12\x17\n\ncidr_range\x18\x02 \x01(\tB\x03\xe0\x41\x02\x12G\n\x07purpose\x18\x03 \x01(\x0e\x32\x31.google.cloud.oracledatabase.v1.OdbSubnet.PurposeB\x03\xe0\x41\x02\x12J\n\x06labels\x18\x04 \x03(\x0b\x32\x35.google.cloud.oracledatabase.v1.OdbSubnet.LabelsEntryB\x03\xe0\x41\x01\x12\x34\n\x0b\x63reate_time\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12\x43\n\x05state\x18\x06 \x01(\x0e\x32/.google.cloud.oracledatabase.v1.OdbSubnet.StateB\x03\xe0\x41\x03\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"H\n\x07Purpose\x12\x17\n\x13PURPOSE_UNSPECIFIED\x10\x00\x12\x11\n\rCLIENT_SUBNET\x10\x01\x12\x11\n\rBACKUP_SUBNET\x10\x02\"\\\n\x05State\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\x10\n\x0cPROVISIONING\x10\x01\x12\r\n\tAVAILABLE\x10\x02\x12\x0f\n\x0bTERMINATING\x10\x03\x12\n\n\x06\x46\x41ILED\x10\x04:\x9f\x01\xea\x41\x9b\x01\n\'oracledatabase.googleapis.com/OdbSubnet\x12Yprojects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}*\nodbSubnets2\todbSubnet\"\xda\x01\n\x16\x43reateOdbSubnetRequest\x12?\n\x06parent\x18\x01 \x01(\tB/\xe0\x41\x02\xfa\x41)\x12\'oracledatabase.googleapis.com/OdbSubnet\x12\x1a\n\rodb_subnet_id\x18\x02 \x01(\tB\x03\xe0\x41\x02\x12\x42\n\nodb_subnet\x18\x03 \x01(\x0b\x32).google.cloud.oracledatabase.v1.OdbSubnetB\x03\xe0\x41\x02\x12\x1f\n\nrequest_id\x18\x04 \x01(\tB\x0b\xe0\x41\x01\xe2\x8c\xcf\xd7\x08\x02\x08\x01\"x\n\x16\x44\x65leteOdbSubnetRequest\x12=\n\x04name\x18\x01 \x01(\tB/\xe0\x41\x02\xfa\x41)\n\'oracledatabase.googleapis.com/OdbSubnet\x12\x1f\n\nrequest_id\x18\x02 \x01(\tB\x0b\xe0\x41\x01\xe2\x8c\xcf\xd7\x08\x02\x08\x01\"\xb5\x01\n\x15ListOdbSubnetsRequest\x12?\n\x06parent\x18\x01 \x01(\tB/\xe0\x41\x02\xfa\x41)\x12\'oracledatabase.googleapis.com/OdbSubnet\x12\x16\n\tpage_size\x18\x02 \x01(\x05\x42\x03\xe0\x41\x01\x12\x17\n\npage_token\x18\x03 \x01(\tB\x03\xe0\x41\x01\x12\x13\n\x06\x66ilter\x18\x04 \x01(\tB\x03\xe0\x41\x01\x12\x15\n\x08order_by\x18\x05 \x01(\tB\x03\xe0\x41\x01\"\x86\x01\n\x16ListOdbSubnetsResponse\x12>\n\x0bodb_subnets\x18\x01 \x03(\x0b\x32).google.cloud.oracledatabase.v1.OdbSubnet\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\x12\x13\n\x0bunreachable\x18\x03 \x03(\t\"T\n\x13GetOdbSubnetRequest\x12=\n\x04name\x18\x01 \x01(\tB/\xe0\x41\x02\xfa\x41)\n\'oracledatabase.googleapis.com/OdbSubnetB\xe8\x01\n\"com.google.cloud.oracledatabase.v1B\x0eOdbSubnetProtoP\x01ZJcloud.google.com/go/oracledatabase/apiv1/oracledatabasepb;oracledatabasepb\xaa\x02\x1eGoogle.Cloud.OracleDatabase.V1\xca\x02\x1eGoogle\\Cloud\\OracleDatabase\\V1\xea\x02!Google::Cloud::OracleDatabase::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.protobuf.Timestamp", "google/protobuf/timestamp.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module OracleDatabase
      module V1
        OdbSubnet = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.oracledatabase.v1.OdbSubnet").msgclass
        OdbSubnet::Purpose = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.oracledatabase.v1.OdbSubnet.Purpose").enummodule
        OdbSubnet::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.oracledatabase.v1.OdbSubnet.State").enummodule
        CreateOdbSubnetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.oracledatabase.v1.CreateOdbSubnetRequest").msgclass
        DeleteOdbSubnetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.oracledatabase.v1.DeleteOdbSubnetRequest").msgclass
        ListOdbSubnetsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.oracledatabase.v1.ListOdbSubnetsRequest").msgclass
        ListOdbSubnetsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.oracledatabase.v1.ListOdbSubnetsResponse").msgclass
        GetOdbSubnetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.oracledatabase.v1.GetOdbSubnetRequest").msgclass
      end
    end
  end
end
