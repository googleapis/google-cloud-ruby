# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/chat/v1/history_state.proto

require 'google/protobuf'


descriptor_data = "\n\"google/chat/v1/history_state.proto\x12\x0egoogle.chat.v1*N\n\x0cHistoryState\x12\x1d\n\x19HISTORY_STATE_UNSPECIFIED\x10\x00\x12\x0f\n\x0bHISTORY_OFF\x10\x01\x12\x0e\n\nHISTORY_ON\x10\x02\x42\x9c\x01\n\x12\x63om.google.chat.v1B\x11HistoryStateProtoP\x01Z,cloud.google.com/go/chat/apiv1/chatpb;chatpb\xaa\x02\x13Google.Apps.Chat.V1\xca\x02\x13Google\\Apps\\Chat\\V1\xea\x02\x16Google::Apps::Chat::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Apps
    module Chat
      module V1
        HistoryState = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.chat.v1.HistoryState").enummodule
      end
    end
  end
end
