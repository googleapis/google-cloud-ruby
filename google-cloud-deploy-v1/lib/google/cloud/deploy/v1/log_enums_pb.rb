# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/deploy/v1/log_enums.proto

require 'google/protobuf'


descriptor_data = "\n&google/cloud/deploy/v1/log_enums.proto\x12\x16google.cloud.deploy.v1*\xf3\x01\n\x04Type\x12\x14\n\x10TYPE_UNSPECIFIED\x10\x00\x12$\n TYPE_PUBSUB_NOTIFICATION_FAILURE\x10\x01\x12\x1e\n\x1aTYPE_RESOURCE_STATE_CHANGE\x10\x03\x12\x18\n\x14TYPE_PROCESS_ABORTED\x10\x04\x12\x1d\n\x19TYPE_RESTRICTION_VIOLATED\x10\x05\x12\x19\n\x15TYPE_RESOURCE_DELETED\x10\x06\x12\x17\n\x13TYPE_ROLLOUT_UPDATE\x10\x07\x12\"\n\x1aTYPE_RENDER_STATUES_CHANGE\x10\x02\x1a\x02\x08\x01\x42\x61\n\x1a\x63om.google.cloud.deploy.v1B\rLogEnumsProtoP\x01Z2cloud.google.com/go/deploy/apiv1/deploypb;deploypbb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Cloud
    module Deploy
      module V1
        Type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.cloud.deploy.v1.Type").enummodule
      end
    end
  end
end
